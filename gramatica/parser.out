Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> init
Rule 1     init -> funciones_structs
Rule 2     funciones_structs -> funciones_structs funcion_struct
Rule 3     funciones_structs -> funcion_struct
Rule 4     funcion_struct -> funcion
Rule 5     funcion -> FN ID PIZQ PDER bloque
Rule 6     funcion -> FN ID PIZQ PDER FLECHA tipo_dato bloque
Rule 7     funcion -> FN ID PIZQ parametros PDER bloque
Rule 8     funcion -> FN ID PIZQ parametros PDER FLECHA tipo_dato bloque
Rule 9     parametros -> parametros COMA parametro
Rule 10    parametros -> parametro
Rule 11    parametro -> ID DOBLEPT tipo_dato
Rule 12    parametro -> ID DOBLEPT Y MUT dimensiones
Rule 13    llamadaF -> ID PIZQ PDER
Rule 14    llamadaF -> ID PIZQ lista_expresiones PDER
Rule 15    lista_expresiones -> lista_expresiones COMA expresion
Rule 16    lista_expresiones -> expresion
Rule 17    bloque -> LLAVEIZQ LLAVEDER
Rule 18    bloque -> LLAVEIZQ instrucciones LLAVEDER
Rule 19    instrucciones -> instrucciones instruccion
Rule 20    instrucciones -> instruccion
Rule 21    instruccion -> print PTCOMA
Rule 22    instruccion -> declaracion PTCOMA
Rule 23    instruccion -> asignacion PTCOMA
Rule 24    instruccion -> if_i
Rule 25    instruccion -> llamadaF PTCOMA
Rule 26    instruccion -> return PTCOMA
Rule 27    instruccion -> loop
Rule 28    instruccion -> break PTCOMA
Rule 29    instruccion -> while
Rule 30    instruccion -> continue PTCOMA
Rule 31    instruccion -> for
Rule 32    instruccion -> asignacionA PTCOMA
Rule 33    print -> PRINTLN NOT PIZQ lista_expresiones PDER
Rule 34    return -> RETURN
Rule 35    return -> RETURN expresion
Rule 36    asignacionA -> ID ubicaciones IGUAL expresion
Rule 37    declaracion -> LET MUT ID DOBLEPT tipo_dato IGUAL expresion
Rule 38    declaracion -> LET ID DOBLEPT tipo_dato IGUAL expresion
Rule 39    declaracion -> LET MUT ID IGUAL expresion
Rule 40    declaracion -> LET ID IGUAL expresion
Rule 41    declaracion -> LET MUT ID DOBLEPT dimensiones IGUAL expresion
Rule 42    declaracion -> LET ID DOBLEPT dimensiones IGUAL expresion
Rule 43    dimensiones -> CORIZQ tipo_dato CORDER
Rule 44    dimensiones -> CORIZQ tipo_dato PTCOMA expresion CORDER
Rule 45    dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER
Rule 46    dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
Rule 47    asignacion -> ID IGUAL expresion
Rule 48    if_i -> IF expresion bloque else
Rule 49    else -> ELSE if_i
Rule 50    else -> ELSE bloque
Rule 51    else -> empty
Rule 52    empty -> <empty>
Rule 53    loop -> LOOP bloque
Rule 54    break -> BREAK
Rule 55    break -> BREAK expresion
Rule 56    while -> WHILE expresion bloque
Rule 57    continue -> CONTINUE
Rule 58    for -> FOR ID IN expresion PUNTO PUNTO expresion bloque
Rule 59    for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
Rule 60    for -> FOR ID IN expresion bloque
Rule 61    expresion -> MENOS expresion
Rule 62    expresion -> expresion MAS expresion
Rule 63    expresion -> expresion MENOS expresion
Rule 64    expresion -> expresion MULTIPLICACION expresion
Rule 65    expresion -> expresion DIVISION expresion
Rule 66    expresion -> expresion MODULO expresion
Rule 67    expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
Rule 68    expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
Rule 69    expresion -> PIZQ expresion PDER
Rule 70    expresion -> expresion MAYOR expresion
Rule 71    expresion -> expresion MENOR expresion
Rule 72    expresion -> expresion MAYORIGUAL expresion
Rule 73    expresion -> expresion MENORIGUAL expresion
Rule 74    expresion -> expresion IGUALIGUAL expresion
Rule 75    expresion -> expresion DIFERENTE expresion
Rule 76    expresion -> expresion AND expresion
Rule 77    expresion -> expresion OR expresion
Rule 78    expresion -> NOT expresion
Rule 79    expresion -> tostring
Rule 80    expresion -> as
Rule 81    expresion -> abs
Rule 82    expresion -> sqrt
Rule 83    expresion -> if_e
Rule 84    expresion -> llamadaF
Rule 85    expresion -> loop
Rule 86    expresion -> arraycontenido
Rule 87    expresion -> accesoarray
Rule 88    expresion -> referencia
Rule 89    expresion -> len
Rule 90    expresion -> clone
Rule 91    clone -> expresion PUNTO CLONE PIZQ PDER
Rule 92    len -> expresion PUNTO LEN PIZQ PDER
Rule 93    referencia -> Y MUT ID
Rule 94    accesoarray -> ID ubicaciones
Rule 95    ubicaciones -> ubicaciones ubicacion
Rule 96    ubicaciones -> ubicacion
Rule 97    ubicacion -> CORIZQ expresion CORDER
Rule 98    arraycontenido -> CORIZQ lista_expresiones CORDER
Rule 99    tostring -> expresion PUNTO TOSTRING PIZQ PDER
Rule 100   tostring -> expresion PUNTO TOOWNED PIZQ PDER
Rule 101   as -> expresion AS I64
Rule 102   as -> expresion AS F64
Rule 103   abs -> expresion PUNTO ABS PIZQ PDER
Rule 104   sqrt -> expresion PUNTO SQRT PIZQ PDER
Rule 105   if_e -> IF expresion LLAVEIZQ expresion LLAVEDER
Rule 106   if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
Rule 107   if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse
Rule 108   if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
Rule 109   listaelse -> listaelse elseif
Rule 110   listaelse -> elseif
Rule 111   elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER
Rule 112   expresion -> ENTERO
Rule 113   expresion -> DECIMAL
Rule 114   expresion -> ID
Rule 115   expresion -> CARACTER
Rule 116   expresion -> CADENA
Rule 117   expresion -> TRUE
Rule 118   expresion -> FALSE
Rule 119   tipo_dato -> I64
Rule 120   tipo_dato -> F64
Rule 121   tipo_dato -> BOOL
Rule 122   tipo_dato -> CHAR
Rule 123   tipo_dato -> str
Rule 124   tipo_dato -> STRING
Rule 125   tipo_dato -> USIZE
Rule 126   str -> Y STR

Terminals, with rules where they appear

ABS                  : 103
AND                  : 76
AS                   : 101 102
BOOL                 : 121
BREAK                : 54 55
CADENA               : 116
CARACTER             : 115
CHAR                 : 122
CHARS                : 59
CLONE                : 91
COMA                 : 9 15 67 68
CONTINUE             : 57
CORDER               : 43 44 45 45 46 46 46 97 98
CORIZQ               : 43 44 45 45 46 46 46 97 98
DECIMAL              : 113
DIFERENTE            : 75
DIVISION             : 65
DOBLEPT              : 11 12 37 38 41 42 67 67 68 68
ELSE                 : 49 50 106 108 111
ENTERO               : 112
F64                  : 68 102 120
FALSE                : 118
FLECHA               : 6 8
FN                   : 5 6 7 8
FOR                  : 58 59 60
I64                  : 67 101 119
ID                   : 5 6 7 8 11 12 13 14 36 37 38 39 40 41 42 47 58 59 60 93 94 114
IF                   : 48 105 106 107 108 111
IGUAL                : 36 37 38 39 40 41 42 47
IGUALIGUAL           : 74
IN                   : 58 59 60
LEN                  : 92
LET                  : 37 38 39 40 41 42
LLAVEDER             : 17 18 105 106 106 107 108 108 111
LLAVEIZQ             : 17 18 105 106 106 107 108 108 111
LOOP                 : 53
MAS                  : 62
MAYOR                : 70
MAYORIGUAL           : 72
MENOR                : 71
MENORIGUAL           : 73
MENOS                : 61 63
MODULO               : 66
MULTIPLICACION       : 64
MUT                  : 12 37 39 41 93
NOT                  : 33 78
OR                   : 77
PDER                 : 5 6 7 8 13 14 33 59 67 68 69 91 92 99 100 103 104
PIZQ                 : 5 6 7 8 13 14 33 59 67 68 69 91 92 99 100 103 104
POW                  : 67
POWF                 : 68
PRINTLN              : 33
PTCOMA               : 21 22 23 25 26 28 30 32 44 45 45 46 46 46
PUNTO                : 58 58 59 91 92 99 100 103 104
RETURN               : 34 35
SQRT                 : 104
STR                  : 126
STRING               : 124
TOOWNED              : 100
TOSTRING             : 99
TRUE                 : 117
USIZE                : 125
WHILE                : 56
Y                    : 12 93 126
error                : 

Nonterminals, with rules where they appear

abs                  : 81
accesoarray          : 87
arraycontenido       : 86
as                   : 80
asignacion           : 23
asignacionA          : 32
bloque               : 5 6 7 8 48 50 53 56 58 59 60
break                : 28
clone                : 90
continue             : 30
declaracion          : 22
dimensiones          : 12 41 42
else                 : 48
elseif               : 109 110
empty                : 51
expresion            : 15 16 35 36 37 38 39 40 41 42 44 45 45 46 46 46 47 48 55 56 58 58 59 60 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 70 70 71 71 72 72 73 73 74 74 75 75 76 76 77 77 78 91 92 97 99 100 101 102 103 104 105 105 106 106 106 107 107 108 108 108 111 111
for                  : 31
funcion              : 4
funcion_struct       : 2 3
funciones_structs    : 1 2
if_e                 : 83
if_i                 : 24 49
init                 : 0
instruccion          : 19 20 108 108 111
instrucciones        : 18 19
len                  : 89
lista_expresiones    : 14 15 33 98
listaelse            : 107 108 109
llamadaF             : 25 84
loop                 : 27 85
parametro            : 9 10
parametros           : 7 8 9
print                : 21
referencia           : 88
return               : 26
sqrt                 : 82
str                  : 123
tipo_dato            : 6 8 11 37 38 43 44 45 46
tostring             : 79
ubicacion            : 95 96
ubicaciones          : 36 94 95
while                : 29

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . funciones_structs
    (2) funciones_structs -> . funciones_structs funcion_struct
    (3) funciones_structs -> . funcion_struct
    (4) funcion_struct -> . funcion
    (5) funcion -> . FN ID PIZQ PDER bloque
    (6) funcion -> . FN ID PIZQ PDER FLECHA tipo_dato bloque
    (7) funcion -> . FN ID PIZQ parametros PDER bloque
    (8) funcion -> . FN ID PIZQ parametros PDER FLECHA tipo_dato bloque

    FN              shift and go to state 5

    init                           shift and go to state 1
    funciones_structs              shift and go to state 2
    funcion_struct                 shift and go to state 3
    funcion                        shift and go to state 4

state 1

    (0) S' -> init .



state 2

    (1) init -> funciones_structs .
    (2) funciones_structs -> funciones_structs . funcion_struct
    (4) funcion_struct -> . funcion
    (5) funcion -> . FN ID PIZQ PDER bloque
    (6) funcion -> . FN ID PIZQ PDER FLECHA tipo_dato bloque
    (7) funcion -> . FN ID PIZQ parametros PDER bloque
    (8) funcion -> . FN ID PIZQ parametros PDER FLECHA tipo_dato bloque

    $end            reduce using rule 1 (init -> funciones_structs .)
    FN              shift and go to state 5

    funcion_struct                 shift and go to state 6
    funcion                        shift and go to state 4

state 3

    (3) funciones_structs -> funcion_struct .

    FN              reduce using rule 3 (funciones_structs -> funcion_struct .)
    $end            reduce using rule 3 (funciones_structs -> funcion_struct .)


state 4

    (4) funcion_struct -> funcion .

    FN              reduce using rule 4 (funcion_struct -> funcion .)
    $end            reduce using rule 4 (funcion_struct -> funcion .)


state 5

    (5) funcion -> FN . ID PIZQ PDER bloque
    (6) funcion -> FN . ID PIZQ PDER FLECHA tipo_dato bloque
    (7) funcion -> FN . ID PIZQ parametros PDER bloque
    (8) funcion -> FN . ID PIZQ parametros PDER FLECHA tipo_dato bloque

    ID              shift and go to state 7


state 6

    (2) funciones_structs -> funciones_structs funcion_struct .

    FN              reduce using rule 2 (funciones_structs -> funciones_structs funcion_struct .)
    $end            reduce using rule 2 (funciones_structs -> funciones_structs funcion_struct .)


state 7

    (5) funcion -> FN ID . PIZQ PDER bloque
    (6) funcion -> FN ID . PIZQ PDER FLECHA tipo_dato bloque
    (7) funcion -> FN ID . PIZQ parametros PDER bloque
    (8) funcion -> FN ID . PIZQ parametros PDER FLECHA tipo_dato bloque

    PIZQ            shift and go to state 8


state 8

    (5) funcion -> FN ID PIZQ . PDER bloque
    (6) funcion -> FN ID PIZQ . PDER FLECHA tipo_dato bloque
    (7) funcion -> FN ID PIZQ . parametros PDER bloque
    (8) funcion -> FN ID PIZQ . parametros PDER FLECHA tipo_dato bloque
    (9) parametros -> . parametros COMA parametro
    (10) parametros -> . parametro
    (11) parametro -> . ID DOBLEPT tipo_dato
    (12) parametro -> . ID DOBLEPT Y MUT dimensiones

    PDER            shift and go to state 10
    ID              shift and go to state 9

    parametros                     shift and go to state 11
    parametro                      shift and go to state 12

state 9

    (11) parametro -> ID . DOBLEPT tipo_dato
    (12) parametro -> ID . DOBLEPT Y MUT dimensiones

    DOBLEPT         shift and go to state 13


state 10

    (5) funcion -> FN ID PIZQ PDER . bloque
    (6) funcion -> FN ID PIZQ PDER . FLECHA tipo_dato bloque
    (17) bloque -> . LLAVEIZQ LLAVEDER
    (18) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    FLECHA          shift and go to state 15
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 14

state 11

    (7) funcion -> FN ID PIZQ parametros . PDER bloque
    (8) funcion -> FN ID PIZQ parametros . PDER FLECHA tipo_dato bloque
    (9) parametros -> parametros . COMA parametro

    PDER            shift and go to state 17
    COMA            shift and go to state 18


state 12

    (10) parametros -> parametro .

    PDER            reduce using rule 10 (parametros -> parametro .)
    COMA            reduce using rule 10 (parametros -> parametro .)


state 13

    (11) parametro -> ID DOBLEPT . tipo_dato
    (12) parametro -> ID DOBLEPT . Y MUT dimensiones
    (119) tipo_dato -> . I64
    (120) tipo_dato -> . F64
    (121) tipo_dato -> . BOOL
    (122) tipo_dato -> . CHAR
    (123) tipo_dato -> . str
    (124) tipo_dato -> . STRING
    (125) tipo_dato -> . USIZE
    (126) str -> . Y STR

    Y               shift and go to state 20
    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27

    tipo_dato                      shift and go to state 19
    str                            shift and go to state 25

state 14

    (5) funcion -> FN ID PIZQ PDER bloque .

    FN              reduce using rule 5 (funcion -> FN ID PIZQ PDER bloque .)
    $end            reduce using rule 5 (funcion -> FN ID PIZQ PDER bloque .)


state 15

    (6) funcion -> FN ID PIZQ PDER FLECHA . tipo_dato bloque
    (119) tipo_dato -> . I64
    (120) tipo_dato -> . F64
    (121) tipo_dato -> . BOOL
    (122) tipo_dato -> . CHAR
    (123) tipo_dato -> . str
    (124) tipo_dato -> . STRING
    (125) tipo_dato -> . USIZE
    (126) str -> . Y STR

    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 28
    str                            shift and go to state 25

state 16

    (17) bloque -> LLAVEIZQ . LLAVEDER
    (18) bloque -> LLAVEIZQ . instrucciones LLAVEDER
    (19) instrucciones -> . instrucciones instruccion
    (20) instrucciones -> . instruccion
    (21) instruccion -> . print PTCOMA
    (22) instruccion -> . declaracion PTCOMA
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . if_i
    (25) instruccion -> . llamadaF PTCOMA
    (26) instruccion -> . return PTCOMA
    (27) instruccion -> . loop
    (28) instruccion -> . break PTCOMA
    (29) instruccion -> . while
    (30) instruccion -> . continue PTCOMA
    (31) instruccion -> . for
    (32) instruccion -> . asignacionA PTCOMA
    (33) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (37) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (38) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (39) declaracion -> . LET MUT ID IGUAL expresion
    (40) declaracion -> . LET ID IGUAL expresion
    (41) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (42) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (47) asignacion -> . ID IGUAL expresion
    (48) if_i -> . IF expresion bloque else
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (34) return -> . RETURN
    (35) return -> . RETURN expresion
    (53) loop -> . LOOP bloque
    (54) break -> . BREAK
    (55) break -> . BREAK expresion
    (56) while -> . WHILE expresion bloque
    (57) continue -> . CONTINUE
    (58) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (59) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (60) for -> . FOR ID IN expresion bloque
    (36) asignacionA -> . ID ubicaciones IGUAL expresion

    LLAVEDER        shift and go to state 30
    PRINTLN         shift and go to state 45
    LET             shift and go to state 46
    ID              shift and go to state 47
    IF              shift and go to state 48
    RETURN          shift and go to state 49
    LOOP            shift and go to state 50
    BREAK           shift and go to state 51
    WHILE           shift and go to state 52
    CONTINUE        shift and go to state 53
    FOR             shift and go to state 54

    instrucciones                  shift and go to state 31
    instruccion                    shift and go to state 32
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    llamadaF                       shift and go to state 37
    return                         shift and go to state 38
    loop                           shift and go to state 39
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    asignacionA                    shift and go to state 44

state 17

    (7) funcion -> FN ID PIZQ parametros PDER . bloque
    (8) funcion -> FN ID PIZQ parametros PDER . FLECHA tipo_dato bloque
    (17) bloque -> . LLAVEIZQ LLAVEDER
    (18) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    FLECHA          shift and go to state 56
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 55

state 18

    (9) parametros -> parametros COMA . parametro
    (11) parametro -> . ID DOBLEPT tipo_dato
    (12) parametro -> . ID DOBLEPT Y MUT dimensiones

    ID              shift and go to state 9

    parametro                      shift and go to state 57

state 19

    (11) parametro -> ID DOBLEPT tipo_dato .

    PDER            reduce using rule 11 (parametro -> ID DOBLEPT tipo_dato .)
    COMA            reduce using rule 11 (parametro -> ID DOBLEPT tipo_dato .)


state 20

    (12) parametro -> ID DOBLEPT Y . MUT dimensiones
    (126) str -> Y . STR

    MUT             shift and go to state 58
    STR             shift and go to state 59


state 21

    (119) tipo_dato -> I64 .

    PDER            reduce using rule 119 (tipo_dato -> I64 .)
    COMA            reduce using rule 119 (tipo_dato -> I64 .)
    LLAVEIZQ        reduce using rule 119 (tipo_dato -> I64 .)
    CORDER          reduce using rule 119 (tipo_dato -> I64 .)
    PTCOMA          reduce using rule 119 (tipo_dato -> I64 .)
    IGUAL           reduce using rule 119 (tipo_dato -> I64 .)


state 22

    (120) tipo_dato -> F64 .

    PDER            reduce using rule 120 (tipo_dato -> F64 .)
    COMA            reduce using rule 120 (tipo_dato -> F64 .)
    LLAVEIZQ        reduce using rule 120 (tipo_dato -> F64 .)
    CORDER          reduce using rule 120 (tipo_dato -> F64 .)
    PTCOMA          reduce using rule 120 (tipo_dato -> F64 .)
    IGUAL           reduce using rule 120 (tipo_dato -> F64 .)


state 23

    (121) tipo_dato -> BOOL .

    PDER            reduce using rule 121 (tipo_dato -> BOOL .)
    COMA            reduce using rule 121 (tipo_dato -> BOOL .)
    LLAVEIZQ        reduce using rule 121 (tipo_dato -> BOOL .)
    CORDER          reduce using rule 121 (tipo_dato -> BOOL .)
    PTCOMA          reduce using rule 121 (tipo_dato -> BOOL .)
    IGUAL           reduce using rule 121 (tipo_dato -> BOOL .)


state 24

    (122) tipo_dato -> CHAR .

    PDER            reduce using rule 122 (tipo_dato -> CHAR .)
    COMA            reduce using rule 122 (tipo_dato -> CHAR .)
    LLAVEIZQ        reduce using rule 122 (tipo_dato -> CHAR .)
    CORDER          reduce using rule 122 (tipo_dato -> CHAR .)
    PTCOMA          reduce using rule 122 (tipo_dato -> CHAR .)
    IGUAL           reduce using rule 122 (tipo_dato -> CHAR .)


state 25

    (123) tipo_dato -> str .

    PDER            reduce using rule 123 (tipo_dato -> str .)
    COMA            reduce using rule 123 (tipo_dato -> str .)
    LLAVEIZQ        reduce using rule 123 (tipo_dato -> str .)
    CORDER          reduce using rule 123 (tipo_dato -> str .)
    PTCOMA          reduce using rule 123 (tipo_dato -> str .)
    IGUAL           reduce using rule 123 (tipo_dato -> str .)


state 26

    (124) tipo_dato -> STRING .

    PDER            reduce using rule 124 (tipo_dato -> STRING .)
    COMA            reduce using rule 124 (tipo_dato -> STRING .)
    LLAVEIZQ        reduce using rule 124 (tipo_dato -> STRING .)
    CORDER          reduce using rule 124 (tipo_dato -> STRING .)
    PTCOMA          reduce using rule 124 (tipo_dato -> STRING .)
    IGUAL           reduce using rule 124 (tipo_dato -> STRING .)


state 27

    (125) tipo_dato -> USIZE .

    PDER            reduce using rule 125 (tipo_dato -> USIZE .)
    COMA            reduce using rule 125 (tipo_dato -> USIZE .)
    LLAVEIZQ        reduce using rule 125 (tipo_dato -> USIZE .)
    CORDER          reduce using rule 125 (tipo_dato -> USIZE .)
    PTCOMA          reduce using rule 125 (tipo_dato -> USIZE .)
    IGUAL           reduce using rule 125 (tipo_dato -> USIZE .)


state 28

    (6) funcion -> FN ID PIZQ PDER FLECHA tipo_dato . bloque
    (17) bloque -> . LLAVEIZQ LLAVEDER
    (18) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 60

state 29

    (126) str -> Y . STR

    STR             shift and go to state 59


state 30

    (17) bloque -> LLAVEIZQ LLAVEDER .

    FN              reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    $end            reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    LLAVEDER        reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    PRINTLN         reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    LET             reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    ID              reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    IF              reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    RETURN          reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    LOOP            reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    BREAK           reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    WHILE           reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    CONTINUE        reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    FOR             reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    MAS             reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    MENOS           reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    MULTIPLICACION  reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    DIVISION        reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    MODULO          reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    MAYOR           reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    MENOR           reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    MAYORIGUAL      reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    MENORIGUAL      reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    IGUALIGUAL      reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    DIFERENTE       reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    AND             reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    OR              reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    PUNTO           reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    AS              reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    LLAVEIZQ        reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    PTCOMA          reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    PDER            reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    COMA            reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    CORDER          reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    I64             reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    F64             reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    PIZQ            reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    NOT             reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    ENTERO          reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    DECIMAL         reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    CARACTER        reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    CADENA          reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    TRUE            reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    FALSE           reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    CORIZQ          reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    Y               reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)
    ELSE            reduce using rule 17 (bloque -> LLAVEIZQ LLAVEDER .)


state 31

    (18) bloque -> LLAVEIZQ instrucciones . LLAVEDER
    (19) instrucciones -> instrucciones . instruccion
    (21) instruccion -> . print PTCOMA
    (22) instruccion -> . declaracion PTCOMA
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . if_i
    (25) instruccion -> . llamadaF PTCOMA
    (26) instruccion -> . return PTCOMA
    (27) instruccion -> . loop
    (28) instruccion -> . break PTCOMA
    (29) instruccion -> . while
    (30) instruccion -> . continue PTCOMA
    (31) instruccion -> . for
    (32) instruccion -> . asignacionA PTCOMA
    (33) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (37) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (38) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (39) declaracion -> . LET MUT ID IGUAL expresion
    (40) declaracion -> . LET ID IGUAL expresion
    (41) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (42) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (47) asignacion -> . ID IGUAL expresion
    (48) if_i -> . IF expresion bloque else
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (34) return -> . RETURN
    (35) return -> . RETURN expresion
    (53) loop -> . LOOP bloque
    (54) break -> . BREAK
    (55) break -> . BREAK expresion
    (56) while -> . WHILE expresion bloque
    (57) continue -> . CONTINUE
    (58) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (59) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (60) for -> . FOR ID IN expresion bloque
    (36) asignacionA -> . ID ubicaciones IGUAL expresion

    LLAVEDER        shift and go to state 61
    PRINTLN         shift and go to state 45
    LET             shift and go to state 46
    ID              shift and go to state 47
    IF              shift and go to state 48
    RETURN          shift and go to state 49
    LOOP            shift and go to state 50
    BREAK           shift and go to state 51
    WHILE           shift and go to state 52
    CONTINUE        shift and go to state 53
    FOR             shift and go to state 54

    instruccion                    shift and go to state 62
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    llamadaF                       shift and go to state 37
    return                         shift and go to state 38
    loop                           shift and go to state 39
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    asignacionA                    shift and go to state 44

state 32

    (20) instrucciones -> instruccion .

    LLAVEDER        reduce using rule 20 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 20 (instrucciones -> instruccion .)
    LET             reduce using rule 20 (instrucciones -> instruccion .)
    ID              reduce using rule 20 (instrucciones -> instruccion .)
    IF              reduce using rule 20 (instrucciones -> instruccion .)
    RETURN          reduce using rule 20 (instrucciones -> instruccion .)
    LOOP            reduce using rule 20 (instrucciones -> instruccion .)
    BREAK           reduce using rule 20 (instrucciones -> instruccion .)
    WHILE           reduce using rule 20 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 20 (instrucciones -> instruccion .)
    FOR             reduce using rule 20 (instrucciones -> instruccion .)


state 33

    (21) instruccion -> print . PTCOMA

    PTCOMA          shift and go to state 63


state 34

    (22) instruccion -> declaracion . PTCOMA

    PTCOMA          shift and go to state 64


state 35

    (23) instruccion -> asignacion . PTCOMA

    PTCOMA          shift and go to state 65


state 36

    (24) instruccion -> if_i .

    LLAVEDER        reduce using rule 24 (instruccion -> if_i .)
    PRINTLN         reduce using rule 24 (instruccion -> if_i .)
    LET             reduce using rule 24 (instruccion -> if_i .)
    ID              reduce using rule 24 (instruccion -> if_i .)
    IF              reduce using rule 24 (instruccion -> if_i .)
    RETURN          reduce using rule 24 (instruccion -> if_i .)
    LOOP            reduce using rule 24 (instruccion -> if_i .)
    BREAK           reduce using rule 24 (instruccion -> if_i .)
    WHILE           reduce using rule 24 (instruccion -> if_i .)
    CONTINUE        reduce using rule 24 (instruccion -> if_i .)
    FOR             reduce using rule 24 (instruccion -> if_i .)
    MENOS           reduce using rule 24 (instruccion -> if_i .)
    I64             reduce using rule 24 (instruccion -> if_i .)
    F64             reduce using rule 24 (instruccion -> if_i .)
    PIZQ            reduce using rule 24 (instruccion -> if_i .)
    NOT             reduce using rule 24 (instruccion -> if_i .)
    ENTERO          reduce using rule 24 (instruccion -> if_i .)
    DECIMAL         reduce using rule 24 (instruccion -> if_i .)
    CARACTER        reduce using rule 24 (instruccion -> if_i .)
    CADENA          reduce using rule 24 (instruccion -> if_i .)
    TRUE            reduce using rule 24 (instruccion -> if_i .)
    FALSE           reduce using rule 24 (instruccion -> if_i .)
    CORIZQ          reduce using rule 24 (instruccion -> if_i .)
    Y               reduce using rule 24 (instruccion -> if_i .)


state 37

    (25) instruccion -> llamadaF . PTCOMA

    PTCOMA          shift and go to state 66


state 38

    (26) instruccion -> return . PTCOMA

    PTCOMA          shift and go to state 67


state 39

    (27) instruccion -> loop .

    LLAVEDER        reduce using rule 27 (instruccion -> loop .)
    PRINTLN         reduce using rule 27 (instruccion -> loop .)
    LET             reduce using rule 27 (instruccion -> loop .)
    ID              reduce using rule 27 (instruccion -> loop .)
    IF              reduce using rule 27 (instruccion -> loop .)
    RETURN          reduce using rule 27 (instruccion -> loop .)
    LOOP            reduce using rule 27 (instruccion -> loop .)
    BREAK           reduce using rule 27 (instruccion -> loop .)
    WHILE           reduce using rule 27 (instruccion -> loop .)
    CONTINUE        reduce using rule 27 (instruccion -> loop .)
    FOR             reduce using rule 27 (instruccion -> loop .)
    MENOS           reduce using rule 27 (instruccion -> loop .)
    I64             reduce using rule 27 (instruccion -> loop .)
    F64             reduce using rule 27 (instruccion -> loop .)
    PIZQ            reduce using rule 27 (instruccion -> loop .)
    NOT             reduce using rule 27 (instruccion -> loop .)
    ENTERO          reduce using rule 27 (instruccion -> loop .)
    DECIMAL         reduce using rule 27 (instruccion -> loop .)
    CARACTER        reduce using rule 27 (instruccion -> loop .)
    CADENA          reduce using rule 27 (instruccion -> loop .)
    TRUE            reduce using rule 27 (instruccion -> loop .)
    FALSE           reduce using rule 27 (instruccion -> loop .)
    CORIZQ          reduce using rule 27 (instruccion -> loop .)
    Y               reduce using rule 27 (instruccion -> loop .)


state 40

    (28) instruccion -> break . PTCOMA

    PTCOMA          shift and go to state 68


state 41

    (29) instruccion -> while .

    LLAVEDER        reduce using rule 29 (instruccion -> while .)
    PRINTLN         reduce using rule 29 (instruccion -> while .)
    LET             reduce using rule 29 (instruccion -> while .)
    ID              reduce using rule 29 (instruccion -> while .)
    IF              reduce using rule 29 (instruccion -> while .)
    RETURN          reduce using rule 29 (instruccion -> while .)
    LOOP            reduce using rule 29 (instruccion -> while .)
    BREAK           reduce using rule 29 (instruccion -> while .)
    WHILE           reduce using rule 29 (instruccion -> while .)
    CONTINUE        reduce using rule 29 (instruccion -> while .)
    FOR             reduce using rule 29 (instruccion -> while .)
    MENOS           reduce using rule 29 (instruccion -> while .)
    I64             reduce using rule 29 (instruccion -> while .)
    F64             reduce using rule 29 (instruccion -> while .)
    PIZQ            reduce using rule 29 (instruccion -> while .)
    NOT             reduce using rule 29 (instruccion -> while .)
    ENTERO          reduce using rule 29 (instruccion -> while .)
    DECIMAL         reduce using rule 29 (instruccion -> while .)
    CARACTER        reduce using rule 29 (instruccion -> while .)
    CADENA          reduce using rule 29 (instruccion -> while .)
    TRUE            reduce using rule 29 (instruccion -> while .)
    FALSE           reduce using rule 29 (instruccion -> while .)
    CORIZQ          reduce using rule 29 (instruccion -> while .)
    Y               reduce using rule 29 (instruccion -> while .)


state 42

    (30) instruccion -> continue . PTCOMA

    PTCOMA          shift and go to state 69


state 43

    (31) instruccion -> for .

    LLAVEDER        reduce using rule 31 (instruccion -> for .)
    PRINTLN         reduce using rule 31 (instruccion -> for .)
    LET             reduce using rule 31 (instruccion -> for .)
    ID              reduce using rule 31 (instruccion -> for .)
    IF              reduce using rule 31 (instruccion -> for .)
    RETURN          reduce using rule 31 (instruccion -> for .)
    LOOP            reduce using rule 31 (instruccion -> for .)
    BREAK           reduce using rule 31 (instruccion -> for .)
    WHILE           reduce using rule 31 (instruccion -> for .)
    CONTINUE        reduce using rule 31 (instruccion -> for .)
    FOR             reduce using rule 31 (instruccion -> for .)
    MENOS           reduce using rule 31 (instruccion -> for .)
    I64             reduce using rule 31 (instruccion -> for .)
    F64             reduce using rule 31 (instruccion -> for .)
    PIZQ            reduce using rule 31 (instruccion -> for .)
    NOT             reduce using rule 31 (instruccion -> for .)
    ENTERO          reduce using rule 31 (instruccion -> for .)
    DECIMAL         reduce using rule 31 (instruccion -> for .)
    CARACTER        reduce using rule 31 (instruccion -> for .)
    CADENA          reduce using rule 31 (instruccion -> for .)
    TRUE            reduce using rule 31 (instruccion -> for .)
    FALSE           reduce using rule 31 (instruccion -> for .)
    CORIZQ          reduce using rule 31 (instruccion -> for .)
    Y               reduce using rule 31 (instruccion -> for .)


state 44

    (32) instruccion -> asignacionA . PTCOMA

    PTCOMA          shift and go to state 70


state 45

    (33) print -> PRINTLN . NOT PIZQ lista_expresiones PDER

    NOT             shift and go to state 71


state 46

    (37) declaracion -> LET . MUT ID DOBLEPT tipo_dato IGUAL expresion
    (38) declaracion -> LET . ID DOBLEPT tipo_dato IGUAL expresion
    (39) declaracion -> LET . MUT ID IGUAL expresion
    (40) declaracion -> LET . ID IGUAL expresion
    (41) declaracion -> LET . MUT ID DOBLEPT dimensiones IGUAL expresion
    (42) declaracion -> LET . ID DOBLEPT dimensiones IGUAL expresion

    MUT             shift and go to state 72
    ID              shift and go to state 73


state 47

    (47) asignacion -> ID . IGUAL expresion
    (13) llamadaF -> ID . PIZQ PDER
    (14) llamadaF -> ID . PIZQ lista_expresiones PDER
    (36) asignacionA -> ID . ubicaciones IGUAL expresion
    (95) ubicaciones -> . ubicaciones ubicacion
    (96) ubicaciones -> . ubicacion
    (97) ubicacion -> . CORIZQ expresion CORDER

    IGUAL           shift and go to state 74
    PIZQ            shift and go to state 75
    CORIZQ          shift and go to state 78

    ubicaciones                    shift and go to state 76
    ubicacion                      shift and go to state 77

state 48

    (48) if_i -> IF . expresion bloque else
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 80
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 49

    (34) return -> RETURN .
    (35) return -> RETURN . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    PTCOMA          reduce using rule 34 (return -> RETURN .)
    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 107
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 50

    (53) loop -> LOOP . bloque
    (17) bloque -> . LLAVEIZQ LLAVEDER
    (18) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 108

state 51

    (54) break -> BREAK .
    (55) break -> BREAK . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    PTCOMA          reduce using rule 54 (break -> BREAK .)
    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 109
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 52

    (56) while -> WHILE . expresion bloque
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 110
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 53

    (57) continue -> CONTINUE .

    PTCOMA          reduce using rule 57 (continue -> CONTINUE .)


state 54

    (58) for -> FOR . ID IN expresion PUNTO PUNTO expresion bloque
    (59) for -> FOR . ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (60) for -> FOR . ID IN expresion bloque

    ID              shift and go to state 111


state 55

    (7) funcion -> FN ID PIZQ parametros PDER bloque .

    FN              reduce using rule 7 (funcion -> FN ID PIZQ parametros PDER bloque .)
    $end            reduce using rule 7 (funcion -> FN ID PIZQ parametros PDER bloque .)


state 56

    (8) funcion -> FN ID PIZQ parametros PDER FLECHA . tipo_dato bloque
    (119) tipo_dato -> . I64
    (120) tipo_dato -> . F64
    (121) tipo_dato -> . BOOL
    (122) tipo_dato -> . CHAR
    (123) tipo_dato -> . str
    (124) tipo_dato -> . STRING
    (125) tipo_dato -> . USIZE
    (126) str -> . Y STR

    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 112
    str                            shift and go to state 25

state 57

    (9) parametros -> parametros COMA parametro .

    PDER            reduce using rule 9 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 9 (parametros -> parametros COMA parametro .)


state 58

    (12) parametro -> ID DOBLEPT Y MUT . dimensiones
    (43) dimensiones -> . CORIZQ tipo_dato CORDER
    (44) dimensiones -> . CORIZQ tipo_dato PTCOMA expresion CORDER
    (45) dimensiones -> . CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER
    (46) dimensiones -> . CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER

    CORIZQ          shift and go to state 114

    dimensiones                    shift and go to state 113

state 59

    (126) str -> Y STR .

    PDER            reduce using rule 126 (str -> Y STR .)
    COMA            reduce using rule 126 (str -> Y STR .)
    LLAVEIZQ        reduce using rule 126 (str -> Y STR .)
    CORDER          reduce using rule 126 (str -> Y STR .)
    PTCOMA          reduce using rule 126 (str -> Y STR .)
    IGUAL           reduce using rule 126 (str -> Y STR .)


state 60

    (6) funcion -> FN ID PIZQ PDER FLECHA tipo_dato bloque .

    FN              reduce using rule 6 (funcion -> FN ID PIZQ PDER FLECHA tipo_dato bloque .)
    $end            reduce using rule 6 (funcion -> FN ID PIZQ PDER FLECHA tipo_dato bloque .)


state 61

    (18) bloque -> LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MULTIPLICACION  reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    DIVISION        reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MAYOR           reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MENOR           reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIGUAL      reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MENORIGUAL      reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    IGUALIGUAL      reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    DIFERENTE       reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PUNTO           reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    AS              reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEIZQ        reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PDER            reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    CORDER          reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    I64             reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    F64             reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PIZQ            reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    NOT             reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    ENTERO          reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    DECIMAL         reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    CARACTER        reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    CADENA          reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    TRUE            reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    FALSE           reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    CORIZQ          reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    Y               reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            reduce using rule 18 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)


state 62

    (19) instrucciones -> instrucciones instruccion .

    LLAVEDER        reduce using rule 19 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 19 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 19 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 19 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 19 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 19 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 19 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 19 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 19 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 19 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 19 (instrucciones -> instrucciones instruccion .)


state 63

    (21) instruccion -> print PTCOMA .

    LLAVEDER        reduce using rule 21 (instruccion -> print PTCOMA .)
    PRINTLN         reduce using rule 21 (instruccion -> print PTCOMA .)
    LET             reduce using rule 21 (instruccion -> print PTCOMA .)
    ID              reduce using rule 21 (instruccion -> print PTCOMA .)
    IF              reduce using rule 21 (instruccion -> print PTCOMA .)
    RETURN          reduce using rule 21 (instruccion -> print PTCOMA .)
    LOOP            reduce using rule 21 (instruccion -> print PTCOMA .)
    BREAK           reduce using rule 21 (instruccion -> print PTCOMA .)
    WHILE           reduce using rule 21 (instruccion -> print PTCOMA .)
    CONTINUE        reduce using rule 21 (instruccion -> print PTCOMA .)
    FOR             reduce using rule 21 (instruccion -> print PTCOMA .)
    MENOS           reduce using rule 21 (instruccion -> print PTCOMA .)
    I64             reduce using rule 21 (instruccion -> print PTCOMA .)
    F64             reduce using rule 21 (instruccion -> print PTCOMA .)
    PIZQ            reduce using rule 21 (instruccion -> print PTCOMA .)
    NOT             reduce using rule 21 (instruccion -> print PTCOMA .)
    ENTERO          reduce using rule 21 (instruccion -> print PTCOMA .)
    DECIMAL         reduce using rule 21 (instruccion -> print PTCOMA .)
    CARACTER        reduce using rule 21 (instruccion -> print PTCOMA .)
    CADENA          reduce using rule 21 (instruccion -> print PTCOMA .)
    TRUE            reduce using rule 21 (instruccion -> print PTCOMA .)
    FALSE           reduce using rule 21 (instruccion -> print PTCOMA .)
    CORIZQ          reduce using rule 21 (instruccion -> print PTCOMA .)
    Y               reduce using rule 21 (instruccion -> print PTCOMA .)


state 64

    (22) instruccion -> declaracion PTCOMA .

    LLAVEDER        reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    PRINTLN         reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    LET             reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    ID              reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    IF              reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    RETURN          reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    LOOP            reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    BREAK           reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    WHILE           reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    CONTINUE        reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    FOR             reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    MENOS           reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    I64             reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    F64             reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    PIZQ            reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    NOT             reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    ENTERO          reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    DECIMAL         reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    CARACTER        reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    CADENA          reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    TRUE            reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    FALSE           reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    CORIZQ          reduce using rule 22 (instruccion -> declaracion PTCOMA .)
    Y               reduce using rule 22 (instruccion -> declaracion PTCOMA .)


state 65

    (23) instruccion -> asignacion PTCOMA .

    LLAVEDER        reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    PRINTLN         reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    LET             reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    ID              reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    IF              reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    RETURN          reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    LOOP            reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    BREAK           reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    WHILE           reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    CONTINUE        reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    FOR             reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    MENOS           reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    I64             reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    F64             reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    PIZQ            reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    NOT             reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    ENTERO          reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    DECIMAL         reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    CARACTER        reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    CADENA          reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    TRUE            reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    FALSE           reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    CORIZQ          reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    Y               reduce using rule 23 (instruccion -> asignacion PTCOMA .)


state 66

    (25) instruccion -> llamadaF PTCOMA .

    LLAVEDER        reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    PRINTLN         reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    LET             reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    ID              reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    IF              reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    RETURN          reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    LOOP            reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    BREAK           reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    WHILE           reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    CONTINUE        reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    FOR             reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    MENOS           reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    I64             reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    F64             reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    PIZQ            reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    NOT             reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    ENTERO          reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    DECIMAL         reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    CARACTER        reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    CADENA          reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    TRUE            reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    FALSE           reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    CORIZQ          reduce using rule 25 (instruccion -> llamadaF PTCOMA .)
    Y               reduce using rule 25 (instruccion -> llamadaF PTCOMA .)


state 67

    (26) instruccion -> return PTCOMA .

    LLAVEDER        reduce using rule 26 (instruccion -> return PTCOMA .)
    PRINTLN         reduce using rule 26 (instruccion -> return PTCOMA .)
    LET             reduce using rule 26 (instruccion -> return PTCOMA .)
    ID              reduce using rule 26 (instruccion -> return PTCOMA .)
    IF              reduce using rule 26 (instruccion -> return PTCOMA .)
    RETURN          reduce using rule 26 (instruccion -> return PTCOMA .)
    LOOP            reduce using rule 26 (instruccion -> return PTCOMA .)
    BREAK           reduce using rule 26 (instruccion -> return PTCOMA .)
    WHILE           reduce using rule 26 (instruccion -> return PTCOMA .)
    CONTINUE        reduce using rule 26 (instruccion -> return PTCOMA .)
    FOR             reduce using rule 26 (instruccion -> return PTCOMA .)
    MENOS           reduce using rule 26 (instruccion -> return PTCOMA .)
    I64             reduce using rule 26 (instruccion -> return PTCOMA .)
    F64             reduce using rule 26 (instruccion -> return PTCOMA .)
    PIZQ            reduce using rule 26 (instruccion -> return PTCOMA .)
    NOT             reduce using rule 26 (instruccion -> return PTCOMA .)
    ENTERO          reduce using rule 26 (instruccion -> return PTCOMA .)
    DECIMAL         reduce using rule 26 (instruccion -> return PTCOMA .)
    CARACTER        reduce using rule 26 (instruccion -> return PTCOMA .)
    CADENA          reduce using rule 26 (instruccion -> return PTCOMA .)
    TRUE            reduce using rule 26 (instruccion -> return PTCOMA .)
    FALSE           reduce using rule 26 (instruccion -> return PTCOMA .)
    CORIZQ          reduce using rule 26 (instruccion -> return PTCOMA .)
    Y               reduce using rule 26 (instruccion -> return PTCOMA .)


state 68

    (28) instruccion -> break PTCOMA .

    LLAVEDER        reduce using rule 28 (instruccion -> break PTCOMA .)
    PRINTLN         reduce using rule 28 (instruccion -> break PTCOMA .)
    LET             reduce using rule 28 (instruccion -> break PTCOMA .)
    ID              reduce using rule 28 (instruccion -> break PTCOMA .)
    IF              reduce using rule 28 (instruccion -> break PTCOMA .)
    RETURN          reduce using rule 28 (instruccion -> break PTCOMA .)
    LOOP            reduce using rule 28 (instruccion -> break PTCOMA .)
    BREAK           reduce using rule 28 (instruccion -> break PTCOMA .)
    WHILE           reduce using rule 28 (instruccion -> break PTCOMA .)
    CONTINUE        reduce using rule 28 (instruccion -> break PTCOMA .)
    FOR             reduce using rule 28 (instruccion -> break PTCOMA .)
    MENOS           reduce using rule 28 (instruccion -> break PTCOMA .)
    I64             reduce using rule 28 (instruccion -> break PTCOMA .)
    F64             reduce using rule 28 (instruccion -> break PTCOMA .)
    PIZQ            reduce using rule 28 (instruccion -> break PTCOMA .)
    NOT             reduce using rule 28 (instruccion -> break PTCOMA .)
    ENTERO          reduce using rule 28 (instruccion -> break PTCOMA .)
    DECIMAL         reduce using rule 28 (instruccion -> break PTCOMA .)
    CARACTER        reduce using rule 28 (instruccion -> break PTCOMA .)
    CADENA          reduce using rule 28 (instruccion -> break PTCOMA .)
    TRUE            reduce using rule 28 (instruccion -> break PTCOMA .)
    FALSE           reduce using rule 28 (instruccion -> break PTCOMA .)
    CORIZQ          reduce using rule 28 (instruccion -> break PTCOMA .)
    Y               reduce using rule 28 (instruccion -> break PTCOMA .)


state 69

    (30) instruccion -> continue PTCOMA .

    LLAVEDER        reduce using rule 30 (instruccion -> continue PTCOMA .)
    PRINTLN         reduce using rule 30 (instruccion -> continue PTCOMA .)
    LET             reduce using rule 30 (instruccion -> continue PTCOMA .)
    ID              reduce using rule 30 (instruccion -> continue PTCOMA .)
    IF              reduce using rule 30 (instruccion -> continue PTCOMA .)
    RETURN          reduce using rule 30 (instruccion -> continue PTCOMA .)
    LOOP            reduce using rule 30 (instruccion -> continue PTCOMA .)
    BREAK           reduce using rule 30 (instruccion -> continue PTCOMA .)
    WHILE           reduce using rule 30 (instruccion -> continue PTCOMA .)
    CONTINUE        reduce using rule 30 (instruccion -> continue PTCOMA .)
    FOR             reduce using rule 30 (instruccion -> continue PTCOMA .)
    MENOS           reduce using rule 30 (instruccion -> continue PTCOMA .)
    I64             reduce using rule 30 (instruccion -> continue PTCOMA .)
    F64             reduce using rule 30 (instruccion -> continue PTCOMA .)
    PIZQ            reduce using rule 30 (instruccion -> continue PTCOMA .)
    NOT             reduce using rule 30 (instruccion -> continue PTCOMA .)
    ENTERO          reduce using rule 30 (instruccion -> continue PTCOMA .)
    DECIMAL         reduce using rule 30 (instruccion -> continue PTCOMA .)
    CARACTER        reduce using rule 30 (instruccion -> continue PTCOMA .)
    CADENA          reduce using rule 30 (instruccion -> continue PTCOMA .)
    TRUE            reduce using rule 30 (instruccion -> continue PTCOMA .)
    FALSE           reduce using rule 30 (instruccion -> continue PTCOMA .)
    CORIZQ          reduce using rule 30 (instruccion -> continue PTCOMA .)
    Y               reduce using rule 30 (instruccion -> continue PTCOMA .)


state 70

    (32) instruccion -> asignacionA PTCOMA .

    LLAVEDER        reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    PRINTLN         reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    LET             reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    ID              reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    IF              reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    RETURN          reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    LOOP            reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    BREAK           reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    WHILE           reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    CONTINUE        reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    FOR             reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    MENOS           reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    I64             reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    F64             reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    PIZQ            reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    NOT             reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    ENTERO          reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    DECIMAL         reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    CARACTER        reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    CADENA          reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    TRUE            reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    FALSE           reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    CORIZQ          reduce using rule 32 (instruccion -> asignacionA PTCOMA .)
    Y               reduce using rule 32 (instruccion -> asignacionA PTCOMA .)


state 71

    (33) print -> PRINTLN NOT . PIZQ lista_expresiones PDER

    PIZQ            shift and go to state 115


state 72

    (37) declaracion -> LET MUT . ID DOBLEPT tipo_dato IGUAL expresion
    (39) declaracion -> LET MUT . ID IGUAL expresion
    (41) declaracion -> LET MUT . ID DOBLEPT dimensiones IGUAL expresion

    ID              shift and go to state 116


state 73

    (38) declaracion -> LET ID . DOBLEPT tipo_dato IGUAL expresion
    (40) declaracion -> LET ID . IGUAL expresion
    (42) declaracion -> LET ID . DOBLEPT dimensiones IGUAL expresion

    DOBLEPT         shift and go to state 117
    IGUAL           shift and go to state 118


state 74

    (47) asignacion -> ID IGUAL . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 119
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 75

    (13) llamadaF -> ID PIZQ . PDER
    (14) llamadaF -> ID PIZQ . lista_expresiones PDER
    (15) lista_expresiones -> . lista_expresiones COMA expresion
    (16) lista_expresiones -> . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    PDER            shift and go to state 120
    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    lista_expresiones              shift and go to state 121
    expresion                      shift and go to state 122
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 76

    (36) asignacionA -> ID ubicaciones . IGUAL expresion
    (95) ubicaciones -> ubicaciones . ubicacion
    (97) ubicacion -> . CORIZQ expresion CORDER

    IGUAL           shift and go to state 123
    CORIZQ          shift and go to state 78

    ubicacion                      shift and go to state 124

state 77

    (96) ubicaciones -> ubicacion .

    IGUAL           reduce using rule 96 (ubicaciones -> ubicacion .)
    CORIZQ          reduce using rule 96 (ubicaciones -> ubicacion .)
    MAS             reduce using rule 96 (ubicaciones -> ubicacion .)
    MENOS           reduce using rule 96 (ubicaciones -> ubicacion .)
    MULTIPLICACION  reduce using rule 96 (ubicaciones -> ubicacion .)
    DIVISION        reduce using rule 96 (ubicaciones -> ubicacion .)
    MODULO          reduce using rule 96 (ubicaciones -> ubicacion .)
    MAYOR           reduce using rule 96 (ubicaciones -> ubicacion .)
    MENOR           reduce using rule 96 (ubicaciones -> ubicacion .)
    MAYORIGUAL      reduce using rule 96 (ubicaciones -> ubicacion .)
    MENORIGUAL      reduce using rule 96 (ubicaciones -> ubicacion .)
    IGUALIGUAL      reduce using rule 96 (ubicaciones -> ubicacion .)
    DIFERENTE       reduce using rule 96 (ubicaciones -> ubicacion .)
    AND             reduce using rule 96 (ubicaciones -> ubicacion .)
    OR              reduce using rule 96 (ubicaciones -> ubicacion .)
    PUNTO           reduce using rule 96 (ubicaciones -> ubicacion .)
    AS              reduce using rule 96 (ubicaciones -> ubicacion .)
    LLAVEIZQ        reduce using rule 96 (ubicaciones -> ubicacion .)
    PTCOMA          reduce using rule 96 (ubicaciones -> ubicacion .)
    PDER            reduce using rule 96 (ubicaciones -> ubicacion .)
    COMA            reduce using rule 96 (ubicaciones -> ubicacion .)
    CORDER          reduce using rule 96 (ubicaciones -> ubicacion .)
    LLAVEDER        reduce using rule 96 (ubicaciones -> ubicacion .)


state 78

    (97) ubicacion -> CORIZQ . expresion CORDER
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 125
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 79

    (105) if_e -> IF . expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> IF . expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> IF . expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> IF . expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 126
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 80

    (48) if_i -> IF expresion . bloque else
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER
    (17) bloque -> . LLAVEIZQ LLAVEDER
    (18) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 127

state 81

    (61) expresion -> MENOS . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 143
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 82

    (67) expresion -> I64 . DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER

    DOBLEPT         shift and go to state 144


state 83

    (69) expresion -> PIZQ . expresion PDER
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 145
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 84

    (68) expresion -> F64 . DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER

    DOBLEPT         shift and go to state 146


state 85

    (78) expresion -> NOT . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 147
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 86

    (79) expresion -> tostring .

    MAS             reduce using rule 79 (expresion -> tostring .)
    MENOS           reduce using rule 79 (expresion -> tostring .)
    MULTIPLICACION  reduce using rule 79 (expresion -> tostring .)
    DIVISION        reduce using rule 79 (expresion -> tostring .)
    MODULO          reduce using rule 79 (expresion -> tostring .)
    MAYOR           reduce using rule 79 (expresion -> tostring .)
    MENOR           reduce using rule 79 (expresion -> tostring .)
    MAYORIGUAL      reduce using rule 79 (expresion -> tostring .)
    MENORIGUAL      reduce using rule 79 (expresion -> tostring .)
    IGUALIGUAL      reduce using rule 79 (expresion -> tostring .)
    DIFERENTE       reduce using rule 79 (expresion -> tostring .)
    AND             reduce using rule 79 (expresion -> tostring .)
    OR              reduce using rule 79 (expresion -> tostring .)
    PUNTO           reduce using rule 79 (expresion -> tostring .)
    AS              reduce using rule 79 (expresion -> tostring .)
    LLAVEIZQ        reduce using rule 79 (expresion -> tostring .)
    PTCOMA          reduce using rule 79 (expresion -> tostring .)
    PDER            reduce using rule 79 (expresion -> tostring .)
    COMA            reduce using rule 79 (expresion -> tostring .)
    CORDER          reduce using rule 79 (expresion -> tostring .)
    LLAVEDER        reduce using rule 79 (expresion -> tostring .)


state 87

    (80) expresion -> as .

    MAS             reduce using rule 80 (expresion -> as .)
    MENOS           reduce using rule 80 (expresion -> as .)
    MULTIPLICACION  reduce using rule 80 (expresion -> as .)
    DIVISION        reduce using rule 80 (expresion -> as .)
    MODULO          reduce using rule 80 (expresion -> as .)
    MAYOR           reduce using rule 80 (expresion -> as .)
    MENOR           reduce using rule 80 (expresion -> as .)
    MAYORIGUAL      reduce using rule 80 (expresion -> as .)
    MENORIGUAL      reduce using rule 80 (expresion -> as .)
    IGUALIGUAL      reduce using rule 80 (expresion -> as .)
    DIFERENTE       reduce using rule 80 (expresion -> as .)
    AND             reduce using rule 80 (expresion -> as .)
    OR              reduce using rule 80 (expresion -> as .)
    PUNTO           reduce using rule 80 (expresion -> as .)
    AS              reduce using rule 80 (expresion -> as .)
    LLAVEIZQ        reduce using rule 80 (expresion -> as .)
    PTCOMA          reduce using rule 80 (expresion -> as .)
    PDER            reduce using rule 80 (expresion -> as .)
    COMA            reduce using rule 80 (expresion -> as .)
    CORDER          reduce using rule 80 (expresion -> as .)
    LLAVEDER        reduce using rule 80 (expresion -> as .)


state 88

    (81) expresion -> abs .

    MAS             reduce using rule 81 (expresion -> abs .)
    MENOS           reduce using rule 81 (expresion -> abs .)
    MULTIPLICACION  reduce using rule 81 (expresion -> abs .)
    DIVISION        reduce using rule 81 (expresion -> abs .)
    MODULO          reduce using rule 81 (expresion -> abs .)
    MAYOR           reduce using rule 81 (expresion -> abs .)
    MENOR           reduce using rule 81 (expresion -> abs .)
    MAYORIGUAL      reduce using rule 81 (expresion -> abs .)
    MENORIGUAL      reduce using rule 81 (expresion -> abs .)
    IGUALIGUAL      reduce using rule 81 (expresion -> abs .)
    DIFERENTE       reduce using rule 81 (expresion -> abs .)
    AND             reduce using rule 81 (expresion -> abs .)
    OR              reduce using rule 81 (expresion -> abs .)
    PUNTO           reduce using rule 81 (expresion -> abs .)
    AS              reduce using rule 81 (expresion -> abs .)
    LLAVEIZQ        reduce using rule 81 (expresion -> abs .)
    PTCOMA          reduce using rule 81 (expresion -> abs .)
    PDER            reduce using rule 81 (expresion -> abs .)
    COMA            reduce using rule 81 (expresion -> abs .)
    CORDER          reduce using rule 81 (expresion -> abs .)
    LLAVEDER        reduce using rule 81 (expresion -> abs .)


state 89

    (82) expresion -> sqrt .

    MAS             reduce using rule 82 (expresion -> sqrt .)
    MENOS           reduce using rule 82 (expresion -> sqrt .)
    MULTIPLICACION  reduce using rule 82 (expresion -> sqrt .)
    DIVISION        reduce using rule 82 (expresion -> sqrt .)
    MODULO          reduce using rule 82 (expresion -> sqrt .)
    MAYOR           reduce using rule 82 (expresion -> sqrt .)
    MENOR           reduce using rule 82 (expresion -> sqrt .)
    MAYORIGUAL      reduce using rule 82 (expresion -> sqrt .)
    MENORIGUAL      reduce using rule 82 (expresion -> sqrt .)
    IGUALIGUAL      reduce using rule 82 (expresion -> sqrt .)
    DIFERENTE       reduce using rule 82 (expresion -> sqrt .)
    AND             reduce using rule 82 (expresion -> sqrt .)
    OR              reduce using rule 82 (expresion -> sqrt .)
    PUNTO           reduce using rule 82 (expresion -> sqrt .)
    AS              reduce using rule 82 (expresion -> sqrt .)
    LLAVEIZQ        reduce using rule 82 (expresion -> sqrt .)
    PTCOMA          reduce using rule 82 (expresion -> sqrt .)
    PDER            reduce using rule 82 (expresion -> sqrt .)
    COMA            reduce using rule 82 (expresion -> sqrt .)
    CORDER          reduce using rule 82 (expresion -> sqrt .)
    LLAVEDER        reduce using rule 82 (expresion -> sqrt .)


state 90

    (83) expresion -> if_e .

    MAS             reduce using rule 83 (expresion -> if_e .)
    MENOS           reduce using rule 83 (expresion -> if_e .)
    MULTIPLICACION  reduce using rule 83 (expresion -> if_e .)
    DIVISION        reduce using rule 83 (expresion -> if_e .)
    MODULO          reduce using rule 83 (expresion -> if_e .)
    MAYOR           reduce using rule 83 (expresion -> if_e .)
    MENOR           reduce using rule 83 (expresion -> if_e .)
    MAYORIGUAL      reduce using rule 83 (expresion -> if_e .)
    MENORIGUAL      reduce using rule 83 (expresion -> if_e .)
    IGUALIGUAL      reduce using rule 83 (expresion -> if_e .)
    DIFERENTE       reduce using rule 83 (expresion -> if_e .)
    AND             reduce using rule 83 (expresion -> if_e .)
    OR              reduce using rule 83 (expresion -> if_e .)
    PUNTO           reduce using rule 83 (expresion -> if_e .)
    AS              reduce using rule 83 (expresion -> if_e .)
    LLAVEIZQ        reduce using rule 83 (expresion -> if_e .)
    PTCOMA          reduce using rule 83 (expresion -> if_e .)
    PDER            reduce using rule 83 (expresion -> if_e .)
    COMA            reduce using rule 83 (expresion -> if_e .)
    CORDER          reduce using rule 83 (expresion -> if_e .)
    LLAVEDER        reduce using rule 83 (expresion -> if_e .)


state 91

    (84) expresion -> llamadaF .

    MAS             reduce using rule 84 (expresion -> llamadaF .)
    MENOS           reduce using rule 84 (expresion -> llamadaF .)
    MULTIPLICACION  reduce using rule 84 (expresion -> llamadaF .)
    DIVISION        reduce using rule 84 (expresion -> llamadaF .)
    MODULO          reduce using rule 84 (expresion -> llamadaF .)
    MAYOR           reduce using rule 84 (expresion -> llamadaF .)
    MENOR           reduce using rule 84 (expresion -> llamadaF .)
    MAYORIGUAL      reduce using rule 84 (expresion -> llamadaF .)
    MENORIGUAL      reduce using rule 84 (expresion -> llamadaF .)
    IGUALIGUAL      reduce using rule 84 (expresion -> llamadaF .)
    DIFERENTE       reduce using rule 84 (expresion -> llamadaF .)
    AND             reduce using rule 84 (expresion -> llamadaF .)
    OR              reduce using rule 84 (expresion -> llamadaF .)
    PUNTO           reduce using rule 84 (expresion -> llamadaF .)
    AS              reduce using rule 84 (expresion -> llamadaF .)
    LLAVEIZQ        reduce using rule 84 (expresion -> llamadaF .)
    PTCOMA          reduce using rule 84 (expresion -> llamadaF .)
    PDER            reduce using rule 84 (expresion -> llamadaF .)
    COMA            reduce using rule 84 (expresion -> llamadaF .)
    CORDER          reduce using rule 84 (expresion -> llamadaF .)
    LLAVEDER        reduce using rule 84 (expresion -> llamadaF .)


state 92

    (85) expresion -> loop .

    MAS             reduce using rule 85 (expresion -> loop .)
    MENOS           reduce using rule 85 (expresion -> loop .)
    MULTIPLICACION  reduce using rule 85 (expresion -> loop .)
    DIVISION        reduce using rule 85 (expresion -> loop .)
    MODULO          reduce using rule 85 (expresion -> loop .)
    MAYOR           reduce using rule 85 (expresion -> loop .)
    MENOR           reduce using rule 85 (expresion -> loop .)
    MAYORIGUAL      reduce using rule 85 (expresion -> loop .)
    MENORIGUAL      reduce using rule 85 (expresion -> loop .)
    IGUALIGUAL      reduce using rule 85 (expresion -> loop .)
    DIFERENTE       reduce using rule 85 (expresion -> loop .)
    AND             reduce using rule 85 (expresion -> loop .)
    OR              reduce using rule 85 (expresion -> loop .)
    PUNTO           reduce using rule 85 (expresion -> loop .)
    AS              reduce using rule 85 (expresion -> loop .)
    LLAVEIZQ        reduce using rule 85 (expresion -> loop .)
    PTCOMA          reduce using rule 85 (expresion -> loop .)
    PDER            reduce using rule 85 (expresion -> loop .)
    COMA            reduce using rule 85 (expresion -> loop .)
    CORDER          reduce using rule 85 (expresion -> loop .)
    LLAVEDER        reduce using rule 85 (expresion -> loop .)


state 93

    (86) expresion -> arraycontenido .

    MAS             reduce using rule 86 (expresion -> arraycontenido .)
    MENOS           reduce using rule 86 (expresion -> arraycontenido .)
    MULTIPLICACION  reduce using rule 86 (expresion -> arraycontenido .)
    DIVISION        reduce using rule 86 (expresion -> arraycontenido .)
    MODULO          reduce using rule 86 (expresion -> arraycontenido .)
    MAYOR           reduce using rule 86 (expresion -> arraycontenido .)
    MENOR           reduce using rule 86 (expresion -> arraycontenido .)
    MAYORIGUAL      reduce using rule 86 (expresion -> arraycontenido .)
    MENORIGUAL      reduce using rule 86 (expresion -> arraycontenido .)
    IGUALIGUAL      reduce using rule 86 (expresion -> arraycontenido .)
    DIFERENTE       reduce using rule 86 (expresion -> arraycontenido .)
    AND             reduce using rule 86 (expresion -> arraycontenido .)
    OR              reduce using rule 86 (expresion -> arraycontenido .)
    PUNTO           reduce using rule 86 (expresion -> arraycontenido .)
    AS              reduce using rule 86 (expresion -> arraycontenido .)
    LLAVEIZQ        reduce using rule 86 (expresion -> arraycontenido .)
    PTCOMA          reduce using rule 86 (expresion -> arraycontenido .)
    PDER            reduce using rule 86 (expresion -> arraycontenido .)
    COMA            reduce using rule 86 (expresion -> arraycontenido .)
    CORDER          reduce using rule 86 (expresion -> arraycontenido .)
    LLAVEDER        reduce using rule 86 (expresion -> arraycontenido .)


state 94

    (87) expresion -> accesoarray .

    MAS             reduce using rule 87 (expresion -> accesoarray .)
    MENOS           reduce using rule 87 (expresion -> accesoarray .)
    MULTIPLICACION  reduce using rule 87 (expresion -> accesoarray .)
    DIVISION        reduce using rule 87 (expresion -> accesoarray .)
    MODULO          reduce using rule 87 (expresion -> accesoarray .)
    MAYOR           reduce using rule 87 (expresion -> accesoarray .)
    MENOR           reduce using rule 87 (expresion -> accesoarray .)
    MAYORIGUAL      reduce using rule 87 (expresion -> accesoarray .)
    MENORIGUAL      reduce using rule 87 (expresion -> accesoarray .)
    IGUALIGUAL      reduce using rule 87 (expresion -> accesoarray .)
    DIFERENTE       reduce using rule 87 (expresion -> accesoarray .)
    AND             reduce using rule 87 (expresion -> accesoarray .)
    OR              reduce using rule 87 (expresion -> accesoarray .)
    PUNTO           reduce using rule 87 (expresion -> accesoarray .)
    AS              reduce using rule 87 (expresion -> accesoarray .)
    LLAVEIZQ        reduce using rule 87 (expresion -> accesoarray .)
    PTCOMA          reduce using rule 87 (expresion -> accesoarray .)
    PDER            reduce using rule 87 (expresion -> accesoarray .)
    COMA            reduce using rule 87 (expresion -> accesoarray .)
    CORDER          reduce using rule 87 (expresion -> accesoarray .)
    LLAVEDER        reduce using rule 87 (expresion -> accesoarray .)


state 95

    (88) expresion -> referencia .

    MAS             reduce using rule 88 (expresion -> referencia .)
    MENOS           reduce using rule 88 (expresion -> referencia .)
    MULTIPLICACION  reduce using rule 88 (expresion -> referencia .)
    DIVISION        reduce using rule 88 (expresion -> referencia .)
    MODULO          reduce using rule 88 (expresion -> referencia .)
    MAYOR           reduce using rule 88 (expresion -> referencia .)
    MENOR           reduce using rule 88 (expresion -> referencia .)
    MAYORIGUAL      reduce using rule 88 (expresion -> referencia .)
    MENORIGUAL      reduce using rule 88 (expresion -> referencia .)
    IGUALIGUAL      reduce using rule 88 (expresion -> referencia .)
    DIFERENTE       reduce using rule 88 (expresion -> referencia .)
    AND             reduce using rule 88 (expresion -> referencia .)
    OR              reduce using rule 88 (expresion -> referencia .)
    PUNTO           reduce using rule 88 (expresion -> referencia .)
    AS              reduce using rule 88 (expresion -> referencia .)
    LLAVEIZQ        reduce using rule 88 (expresion -> referencia .)
    PTCOMA          reduce using rule 88 (expresion -> referencia .)
    PDER            reduce using rule 88 (expresion -> referencia .)
    COMA            reduce using rule 88 (expresion -> referencia .)
    CORDER          reduce using rule 88 (expresion -> referencia .)
    LLAVEDER        reduce using rule 88 (expresion -> referencia .)


state 96

    (89) expresion -> len .

    MAS             reduce using rule 89 (expresion -> len .)
    MENOS           reduce using rule 89 (expresion -> len .)
    MULTIPLICACION  reduce using rule 89 (expresion -> len .)
    DIVISION        reduce using rule 89 (expresion -> len .)
    MODULO          reduce using rule 89 (expresion -> len .)
    MAYOR           reduce using rule 89 (expresion -> len .)
    MENOR           reduce using rule 89 (expresion -> len .)
    MAYORIGUAL      reduce using rule 89 (expresion -> len .)
    MENORIGUAL      reduce using rule 89 (expresion -> len .)
    IGUALIGUAL      reduce using rule 89 (expresion -> len .)
    DIFERENTE       reduce using rule 89 (expresion -> len .)
    AND             reduce using rule 89 (expresion -> len .)
    OR              reduce using rule 89 (expresion -> len .)
    PUNTO           reduce using rule 89 (expresion -> len .)
    AS              reduce using rule 89 (expresion -> len .)
    LLAVEIZQ        reduce using rule 89 (expresion -> len .)
    PTCOMA          reduce using rule 89 (expresion -> len .)
    PDER            reduce using rule 89 (expresion -> len .)
    COMA            reduce using rule 89 (expresion -> len .)
    CORDER          reduce using rule 89 (expresion -> len .)
    LLAVEDER        reduce using rule 89 (expresion -> len .)


state 97

    (90) expresion -> clone .

    MAS             reduce using rule 90 (expresion -> clone .)
    MENOS           reduce using rule 90 (expresion -> clone .)
    MULTIPLICACION  reduce using rule 90 (expresion -> clone .)
    DIVISION        reduce using rule 90 (expresion -> clone .)
    MODULO          reduce using rule 90 (expresion -> clone .)
    MAYOR           reduce using rule 90 (expresion -> clone .)
    MENOR           reduce using rule 90 (expresion -> clone .)
    MAYORIGUAL      reduce using rule 90 (expresion -> clone .)
    MENORIGUAL      reduce using rule 90 (expresion -> clone .)
    IGUALIGUAL      reduce using rule 90 (expresion -> clone .)
    DIFERENTE       reduce using rule 90 (expresion -> clone .)
    AND             reduce using rule 90 (expresion -> clone .)
    OR              reduce using rule 90 (expresion -> clone .)
    PUNTO           reduce using rule 90 (expresion -> clone .)
    AS              reduce using rule 90 (expresion -> clone .)
    LLAVEIZQ        reduce using rule 90 (expresion -> clone .)
    PTCOMA          reduce using rule 90 (expresion -> clone .)
    PDER            reduce using rule 90 (expresion -> clone .)
    COMA            reduce using rule 90 (expresion -> clone .)
    CORDER          reduce using rule 90 (expresion -> clone .)
    LLAVEDER        reduce using rule 90 (expresion -> clone .)


state 98

    (112) expresion -> ENTERO .

    MAS             reduce using rule 112 (expresion -> ENTERO .)
    MENOS           reduce using rule 112 (expresion -> ENTERO .)
    MULTIPLICACION  reduce using rule 112 (expresion -> ENTERO .)
    DIVISION        reduce using rule 112 (expresion -> ENTERO .)
    MODULO          reduce using rule 112 (expresion -> ENTERO .)
    MAYOR           reduce using rule 112 (expresion -> ENTERO .)
    MENOR           reduce using rule 112 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 112 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 112 (expresion -> ENTERO .)
    IGUALIGUAL      reduce using rule 112 (expresion -> ENTERO .)
    DIFERENTE       reduce using rule 112 (expresion -> ENTERO .)
    AND             reduce using rule 112 (expresion -> ENTERO .)
    OR              reduce using rule 112 (expresion -> ENTERO .)
    PUNTO           reduce using rule 112 (expresion -> ENTERO .)
    AS              reduce using rule 112 (expresion -> ENTERO .)
    LLAVEIZQ        reduce using rule 112 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 112 (expresion -> ENTERO .)
    PDER            reduce using rule 112 (expresion -> ENTERO .)
    COMA            reduce using rule 112 (expresion -> ENTERO .)
    CORDER          reduce using rule 112 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 112 (expresion -> ENTERO .)


state 99

    (113) expresion -> DECIMAL .

    MAS             reduce using rule 113 (expresion -> DECIMAL .)
    MENOS           reduce using rule 113 (expresion -> DECIMAL .)
    MULTIPLICACION  reduce using rule 113 (expresion -> DECIMAL .)
    DIVISION        reduce using rule 113 (expresion -> DECIMAL .)
    MODULO          reduce using rule 113 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 113 (expresion -> DECIMAL .)
    MENOR           reduce using rule 113 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 113 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 113 (expresion -> DECIMAL .)
    IGUALIGUAL      reduce using rule 113 (expresion -> DECIMAL .)
    DIFERENTE       reduce using rule 113 (expresion -> DECIMAL .)
    AND             reduce using rule 113 (expresion -> DECIMAL .)
    OR              reduce using rule 113 (expresion -> DECIMAL .)
    PUNTO           reduce using rule 113 (expresion -> DECIMAL .)
    AS              reduce using rule 113 (expresion -> DECIMAL .)
    LLAVEIZQ        reduce using rule 113 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 113 (expresion -> DECIMAL .)
    PDER            reduce using rule 113 (expresion -> DECIMAL .)
    COMA            reduce using rule 113 (expresion -> DECIMAL .)
    CORDER          reduce using rule 113 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 113 (expresion -> DECIMAL .)


state 100

    (114) expresion -> ID .
    (13) llamadaF -> ID . PIZQ PDER
    (14) llamadaF -> ID . PIZQ lista_expresiones PDER
    (94) accesoarray -> ID . ubicaciones
    (95) ubicaciones -> . ubicaciones ubicacion
    (96) ubicaciones -> . ubicacion
    (97) ubicacion -> . CORIZQ expresion CORDER

    MAS             reduce using rule 114 (expresion -> ID .)
    MENOS           reduce using rule 114 (expresion -> ID .)
    MULTIPLICACION  reduce using rule 114 (expresion -> ID .)
    DIVISION        reduce using rule 114 (expresion -> ID .)
    MODULO          reduce using rule 114 (expresion -> ID .)
    MAYOR           reduce using rule 114 (expresion -> ID .)
    MENOR           reduce using rule 114 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 114 (expresion -> ID .)
    MENORIGUAL      reduce using rule 114 (expresion -> ID .)
    IGUALIGUAL      reduce using rule 114 (expresion -> ID .)
    DIFERENTE       reduce using rule 114 (expresion -> ID .)
    AND             reduce using rule 114 (expresion -> ID .)
    OR              reduce using rule 114 (expresion -> ID .)
    PUNTO           reduce using rule 114 (expresion -> ID .)
    AS              reduce using rule 114 (expresion -> ID .)
    LLAVEIZQ        reduce using rule 114 (expresion -> ID .)
    PTCOMA          reduce using rule 114 (expresion -> ID .)
    PDER            reduce using rule 114 (expresion -> ID .)
    COMA            reduce using rule 114 (expresion -> ID .)
    CORDER          reduce using rule 114 (expresion -> ID .)
    LLAVEDER        reduce using rule 114 (expresion -> ID .)
    PIZQ            shift and go to state 75
    CORIZQ          shift and go to state 78

    ubicaciones                    shift and go to state 148
    ubicacion                      shift and go to state 77

state 101

    (115) expresion -> CARACTER .

    MAS             reduce using rule 115 (expresion -> CARACTER .)
    MENOS           reduce using rule 115 (expresion -> CARACTER .)
    MULTIPLICACION  reduce using rule 115 (expresion -> CARACTER .)
    DIVISION        reduce using rule 115 (expresion -> CARACTER .)
    MODULO          reduce using rule 115 (expresion -> CARACTER .)
    MAYOR           reduce using rule 115 (expresion -> CARACTER .)
    MENOR           reduce using rule 115 (expresion -> CARACTER .)
    MAYORIGUAL      reduce using rule 115 (expresion -> CARACTER .)
    MENORIGUAL      reduce using rule 115 (expresion -> CARACTER .)
    IGUALIGUAL      reduce using rule 115 (expresion -> CARACTER .)
    DIFERENTE       reduce using rule 115 (expresion -> CARACTER .)
    AND             reduce using rule 115 (expresion -> CARACTER .)
    OR              reduce using rule 115 (expresion -> CARACTER .)
    PUNTO           reduce using rule 115 (expresion -> CARACTER .)
    AS              reduce using rule 115 (expresion -> CARACTER .)
    LLAVEIZQ        reduce using rule 115 (expresion -> CARACTER .)
    PTCOMA          reduce using rule 115 (expresion -> CARACTER .)
    PDER            reduce using rule 115 (expresion -> CARACTER .)
    COMA            reduce using rule 115 (expresion -> CARACTER .)
    CORDER          reduce using rule 115 (expresion -> CARACTER .)
    LLAVEDER        reduce using rule 115 (expresion -> CARACTER .)


state 102

    (116) expresion -> CADENA .

    MAS             reduce using rule 116 (expresion -> CADENA .)
    MENOS           reduce using rule 116 (expresion -> CADENA .)
    MULTIPLICACION  reduce using rule 116 (expresion -> CADENA .)
    DIVISION        reduce using rule 116 (expresion -> CADENA .)
    MODULO          reduce using rule 116 (expresion -> CADENA .)
    MAYOR           reduce using rule 116 (expresion -> CADENA .)
    MENOR           reduce using rule 116 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 116 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 116 (expresion -> CADENA .)
    IGUALIGUAL      reduce using rule 116 (expresion -> CADENA .)
    DIFERENTE       reduce using rule 116 (expresion -> CADENA .)
    AND             reduce using rule 116 (expresion -> CADENA .)
    OR              reduce using rule 116 (expresion -> CADENA .)
    PUNTO           reduce using rule 116 (expresion -> CADENA .)
    AS              reduce using rule 116 (expresion -> CADENA .)
    LLAVEIZQ        reduce using rule 116 (expresion -> CADENA .)
    PTCOMA          reduce using rule 116 (expresion -> CADENA .)
    PDER            reduce using rule 116 (expresion -> CADENA .)
    COMA            reduce using rule 116 (expresion -> CADENA .)
    CORDER          reduce using rule 116 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 116 (expresion -> CADENA .)


state 103

    (117) expresion -> TRUE .

    MAS             reduce using rule 117 (expresion -> TRUE .)
    MENOS           reduce using rule 117 (expresion -> TRUE .)
    MULTIPLICACION  reduce using rule 117 (expresion -> TRUE .)
    DIVISION        reduce using rule 117 (expresion -> TRUE .)
    MODULO          reduce using rule 117 (expresion -> TRUE .)
    MAYOR           reduce using rule 117 (expresion -> TRUE .)
    MENOR           reduce using rule 117 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 117 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 117 (expresion -> TRUE .)
    IGUALIGUAL      reduce using rule 117 (expresion -> TRUE .)
    DIFERENTE       reduce using rule 117 (expresion -> TRUE .)
    AND             reduce using rule 117 (expresion -> TRUE .)
    OR              reduce using rule 117 (expresion -> TRUE .)
    PUNTO           reduce using rule 117 (expresion -> TRUE .)
    AS              reduce using rule 117 (expresion -> TRUE .)
    LLAVEIZQ        reduce using rule 117 (expresion -> TRUE .)
    PTCOMA          reduce using rule 117 (expresion -> TRUE .)
    PDER            reduce using rule 117 (expresion -> TRUE .)
    COMA            reduce using rule 117 (expresion -> TRUE .)
    CORDER          reduce using rule 117 (expresion -> TRUE .)
    LLAVEDER        reduce using rule 117 (expresion -> TRUE .)


state 104

    (118) expresion -> FALSE .

    MAS             reduce using rule 118 (expresion -> FALSE .)
    MENOS           reduce using rule 118 (expresion -> FALSE .)
    MULTIPLICACION  reduce using rule 118 (expresion -> FALSE .)
    DIVISION        reduce using rule 118 (expresion -> FALSE .)
    MODULO          reduce using rule 118 (expresion -> FALSE .)
    MAYOR           reduce using rule 118 (expresion -> FALSE .)
    MENOR           reduce using rule 118 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 118 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 118 (expresion -> FALSE .)
    IGUALIGUAL      reduce using rule 118 (expresion -> FALSE .)
    DIFERENTE       reduce using rule 118 (expresion -> FALSE .)
    AND             reduce using rule 118 (expresion -> FALSE .)
    OR              reduce using rule 118 (expresion -> FALSE .)
    PUNTO           reduce using rule 118 (expresion -> FALSE .)
    AS              reduce using rule 118 (expresion -> FALSE .)
    LLAVEIZQ        reduce using rule 118 (expresion -> FALSE .)
    PTCOMA          reduce using rule 118 (expresion -> FALSE .)
    PDER            reduce using rule 118 (expresion -> FALSE .)
    COMA            reduce using rule 118 (expresion -> FALSE .)
    CORDER          reduce using rule 118 (expresion -> FALSE .)
    LLAVEDER        reduce using rule 118 (expresion -> FALSE .)


state 105

    (98) arraycontenido -> CORIZQ . lista_expresiones CORDER
    (15) lista_expresiones -> . lista_expresiones COMA expresion
    (16) lista_expresiones -> . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    lista_expresiones              shift and go to state 149
    expresion                      shift and go to state 122
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 106

    (93) referencia -> Y . MUT ID

    MUT             shift and go to state 150


state 107

    (35) return -> RETURN expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    PTCOMA          reduce using rule 35 (return -> RETURN expresion .)
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 108

    (53) loop -> LOOP bloque .

    LLAVEDER        reduce using rule 53 (loop -> LOOP bloque .)
    PRINTLN         reduce using rule 53 (loop -> LOOP bloque .)
    LET             reduce using rule 53 (loop -> LOOP bloque .)
    ID              reduce using rule 53 (loop -> LOOP bloque .)
    IF              reduce using rule 53 (loop -> LOOP bloque .)
    RETURN          reduce using rule 53 (loop -> LOOP bloque .)
    LOOP            reduce using rule 53 (loop -> LOOP bloque .)
    BREAK           reduce using rule 53 (loop -> LOOP bloque .)
    WHILE           reduce using rule 53 (loop -> LOOP bloque .)
    CONTINUE        reduce using rule 53 (loop -> LOOP bloque .)
    FOR             reduce using rule 53 (loop -> LOOP bloque .)
    MAS             reduce using rule 53 (loop -> LOOP bloque .)
    MENOS           reduce using rule 53 (loop -> LOOP bloque .)
    MULTIPLICACION  reduce using rule 53 (loop -> LOOP bloque .)
    DIVISION        reduce using rule 53 (loop -> LOOP bloque .)
    MODULO          reduce using rule 53 (loop -> LOOP bloque .)
    MAYOR           reduce using rule 53 (loop -> LOOP bloque .)
    MENOR           reduce using rule 53 (loop -> LOOP bloque .)
    MAYORIGUAL      reduce using rule 53 (loop -> LOOP bloque .)
    MENORIGUAL      reduce using rule 53 (loop -> LOOP bloque .)
    IGUALIGUAL      reduce using rule 53 (loop -> LOOP bloque .)
    DIFERENTE       reduce using rule 53 (loop -> LOOP bloque .)
    AND             reduce using rule 53 (loop -> LOOP bloque .)
    OR              reduce using rule 53 (loop -> LOOP bloque .)
    PUNTO           reduce using rule 53 (loop -> LOOP bloque .)
    AS              reduce using rule 53 (loop -> LOOP bloque .)
    LLAVEIZQ        reduce using rule 53 (loop -> LOOP bloque .)
    PTCOMA          reduce using rule 53 (loop -> LOOP bloque .)
    PDER            reduce using rule 53 (loop -> LOOP bloque .)
    COMA            reduce using rule 53 (loop -> LOOP bloque .)
    CORDER          reduce using rule 53 (loop -> LOOP bloque .)
    I64             reduce using rule 53 (loop -> LOOP bloque .)
    F64             reduce using rule 53 (loop -> LOOP bloque .)
    PIZQ            reduce using rule 53 (loop -> LOOP bloque .)
    NOT             reduce using rule 53 (loop -> LOOP bloque .)
    ENTERO          reduce using rule 53 (loop -> LOOP bloque .)
    DECIMAL         reduce using rule 53 (loop -> LOOP bloque .)
    CARACTER        reduce using rule 53 (loop -> LOOP bloque .)
    CADENA          reduce using rule 53 (loop -> LOOP bloque .)
    TRUE            reduce using rule 53 (loop -> LOOP bloque .)
    FALSE           reduce using rule 53 (loop -> LOOP bloque .)
    CORIZQ          reduce using rule 53 (loop -> LOOP bloque .)
    Y               reduce using rule 53 (loop -> LOOP bloque .)


state 109

    (55) break -> BREAK expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    PTCOMA          reduce using rule 55 (break -> BREAK expresion .)
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 110

    (56) while -> WHILE expresion . bloque
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER
    (17) bloque -> . LLAVEIZQ LLAVEDER
    (18) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 151

state 111

    (58) for -> FOR ID . IN expresion PUNTO PUNTO expresion bloque
    (59) for -> FOR ID . IN expresion PUNTO CHARS PIZQ PDER bloque
    (60) for -> FOR ID . IN expresion bloque

    IN              shift and go to state 152


state 112

    (8) funcion -> FN ID PIZQ parametros PDER FLECHA tipo_dato . bloque
    (17) bloque -> . LLAVEIZQ LLAVEDER
    (18) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 153

state 113

    (12) parametro -> ID DOBLEPT Y MUT dimensiones .

    PDER            reduce using rule 12 (parametro -> ID DOBLEPT Y MUT dimensiones .)
    COMA            reduce using rule 12 (parametro -> ID DOBLEPT Y MUT dimensiones .)


state 114

    (43) dimensiones -> CORIZQ . tipo_dato CORDER
    (44) dimensiones -> CORIZQ . tipo_dato PTCOMA expresion CORDER
    (45) dimensiones -> CORIZQ . CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER
    (46) dimensiones -> CORIZQ . CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
    (119) tipo_dato -> . I64
    (120) tipo_dato -> . F64
    (121) tipo_dato -> . BOOL
    (122) tipo_dato -> . CHAR
    (123) tipo_dato -> . str
    (124) tipo_dato -> . STRING
    (125) tipo_dato -> . USIZE
    (126) str -> . Y STR

    CORIZQ          shift and go to state 154
    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 155
    str                            shift and go to state 25

state 115

    (33) print -> PRINTLN NOT PIZQ . lista_expresiones PDER
    (15) lista_expresiones -> . lista_expresiones COMA expresion
    (16) lista_expresiones -> . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    lista_expresiones              shift and go to state 156
    expresion                      shift and go to state 122
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 116

    (37) declaracion -> LET MUT ID . DOBLEPT tipo_dato IGUAL expresion
    (39) declaracion -> LET MUT ID . IGUAL expresion
    (41) declaracion -> LET MUT ID . DOBLEPT dimensiones IGUAL expresion

    DOBLEPT         shift and go to state 157
    IGUAL           shift and go to state 158


state 117

    (38) declaracion -> LET ID DOBLEPT . tipo_dato IGUAL expresion
    (42) declaracion -> LET ID DOBLEPT . dimensiones IGUAL expresion
    (119) tipo_dato -> . I64
    (120) tipo_dato -> . F64
    (121) tipo_dato -> . BOOL
    (122) tipo_dato -> . CHAR
    (123) tipo_dato -> . str
    (124) tipo_dato -> . STRING
    (125) tipo_dato -> . USIZE
    (43) dimensiones -> . CORIZQ tipo_dato CORDER
    (44) dimensiones -> . CORIZQ tipo_dato PTCOMA expresion CORDER
    (45) dimensiones -> . CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER
    (46) dimensiones -> . CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
    (126) str -> . Y STR

    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    CORIZQ          shift and go to state 114
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 159
    dimensiones                    shift and go to state 160
    str                            shift and go to state 25

state 118

    (40) declaracion -> LET ID IGUAL . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 161
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 119

    (47) asignacion -> ID IGUAL expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    PTCOMA          reduce using rule 47 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 120

    (13) llamadaF -> ID PIZQ PDER .

    PTCOMA          reduce using rule 13 (llamadaF -> ID PIZQ PDER .)
    MAS             reduce using rule 13 (llamadaF -> ID PIZQ PDER .)
    MENOS           reduce using rule 13 (llamadaF -> ID PIZQ PDER .)
    MULTIPLICACION  reduce using rule 13 (llamadaF -> ID PIZQ PDER .)
    DIVISION        reduce using rule 13 (llamadaF -> ID PIZQ PDER .)
    MODULO          reduce using rule 13 (llamadaF -> ID PIZQ PDER .)
    MAYOR           reduce using rule 13 (llamadaF -> ID PIZQ PDER .)
    MENOR           reduce using rule 13 (llamadaF -> ID PIZQ PDER .)
    MAYORIGUAL      reduce using rule 13 (llamadaF -> ID PIZQ PDER .)
    MENORIGUAL      reduce using rule 13 (llamadaF -> ID PIZQ PDER .)
    IGUALIGUAL      reduce using rule 13 (llamadaF -> ID PIZQ PDER .)
    DIFERENTE       reduce using rule 13 (llamadaF -> ID PIZQ PDER .)
    AND             reduce using rule 13 (llamadaF -> ID PIZQ PDER .)
    OR              reduce using rule 13 (llamadaF -> ID PIZQ PDER .)
    PUNTO           reduce using rule 13 (llamadaF -> ID PIZQ PDER .)
    AS              reduce using rule 13 (llamadaF -> ID PIZQ PDER .)
    LLAVEIZQ        reduce using rule 13 (llamadaF -> ID PIZQ PDER .)
    PDER            reduce using rule 13 (llamadaF -> ID PIZQ PDER .)
    COMA            reduce using rule 13 (llamadaF -> ID PIZQ PDER .)
    CORDER          reduce using rule 13 (llamadaF -> ID PIZQ PDER .)
    LLAVEDER        reduce using rule 13 (llamadaF -> ID PIZQ PDER .)


state 121

    (14) llamadaF -> ID PIZQ lista_expresiones . PDER
    (15) lista_expresiones -> lista_expresiones . COMA expresion

    PDER            shift and go to state 162
    COMA            shift and go to state 163


state 122

    (16) lista_expresiones -> expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    PDER            reduce using rule 16 (lista_expresiones -> expresion .)
    COMA            reduce using rule 16 (lista_expresiones -> expresion .)
    CORDER          reduce using rule 16 (lista_expresiones -> expresion .)
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 123

    (36) asignacionA -> ID ubicaciones IGUAL . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 164
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 124

    (95) ubicaciones -> ubicaciones ubicacion .

    IGUAL           reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)
    CORIZQ          reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)
    MAS             reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)
    MENOS           reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)
    MULTIPLICACION  reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)
    DIVISION        reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)
    MODULO          reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)
    MAYOR           reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)
    MENOR           reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)
    MAYORIGUAL      reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)
    MENORIGUAL      reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)
    IGUALIGUAL      reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)
    DIFERENTE       reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)
    AND             reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)
    OR              reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)
    PUNTO           reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)
    AS              reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)
    LLAVEIZQ        reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)
    PTCOMA          reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)
    PDER            reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)
    COMA            reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)
    CORDER          reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)
    LLAVEDER        reduce using rule 95 (ubicaciones -> ubicaciones ubicacion .)


state 125

    (97) ubicacion -> CORIZQ expresion . CORDER
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    CORDER          shift and go to state 165
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 126

    (105) if_e -> IF expresion . LLAVEIZQ expresion LLAVEDER
    (106) if_e -> IF expresion . LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> IF expresion . LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> IF expresion . LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    LLAVEIZQ        shift and go to state 166
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 127

    (48) if_i -> IF expresion bloque . else
    (49) else -> . ELSE if_i
    (50) else -> . ELSE bloque
    (51) else -> . empty
    (52) empty -> .

    ELSE            shift and go to state 168
    LLAVEDER        reduce using rule 52 (empty -> .)
    PRINTLN         reduce using rule 52 (empty -> .)
    LET             reduce using rule 52 (empty -> .)
    ID              reduce using rule 52 (empty -> .)
    IF              reduce using rule 52 (empty -> .)
    RETURN          reduce using rule 52 (empty -> .)
    LOOP            reduce using rule 52 (empty -> .)
    BREAK           reduce using rule 52 (empty -> .)
    WHILE           reduce using rule 52 (empty -> .)
    CONTINUE        reduce using rule 52 (empty -> .)
    FOR             reduce using rule 52 (empty -> .)
    MENOS           reduce using rule 52 (empty -> .)
    I64             reduce using rule 52 (empty -> .)
    F64             reduce using rule 52 (empty -> .)
    PIZQ            reduce using rule 52 (empty -> .)
    NOT             reduce using rule 52 (empty -> .)
    ENTERO          reduce using rule 52 (empty -> .)
    DECIMAL         reduce using rule 52 (empty -> .)
    CARACTER        reduce using rule 52 (empty -> .)
    CADENA          reduce using rule 52 (empty -> .)
    TRUE            reduce using rule 52 (empty -> .)
    FALSE           reduce using rule 52 (empty -> .)
    CORIZQ          reduce using rule 52 (empty -> .)
    Y               reduce using rule 52 (empty -> .)

    else                           shift and go to state 167
    empty                          shift and go to state 169

state 128

    (62) expresion -> expresion MAS . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 170
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 129

    (63) expresion -> expresion MENOS . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 171
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 130

    (64) expresion -> expresion MULTIPLICACION . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 172
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 131

    (65) expresion -> expresion DIVISION . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 173
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 132

    (66) expresion -> expresion MODULO . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 174
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 133

    (70) expresion -> expresion MAYOR . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 175
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 134

    (71) expresion -> expresion MENOR . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 176
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 135

    (72) expresion -> expresion MAYORIGUAL . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 177
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 136

    (73) expresion -> expresion MENORIGUAL . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 178
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 137

    (74) expresion -> expresion IGUALIGUAL . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 179
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 138

    (75) expresion -> expresion DIFERENTE . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 180
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 139

    (76) expresion -> expresion AND . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 181
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 140

    (77) expresion -> expresion OR . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 182
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 141

    (99) tostring -> expresion PUNTO . TOSTRING PIZQ PDER
    (100) tostring -> expresion PUNTO . TOOWNED PIZQ PDER
    (103) abs -> expresion PUNTO . ABS PIZQ PDER
    (104) sqrt -> expresion PUNTO . SQRT PIZQ PDER
    (92) len -> expresion PUNTO . LEN PIZQ PDER
    (91) clone -> expresion PUNTO . CLONE PIZQ PDER

    TOSTRING        shift and go to state 183
    TOOWNED         shift and go to state 184
    ABS             shift and go to state 185
    SQRT            shift and go to state 186
    LEN             shift and go to state 187
    CLONE           shift and go to state 188


state 142

    (101) as -> expresion AS . I64
    (102) as -> expresion AS . F64

    I64             shift and go to state 189
    F64             shift and go to state 190


state 143

    (61) expresion -> MENOS expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    MAS             reduce using rule 61 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 61 (expresion -> MENOS expresion .)
    MULTIPLICACION  reduce using rule 61 (expresion -> MENOS expresion .)
    DIVISION        reduce using rule 61 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 61 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 61 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 61 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 61 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 61 (expresion -> MENOS expresion .)
    IGUALIGUAL      reduce using rule 61 (expresion -> MENOS expresion .)
    DIFERENTE       reduce using rule 61 (expresion -> MENOS expresion .)
    AND             reduce using rule 61 (expresion -> MENOS expresion .)
    OR              reduce using rule 61 (expresion -> MENOS expresion .)
    PUNTO           reduce using rule 61 (expresion -> MENOS expresion .)
    AS              reduce using rule 61 (expresion -> MENOS expresion .)
    LLAVEIZQ        reduce using rule 61 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 61 (expresion -> MENOS expresion .)
    PDER            reduce using rule 61 (expresion -> MENOS expresion .)
    COMA            reduce using rule 61 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 61 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 61 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 128 ]
  ! MENOS           [ shift and go to state 129 ]
  ! MULTIPLICACION  [ shift and go to state 130 ]
  ! DIVISION        [ shift and go to state 131 ]
  ! MODULO          [ shift and go to state 132 ]
  ! MAYOR           [ shift and go to state 133 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MAYORIGUAL      [ shift and go to state 135 ]
  ! MENORIGUAL      [ shift and go to state 136 ]
  ! IGUALIGUAL      [ shift and go to state 137 ]
  ! DIFERENTE       [ shift and go to state 138 ]
  ! AND             [ shift and go to state 139 ]
  ! OR              [ shift and go to state 140 ]
  ! PUNTO           [ shift and go to state 141 ]
  ! AS              [ shift and go to state 142 ]


state 144

    (67) expresion -> I64 DOBLEPT . DOBLEPT POW PIZQ expresion COMA expresion PDER

    DOBLEPT         shift and go to state 191


state 145

    (69) expresion -> PIZQ expresion . PDER
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    PDER            shift and go to state 192
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 146

    (68) expresion -> F64 DOBLEPT . DOBLEPT POWF PIZQ expresion COMA expresion PDER

    DOBLEPT         shift and go to state 193


state 147

    (78) expresion -> NOT expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    MAS             reduce using rule 78 (expresion -> NOT expresion .)
    MENOS           reduce using rule 78 (expresion -> NOT expresion .)
    MULTIPLICACION  reduce using rule 78 (expresion -> NOT expresion .)
    DIVISION        reduce using rule 78 (expresion -> NOT expresion .)
    MODULO          reduce using rule 78 (expresion -> NOT expresion .)
    MAYOR           reduce using rule 78 (expresion -> NOT expresion .)
    MENOR           reduce using rule 78 (expresion -> NOT expresion .)
    MAYORIGUAL      reduce using rule 78 (expresion -> NOT expresion .)
    MENORIGUAL      reduce using rule 78 (expresion -> NOT expresion .)
    IGUALIGUAL      reduce using rule 78 (expresion -> NOT expresion .)
    DIFERENTE       reduce using rule 78 (expresion -> NOT expresion .)
    AND             reduce using rule 78 (expresion -> NOT expresion .)
    OR              reduce using rule 78 (expresion -> NOT expresion .)
    PUNTO           reduce using rule 78 (expresion -> NOT expresion .)
    AS              reduce using rule 78 (expresion -> NOT expresion .)
    LLAVEIZQ        reduce using rule 78 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 78 (expresion -> NOT expresion .)
    PDER            reduce using rule 78 (expresion -> NOT expresion .)
    COMA            reduce using rule 78 (expresion -> NOT expresion .)
    CORDER          reduce using rule 78 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 78 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 128 ]
  ! MENOS           [ shift and go to state 129 ]
  ! MULTIPLICACION  [ shift and go to state 130 ]
  ! DIVISION        [ shift and go to state 131 ]
  ! MODULO          [ shift and go to state 132 ]
  ! MAYOR           [ shift and go to state 133 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MAYORIGUAL      [ shift and go to state 135 ]
  ! MENORIGUAL      [ shift and go to state 136 ]
  ! IGUALIGUAL      [ shift and go to state 137 ]
  ! DIFERENTE       [ shift and go to state 138 ]
  ! AND             [ shift and go to state 139 ]
  ! OR              [ shift and go to state 140 ]
  ! PUNTO           [ shift and go to state 141 ]
  ! AS              [ shift and go to state 142 ]


state 148

    (94) accesoarray -> ID ubicaciones .
    (95) ubicaciones -> ubicaciones . ubicacion
    (97) ubicacion -> . CORIZQ expresion CORDER

    MAS             reduce using rule 94 (accesoarray -> ID ubicaciones .)
    MENOS           reduce using rule 94 (accesoarray -> ID ubicaciones .)
    MULTIPLICACION  reduce using rule 94 (accesoarray -> ID ubicaciones .)
    DIVISION        reduce using rule 94 (accesoarray -> ID ubicaciones .)
    MODULO          reduce using rule 94 (accesoarray -> ID ubicaciones .)
    MAYOR           reduce using rule 94 (accesoarray -> ID ubicaciones .)
    MENOR           reduce using rule 94 (accesoarray -> ID ubicaciones .)
    MAYORIGUAL      reduce using rule 94 (accesoarray -> ID ubicaciones .)
    MENORIGUAL      reduce using rule 94 (accesoarray -> ID ubicaciones .)
    IGUALIGUAL      reduce using rule 94 (accesoarray -> ID ubicaciones .)
    DIFERENTE       reduce using rule 94 (accesoarray -> ID ubicaciones .)
    AND             reduce using rule 94 (accesoarray -> ID ubicaciones .)
    OR              reduce using rule 94 (accesoarray -> ID ubicaciones .)
    PUNTO           reduce using rule 94 (accesoarray -> ID ubicaciones .)
    AS              reduce using rule 94 (accesoarray -> ID ubicaciones .)
    LLAVEIZQ        reduce using rule 94 (accesoarray -> ID ubicaciones .)
    PTCOMA          reduce using rule 94 (accesoarray -> ID ubicaciones .)
    PDER            reduce using rule 94 (accesoarray -> ID ubicaciones .)
    COMA            reduce using rule 94 (accesoarray -> ID ubicaciones .)
    CORDER          reduce using rule 94 (accesoarray -> ID ubicaciones .)
    LLAVEDER        reduce using rule 94 (accesoarray -> ID ubicaciones .)
    CORIZQ          shift and go to state 78

    ubicacion                      shift and go to state 124

state 149

    (98) arraycontenido -> CORIZQ lista_expresiones . CORDER
    (15) lista_expresiones -> lista_expresiones . COMA expresion

    CORDER          shift and go to state 194
    COMA            shift and go to state 163


state 150

    (93) referencia -> Y MUT . ID

    ID              shift and go to state 195


state 151

    (56) while -> WHILE expresion bloque .

    LLAVEDER        reduce using rule 56 (while -> WHILE expresion bloque .)
    PRINTLN         reduce using rule 56 (while -> WHILE expresion bloque .)
    LET             reduce using rule 56 (while -> WHILE expresion bloque .)
    ID              reduce using rule 56 (while -> WHILE expresion bloque .)
    IF              reduce using rule 56 (while -> WHILE expresion bloque .)
    RETURN          reduce using rule 56 (while -> WHILE expresion bloque .)
    LOOP            reduce using rule 56 (while -> WHILE expresion bloque .)
    BREAK           reduce using rule 56 (while -> WHILE expresion bloque .)
    WHILE           reduce using rule 56 (while -> WHILE expresion bloque .)
    CONTINUE        reduce using rule 56 (while -> WHILE expresion bloque .)
    FOR             reduce using rule 56 (while -> WHILE expresion bloque .)
    MENOS           reduce using rule 56 (while -> WHILE expresion bloque .)
    I64             reduce using rule 56 (while -> WHILE expresion bloque .)
    F64             reduce using rule 56 (while -> WHILE expresion bloque .)
    PIZQ            reduce using rule 56 (while -> WHILE expresion bloque .)
    NOT             reduce using rule 56 (while -> WHILE expresion bloque .)
    ENTERO          reduce using rule 56 (while -> WHILE expresion bloque .)
    DECIMAL         reduce using rule 56 (while -> WHILE expresion bloque .)
    CARACTER        reduce using rule 56 (while -> WHILE expresion bloque .)
    CADENA          reduce using rule 56 (while -> WHILE expresion bloque .)
    TRUE            reduce using rule 56 (while -> WHILE expresion bloque .)
    FALSE           reduce using rule 56 (while -> WHILE expresion bloque .)
    CORIZQ          reduce using rule 56 (while -> WHILE expresion bloque .)
    Y               reduce using rule 56 (while -> WHILE expresion bloque .)


state 152

    (58) for -> FOR ID IN . expresion PUNTO PUNTO expresion bloque
    (59) for -> FOR ID IN . expresion PUNTO CHARS PIZQ PDER bloque
    (60) for -> FOR ID IN . expresion bloque
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 196
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 153

    (8) funcion -> FN ID PIZQ parametros PDER FLECHA tipo_dato bloque .

    FN              reduce using rule 8 (funcion -> FN ID PIZQ parametros PDER FLECHA tipo_dato bloque .)
    $end            reduce using rule 8 (funcion -> FN ID PIZQ parametros PDER FLECHA tipo_dato bloque .)


state 154

    (45) dimensiones -> CORIZQ CORIZQ . tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER
    (46) dimensiones -> CORIZQ CORIZQ . CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
    (119) tipo_dato -> . I64
    (120) tipo_dato -> . F64
    (121) tipo_dato -> . BOOL
    (122) tipo_dato -> . CHAR
    (123) tipo_dato -> . str
    (124) tipo_dato -> . STRING
    (125) tipo_dato -> . USIZE
    (126) str -> . Y STR

    CORIZQ          shift and go to state 197
    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 198
    str                            shift and go to state 25

state 155

    (43) dimensiones -> CORIZQ tipo_dato . CORDER
    (44) dimensiones -> CORIZQ tipo_dato . PTCOMA expresion CORDER

    CORDER          shift and go to state 199
    PTCOMA          shift and go to state 200


state 156

    (33) print -> PRINTLN NOT PIZQ lista_expresiones . PDER
    (15) lista_expresiones -> lista_expresiones . COMA expresion

    PDER            shift and go to state 201
    COMA            shift and go to state 163


state 157

    (37) declaracion -> LET MUT ID DOBLEPT . tipo_dato IGUAL expresion
    (41) declaracion -> LET MUT ID DOBLEPT . dimensiones IGUAL expresion
    (119) tipo_dato -> . I64
    (120) tipo_dato -> . F64
    (121) tipo_dato -> . BOOL
    (122) tipo_dato -> . CHAR
    (123) tipo_dato -> . str
    (124) tipo_dato -> . STRING
    (125) tipo_dato -> . USIZE
    (43) dimensiones -> . CORIZQ tipo_dato CORDER
    (44) dimensiones -> . CORIZQ tipo_dato PTCOMA expresion CORDER
    (45) dimensiones -> . CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER
    (46) dimensiones -> . CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
    (126) str -> . Y STR

    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    CORIZQ          shift and go to state 114
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 202
    dimensiones                    shift and go to state 203
    str                            shift and go to state 25

state 158

    (39) declaracion -> LET MUT ID IGUAL . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 204
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 159

    (38) declaracion -> LET ID DOBLEPT tipo_dato . IGUAL expresion

    IGUAL           shift and go to state 205


state 160

    (42) declaracion -> LET ID DOBLEPT dimensiones . IGUAL expresion

    IGUAL           shift and go to state 206


state 161

    (40) declaracion -> LET ID IGUAL expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    PTCOMA          reduce using rule 40 (declaracion -> LET ID IGUAL expresion .)
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 162

    (14) llamadaF -> ID PIZQ lista_expresiones PDER .

    PTCOMA          reduce using rule 14 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MAS             reduce using rule 14 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MENOS           reduce using rule 14 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MULTIPLICACION  reduce using rule 14 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    DIVISION        reduce using rule 14 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MODULO          reduce using rule 14 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MAYOR           reduce using rule 14 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MENOR           reduce using rule 14 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MAYORIGUAL      reduce using rule 14 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MENORIGUAL      reduce using rule 14 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    IGUALIGUAL      reduce using rule 14 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    DIFERENTE       reduce using rule 14 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    AND             reduce using rule 14 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    OR              reduce using rule 14 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    PUNTO           reduce using rule 14 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    AS              reduce using rule 14 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    LLAVEIZQ        reduce using rule 14 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    PDER            reduce using rule 14 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    COMA            reduce using rule 14 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    CORDER          reduce using rule 14 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    LLAVEDER        reduce using rule 14 (llamadaF -> ID PIZQ lista_expresiones PDER .)


state 163

    (15) lista_expresiones -> lista_expresiones COMA . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 207
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 164

    (36) asignacionA -> ID ubicaciones IGUAL expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    PTCOMA          reduce using rule 36 (asignacionA -> ID ubicaciones IGUAL expresion .)
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 165

    (97) ubicacion -> CORIZQ expresion CORDER .

    IGUAL           reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)
    MAS             reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)
    MULTIPLICACION  reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)
    DIVISION        reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)
    MODULO          reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)
    MAYOR           reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)
    MENOR           reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)
    MAYORIGUAL      reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)
    MENORIGUAL      reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)
    IGUALIGUAL      reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)
    DIFERENTE       reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)
    AND             reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)
    OR              reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)
    PUNTO           reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)
    AS              reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)
    LLAVEIZQ        reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)
    PDER            reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)
    LLAVEDER        reduce using rule 97 (ubicacion -> CORIZQ expresion CORDER .)


state 166

    (105) if_e -> IF expresion LLAVEIZQ . expresion LLAVEDER
    (106) if_e -> IF expresion LLAVEIZQ . expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> IF expresion LLAVEIZQ . expresion LLAVEDER listaelse
    (108) if_e -> IF expresion LLAVEIZQ . instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (21) instruccion -> . print PTCOMA
    (22) instruccion -> . declaracion PTCOMA
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . if_i
    (25) instruccion -> . llamadaF PTCOMA
    (26) instruccion -> . return PTCOMA
    (27) instruccion -> . loop
    (28) instruccion -> . break PTCOMA
    (29) instruccion -> . while
    (30) instruccion -> . continue PTCOMA
    (31) instruccion -> . for
    (32) instruccion -> . asignacionA PTCOMA
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER
    (33) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (37) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (38) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (39) declaracion -> . LET MUT ID IGUAL expresion
    (40) declaracion -> . LET ID IGUAL expresion
    (41) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (42) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (47) asignacion -> . ID IGUAL expresion
    (48) if_i -> . IF expresion bloque else
    (34) return -> . RETURN
    (35) return -> . RETURN expresion
    (54) break -> . BREAK
    (55) break -> . BREAK expresion
    (56) while -> . WHILE expresion bloque
    (57) continue -> . CONTINUE
    (58) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (59) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (60) for -> . FOR ID IN expresion bloque
    (36) asignacionA -> . ID ubicaciones IGUAL expresion

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 213
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 208
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106
    PRINTLN         shift and go to state 45
    LET             shift and go to state 46
    RETURN          shift and go to state 49
    BREAK           shift and go to state 51
    WHILE           shift and go to state 52
    CONTINUE        shift and go to state 53
    FOR             shift and go to state 54

    expresion                      shift and go to state 209
    instruccion                    shift and go to state 210
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 211
    loop                           shift and go to state 212
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    return                         shift and go to state 38
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    asignacionA                    shift and go to state 44

state 167

    (48) if_i -> IF expresion bloque else .

    LLAVEDER        reduce using rule 48 (if_i -> IF expresion bloque else .)
    PRINTLN         reduce using rule 48 (if_i -> IF expresion bloque else .)
    LET             reduce using rule 48 (if_i -> IF expresion bloque else .)
    ID              reduce using rule 48 (if_i -> IF expresion bloque else .)
    IF              reduce using rule 48 (if_i -> IF expresion bloque else .)
    RETURN          reduce using rule 48 (if_i -> IF expresion bloque else .)
    LOOP            reduce using rule 48 (if_i -> IF expresion bloque else .)
    BREAK           reduce using rule 48 (if_i -> IF expresion bloque else .)
    WHILE           reduce using rule 48 (if_i -> IF expresion bloque else .)
    CONTINUE        reduce using rule 48 (if_i -> IF expresion bloque else .)
    FOR             reduce using rule 48 (if_i -> IF expresion bloque else .)
    MENOS           reduce using rule 48 (if_i -> IF expresion bloque else .)
    I64             reduce using rule 48 (if_i -> IF expresion bloque else .)
    F64             reduce using rule 48 (if_i -> IF expresion bloque else .)
    PIZQ            reduce using rule 48 (if_i -> IF expresion bloque else .)
    NOT             reduce using rule 48 (if_i -> IF expresion bloque else .)
    ENTERO          reduce using rule 48 (if_i -> IF expresion bloque else .)
    DECIMAL         reduce using rule 48 (if_i -> IF expresion bloque else .)
    CARACTER        reduce using rule 48 (if_i -> IF expresion bloque else .)
    CADENA          reduce using rule 48 (if_i -> IF expresion bloque else .)
    TRUE            reduce using rule 48 (if_i -> IF expresion bloque else .)
    FALSE           reduce using rule 48 (if_i -> IF expresion bloque else .)
    CORIZQ          reduce using rule 48 (if_i -> IF expresion bloque else .)
    Y               reduce using rule 48 (if_i -> IF expresion bloque else .)


state 168

    (49) else -> ELSE . if_i
    (50) else -> ELSE . bloque
    (48) if_i -> . IF expresion bloque else
    (17) bloque -> . LLAVEIZQ LLAVEDER
    (18) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    IF              shift and go to state 48
    LLAVEIZQ        shift and go to state 16

    if_i                           shift and go to state 214
    bloque                         shift and go to state 215

state 169

    (51) else -> empty .

    LLAVEDER        reduce using rule 51 (else -> empty .)
    PRINTLN         reduce using rule 51 (else -> empty .)
    LET             reduce using rule 51 (else -> empty .)
    ID              reduce using rule 51 (else -> empty .)
    IF              reduce using rule 51 (else -> empty .)
    RETURN          reduce using rule 51 (else -> empty .)
    LOOP            reduce using rule 51 (else -> empty .)
    BREAK           reduce using rule 51 (else -> empty .)
    WHILE           reduce using rule 51 (else -> empty .)
    CONTINUE        reduce using rule 51 (else -> empty .)
    FOR             reduce using rule 51 (else -> empty .)
    MENOS           reduce using rule 51 (else -> empty .)
    I64             reduce using rule 51 (else -> empty .)
    F64             reduce using rule 51 (else -> empty .)
    PIZQ            reduce using rule 51 (else -> empty .)
    NOT             reduce using rule 51 (else -> empty .)
    ENTERO          reduce using rule 51 (else -> empty .)
    DECIMAL         reduce using rule 51 (else -> empty .)
    CARACTER        reduce using rule 51 (else -> empty .)
    CADENA          reduce using rule 51 (else -> empty .)
    TRUE            reduce using rule 51 (else -> empty .)
    FALSE           reduce using rule 51 (else -> empty .)
    CORIZQ          reduce using rule 51 (else -> empty .)
    Y               reduce using rule 51 (else -> empty .)


state 170

    (62) expresion -> expresion MAS expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    MAS             reduce using rule 62 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 62 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 62 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 62 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 62 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 62 (expresion -> expresion MAS expresion .)
    IGUALIGUAL      reduce using rule 62 (expresion -> expresion MAS expresion .)
    DIFERENTE       reduce using rule 62 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 62 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 62 (expresion -> expresion MAS expresion .)
    PUNTO           reduce using rule 62 (expresion -> expresion MAS expresion .)
    AS              reduce using rule 62 (expresion -> expresion MAS expresion .)
    LLAVEIZQ        reduce using rule 62 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 62 (expresion -> expresion MAS expresion .)
    PDER            reduce using rule 62 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 62 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 62 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 62 (expresion -> expresion MAS expresion .)
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132

  ! MULTIPLICACION  [ reduce using rule 62 (expresion -> expresion MAS expresion .) ]
  ! DIVISION        [ reduce using rule 62 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 62 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 128 ]
  ! MENOS           [ shift and go to state 129 ]
  ! MAYOR           [ shift and go to state 133 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MAYORIGUAL      [ shift and go to state 135 ]
  ! MENORIGUAL      [ shift and go to state 136 ]
  ! IGUALIGUAL      [ shift and go to state 137 ]
  ! DIFERENTE       [ shift and go to state 138 ]
  ! AND             [ shift and go to state 139 ]
  ! OR              [ shift and go to state 140 ]
  ! PUNTO           [ shift and go to state 141 ]
  ! AS              [ shift and go to state 142 ]


state 171

    (63) expresion -> expresion MENOS expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    MAS             reduce using rule 63 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 63 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 63 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 63 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 63 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 63 (expresion -> expresion MENOS expresion .)
    IGUALIGUAL      reduce using rule 63 (expresion -> expresion MENOS expresion .)
    DIFERENTE       reduce using rule 63 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 63 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 63 (expresion -> expresion MENOS expresion .)
    PUNTO           reduce using rule 63 (expresion -> expresion MENOS expresion .)
    AS              reduce using rule 63 (expresion -> expresion MENOS expresion .)
    LLAVEIZQ        reduce using rule 63 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 63 (expresion -> expresion MENOS expresion .)
    PDER            reduce using rule 63 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 63 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 63 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 63 (expresion -> expresion MENOS expresion .)
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132

  ! MULTIPLICACION  [ reduce using rule 63 (expresion -> expresion MENOS expresion .) ]
  ! DIVISION        [ reduce using rule 63 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 63 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 128 ]
  ! MENOS           [ shift and go to state 129 ]
  ! MAYOR           [ shift and go to state 133 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MAYORIGUAL      [ shift and go to state 135 ]
  ! MENORIGUAL      [ shift and go to state 136 ]
  ! IGUALIGUAL      [ shift and go to state 137 ]
  ! DIFERENTE       [ shift and go to state 138 ]
  ! AND             [ shift and go to state 139 ]
  ! OR              [ shift and go to state 140 ]
  ! PUNTO           [ shift and go to state 141 ]
  ! AS              [ shift and go to state 142 ]


state 172

    (64) expresion -> expresion MULTIPLICACION expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    MAS             reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    MENOS           reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    MULTIPLICACION  reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    DIVISION        reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    MODULO          reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    MAYOR           reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    MENOR           reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    MAYORIGUAL      reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    MENORIGUAL      reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    IGUALIGUAL      reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    DIFERENTE       reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    AND             reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    OR              reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    PUNTO           reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    AS              reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    LLAVEIZQ        reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    PTCOMA          reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    PDER            reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    COMA            reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    CORDER          reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)
    LLAVEDER        reduce using rule 64 (expresion -> expresion MULTIPLICACION expresion .)

  ! MAS             [ shift and go to state 128 ]
  ! MENOS           [ shift and go to state 129 ]
  ! MULTIPLICACION  [ shift and go to state 130 ]
  ! DIVISION        [ shift and go to state 131 ]
  ! MODULO          [ shift and go to state 132 ]
  ! MAYOR           [ shift and go to state 133 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MAYORIGUAL      [ shift and go to state 135 ]
  ! MENORIGUAL      [ shift and go to state 136 ]
  ! IGUALIGUAL      [ shift and go to state 137 ]
  ! DIFERENTE       [ shift and go to state 138 ]
  ! AND             [ shift and go to state 139 ]
  ! OR              [ shift and go to state 140 ]
  ! PUNTO           [ shift and go to state 141 ]
  ! AS              [ shift and go to state 142 ]


state 173

    (65) expresion -> expresion DIVISION expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    MAS             reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    MENOS           reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    MULTIPLICACION  reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    DIVISION        reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    MODULO          reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    MAYOR           reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    MENOR           reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    MAYORIGUAL      reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    MENORIGUAL      reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    IGUALIGUAL      reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    DIFERENTE       reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    AND             reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    OR              reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    PUNTO           reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    AS              reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    LLAVEIZQ        reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    PTCOMA          reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    PDER            reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    COMA            reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    CORDER          reduce using rule 65 (expresion -> expresion DIVISION expresion .)
    LLAVEDER        reduce using rule 65 (expresion -> expresion DIVISION expresion .)

  ! MAS             [ shift and go to state 128 ]
  ! MENOS           [ shift and go to state 129 ]
  ! MULTIPLICACION  [ shift and go to state 130 ]
  ! DIVISION        [ shift and go to state 131 ]
  ! MODULO          [ shift and go to state 132 ]
  ! MAYOR           [ shift and go to state 133 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MAYORIGUAL      [ shift and go to state 135 ]
  ! MENORIGUAL      [ shift and go to state 136 ]
  ! IGUALIGUAL      [ shift and go to state 137 ]
  ! DIFERENTE       [ shift and go to state 138 ]
  ! AND             [ shift and go to state 139 ]
  ! OR              [ shift and go to state 140 ]
  ! PUNTO           [ shift and go to state 141 ]
  ! AS              [ shift and go to state 142 ]


state 174

    (66) expresion -> expresion MODULO expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    MAS             reduce using rule 66 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 66 (expresion -> expresion MODULO expresion .)
    MULTIPLICACION  reduce using rule 66 (expresion -> expresion MODULO expresion .)
    DIVISION        reduce using rule 66 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 66 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 66 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 66 (expresion -> expresion MODULO expresion .)
    MAYORIGUAL      reduce using rule 66 (expresion -> expresion MODULO expresion .)
    MENORIGUAL      reduce using rule 66 (expresion -> expresion MODULO expresion .)
    IGUALIGUAL      reduce using rule 66 (expresion -> expresion MODULO expresion .)
    DIFERENTE       reduce using rule 66 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 66 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 66 (expresion -> expresion MODULO expresion .)
    PUNTO           reduce using rule 66 (expresion -> expresion MODULO expresion .)
    AS              reduce using rule 66 (expresion -> expresion MODULO expresion .)
    LLAVEIZQ        reduce using rule 66 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 66 (expresion -> expresion MODULO expresion .)
    PDER            reduce using rule 66 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 66 (expresion -> expresion MODULO expresion .)
    CORDER          reduce using rule 66 (expresion -> expresion MODULO expresion .)
    LLAVEDER        reduce using rule 66 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 128 ]
  ! MENOS           [ shift and go to state 129 ]
  ! MULTIPLICACION  [ shift and go to state 130 ]
  ! DIVISION        [ shift and go to state 131 ]
  ! MODULO          [ shift and go to state 132 ]
  ! MAYOR           [ shift and go to state 133 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MAYORIGUAL      [ shift and go to state 135 ]
  ! MENORIGUAL      [ shift and go to state 136 ]
  ! IGUALIGUAL      [ shift and go to state 137 ]
  ! DIFERENTE       [ shift and go to state 138 ]
  ! AND             [ shift and go to state 139 ]
  ! OR              [ shift and go to state 140 ]
  ! PUNTO           [ shift and go to state 141 ]
  ! AS              [ shift and go to state 142 ]


state 175

    (70) expresion -> expresion MAYOR expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    MAYOR           reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    MAYORIGUAL      reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    MENORIGUAL      reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    IGUALIGUAL      reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    DIFERENTE       reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    AS              reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    LLAVEIZQ        reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    PTCOMA          reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    PDER            reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    CORDER          reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    LLAVEDER        reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    PUNTO           shift and go to state 141

  ! MAS             [ reduce using rule 70 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 70 (expresion -> expresion MAYOR expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 70 (expresion -> expresion MAYOR expresion .) ]
  ! DIVISION        [ reduce using rule 70 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 70 (expresion -> expresion MAYOR expresion .) ]
  ! PUNTO           [ reduce using rule 70 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ shift and go to state 133 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MAYORIGUAL      [ shift and go to state 135 ]
  ! MENORIGUAL      [ shift and go to state 136 ]
  ! IGUALIGUAL      [ shift and go to state 137 ]
  ! DIFERENTE       [ shift and go to state 138 ]
  ! AND             [ shift and go to state 139 ]
  ! OR              [ shift and go to state 140 ]
  ! AS              [ shift and go to state 142 ]


state 176

    (71) expresion -> expresion MENOR expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    MAYOR           reduce using rule 71 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 71 (expresion -> expresion MENOR expresion .)
    MAYORIGUAL      reduce using rule 71 (expresion -> expresion MENOR expresion .)
    MENORIGUAL      reduce using rule 71 (expresion -> expresion MENOR expresion .)
    IGUALIGUAL      reduce using rule 71 (expresion -> expresion MENOR expresion .)
    DIFERENTE       reduce using rule 71 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 71 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 71 (expresion -> expresion MENOR expresion .)
    AS              reduce using rule 71 (expresion -> expresion MENOR expresion .)
    LLAVEIZQ        reduce using rule 71 (expresion -> expresion MENOR expresion .)
    PTCOMA          reduce using rule 71 (expresion -> expresion MENOR expresion .)
    PDER            reduce using rule 71 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 71 (expresion -> expresion MENOR expresion .)
    CORDER          reduce using rule 71 (expresion -> expresion MENOR expresion .)
    LLAVEDER        reduce using rule 71 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    PUNTO           shift and go to state 141

  ! MAS             [ reduce using rule 71 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 71 (expresion -> expresion MENOR expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 71 (expresion -> expresion MENOR expresion .) ]
  ! DIVISION        [ reduce using rule 71 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 71 (expresion -> expresion MENOR expresion .) ]
  ! PUNTO           [ reduce using rule 71 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ shift and go to state 133 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MAYORIGUAL      [ shift and go to state 135 ]
  ! MENORIGUAL      [ shift and go to state 136 ]
  ! IGUALIGUAL      [ shift and go to state 137 ]
  ! DIFERENTE       [ shift and go to state 138 ]
  ! AND             [ shift and go to state 139 ]
  ! OR              [ shift and go to state 140 ]
  ! AS              [ shift and go to state 142 ]


state 177

    (72) expresion -> expresion MAYORIGUAL expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    MAYOR           reduce using rule 72 (expresion -> expresion MAYORIGUAL expresion .)
    MENOR           reduce using rule 72 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 72 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 72 (expresion -> expresion MAYORIGUAL expresion .)
    IGUALIGUAL      reduce using rule 72 (expresion -> expresion MAYORIGUAL expresion .)
    DIFERENTE       reduce using rule 72 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 72 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 72 (expresion -> expresion MAYORIGUAL expresion .)
    AS              reduce using rule 72 (expresion -> expresion MAYORIGUAL expresion .)
    LLAVEIZQ        reduce using rule 72 (expresion -> expresion MAYORIGUAL expresion .)
    PTCOMA          reduce using rule 72 (expresion -> expresion MAYORIGUAL expresion .)
    PDER            reduce using rule 72 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 72 (expresion -> expresion MAYORIGUAL expresion .)
    CORDER          reduce using rule 72 (expresion -> expresion MAYORIGUAL expresion .)
    LLAVEDER        reduce using rule 72 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    PUNTO           shift and go to state 141

  ! MAS             [ reduce using rule 72 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 72 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 72 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIVISION        [ reduce using rule 72 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 72 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! PUNTO           [ reduce using rule 72 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 133 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MAYORIGUAL      [ shift and go to state 135 ]
  ! MENORIGUAL      [ shift and go to state 136 ]
  ! IGUALIGUAL      [ shift and go to state 137 ]
  ! DIFERENTE       [ shift and go to state 138 ]
  ! AND             [ shift and go to state 139 ]
  ! OR              [ shift and go to state 140 ]
  ! AS              [ shift and go to state 142 ]


state 178

    (73) expresion -> expresion MENORIGUAL expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    MAYOR           reduce using rule 73 (expresion -> expresion MENORIGUAL expresion .)
    MENOR           reduce using rule 73 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 73 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 73 (expresion -> expresion MENORIGUAL expresion .)
    IGUALIGUAL      reduce using rule 73 (expresion -> expresion MENORIGUAL expresion .)
    DIFERENTE       reduce using rule 73 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 73 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 73 (expresion -> expresion MENORIGUAL expresion .)
    AS              reduce using rule 73 (expresion -> expresion MENORIGUAL expresion .)
    LLAVEIZQ        reduce using rule 73 (expresion -> expresion MENORIGUAL expresion .)
    PTCOMA          reduce using rule 73 (expresion -> expresion MENORIGUAL expresion .)
    PDER            reduce using rule 73 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 73 (expresion -> expresion MENORIGUAL expresion .)
    CORDER          reduce using rule 73 (expresion -> expresion MENORIGUAL expresion .)
    LLAVEDER        reduce using rule 73 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    PUNTO           shift and go to state 141

  ! MAS             [ reduce using rule 73 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 73 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 73 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIVISION        [ reduce using rule 73 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 73 (expresion -> expresion MENORIGUAL expresion .) ]
  ! PUNTO           [ reduce using rule 73 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 133 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MAYORIGUAL      [ shift and go to state 135 ]
  ! MENORIGUAL      [ shift and go to state 136 ]
  ! IGUALIGUAL      [ shift and go to state 137 ]
  ! DIFERENTE       [ shift and go to state 138 ]
  ! AND             [ shift and go to state 139 ]
  ! OR              [ shift and go to state 140 ]
  ! AS              [ shift and go to state 142 ]


state 179

    (74) expresion -> expresion IGUALIGUAL expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    MAYOR           reduce using rule 74 (expresion -> expresion IGUALIGUAL expresion .)
    MENOR           reduce using rule 74 (expresion -> expresion IGUALIGUAL expresion .)
    MAYORIGUAL      reduce using rule 74 (expresion -> expresion IGUALIGUAL expresion .)
    MENORIGUAL      reduce using rule 74 (expresion -> expresion IGUALIGUAL expresion .)
    IGUALIGUAL      reduce using rule 74 (expresion -> expresion IGUALIGUAL expresion .)
    DIFERENTE       reduce using rule 74 (expresion -> expresion IGUALIGUAL expresion .)
    AND             reduce using rule 74 (expresion -> expresion IGUALIGUAL expresion .)
    OR              reduce using rule 74 (expresion -> expresion IGUALIGUAL expresion .)
    AS              reduce using rule 74 (expresion -> expresion IGUALIGUAL expresion .)
    LLAVEIZQ        reduce using rule 74 (expresion -> expresion IGUALIGUAL expresion .)
    PTCOMA          reduce using rule 74 (expresion -> expresion IGUALIGUAL expresion .)
    PDER            reduce using rule 74 (expresion -> expresion IGUALIGUAL expresion .)
    COMA            reduce using rule 74 (expresion -> expresion IGUALIGUAL expresion .)
    CORDER          reduce using rule 74 (expresion -> expresion IGUALIGUAL expresion .)
    LLAVEDER        reduce using rule 74 (expresion -> expresion IGUALIGUAL expresion .)
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    PUNTO           shift and go to state 141

  ! MAS             [ reduce using rule 74 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 74 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 74 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! DIVISION        [ reduce using rule 74 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 74 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! PUNTO           [ reduce using rule 74 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 133 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MAYORIGUAL      [ shift and go to state 135 ]
  ! MENORIGUAL      [ shift and go to state 136 ]
  ! IGUALIGUAL      [ shift and go to state 137 ]
  ! DIFERENTE       [ shift and go to state 138 ]
  ! AND             [ shift and go to state 139 ]
  ! OR              [ shift and go to state 140 ]
  ! AS              [ shift and go to state 142 ]


state 180

    (75) expresion -> expresion DIFERENTE expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    MAYOR           reduce using rule 75 (expresion -> expresion DIFERENTE expresion .)
    MENOR           reduce using rule 75 (expresion -> expresion DIFERENTE expresion .)
    MAYORIGUAL      reduce using rule 75 (expresion -> expresion DIFERENTE expresion .)
    MENORIGUAL      reduce using rule 75 (expresion -> expresion DIFERENTE expresion .)
    IGUALIGUAL      reduce using rule 75 (expresion -> expresion DIFERENTE expresion .)
    DIFERENTE       reduce using rule 75 (expresion -> expresion DIFERENTE expresion .)
    AND             reduce using rule 75 (expresion -> expresion DIFERENTE expresion .)
    OR              reduce using rule 75 (expresion -> expresion DIFERENTE expresion .)
    AS              reduce using rule 75 (expresion -> expresion DIFERENTE expresion .)
    LLAVEIZQ        reduce using rule 75 (expresion -> expresion DIFERENTE expresion .)
    PTCOMA          reduce using rule 75 (expresion -> expresion DIFERENTE expresion .)
    PDER            reduce using rule 75 (expresion -> expresion DIFERENTE expresion .)
    COMA            reduce using rule 75 (expresion -> expresion DIFERENTE expresion .)
    CORDER          reduce using rule 75 (expresion -> expresion DIFERENTE expresion .)
    LLAVEDER        reduce using rule 75 (expresion -> expresion DIFERENTE expresion .)
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    PUNTO           shift and go to state 141

  ! MAS             [ reduce using rule 75 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENOS           [ reduce using rule 75 (expresion -> expresion DIFERENTE expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 75 (expresion -> expresion DIFERENTE expresion .) ]
  ! DIVISION        [ reduce using rule 75 (expresion -> expresion DIFERENTE expresion .) ]
  ! MODULO          [ reduce using rule 75 (expresion -> expresion DIFERENTE expresion .) ]
  ! PUNTO           [ reduce using rule 75 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAYOR           [ shift and go to state 133 ]
  ! MENOR           [ shift and go to state 134 ]
  ! MAYORIGUAL      [ shift and go to state 135 ]
  ! MENORIGUAL      [ shift and go to state 136 ]
  ! IGUALIGUAL      [ shift and go to state 137 ]
  ! DIFERENTE       [ shift and go to state 138 ]
  ! AND             [ shift and go to state 139 ]
  ! OR              [ shift and go to state 140 ]
  ! AS              [ shift and go to state 142 ]


state 181

    (76) expresion -> expresion AND expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    AND             reduce using rule 76 (expresion -> expresion AND expresion .)
    OR              reduce using rule 76 (expresion -> expresion AND expresion .)
    AS              reduce using rule 76 (expresion -> expresion AND expresion .)
    LLAVEIZQ        reduce using rule 76 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 76 (expresion -> expresion AND expresion .)
    PDER            reduce using rule 76 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 76 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 76 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 76 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    PUNTO           shift and go to state 141

  ! MAS             [ reduce using rule 76 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 76 (expresion -> expresion AND expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 76 (expresion -> expresion AND expresion .) ]
  ! DIVISION        [ reduce using rule 76 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 76 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 76 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 76 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 76 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 76 (expresion -> expresion AND expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 76 (expresion -> expresion AND expresion .) ]
  ! DIFERENTE       [ reduce using rule 76 (expresion -> expresion AND expresion .) ]
  ! PUNTO           [ reduce using rule 76 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 139 ]
  ! OR              [ shift and go to state 140 ]
  ! AS              [ shift and go to state 142 ]


state 182

    (77) expresion -> expresion OR expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    OR              reduce using rule 77 (expresion -> expresion OR expresion .)
    AS              reduce using rule 77 (expresion -> expresion OR expresion .)
    LLAVEIZQ        reduce using rule 77 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 77 (expresion -> expresion OR expresion .)
    PDER            reduce using rule 77 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 77 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 77 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 77 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    PUNTO           shift and go to state 141

  ! MAS             [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! DIVISION        [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! DIFERENTE       [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! PUNTO           [ reduce using rule 77 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 140 ]
  ! AS              [ shift and go to state 142 ]


state 183

    (99) tostring -> expresion PUNTO TOSTRING . PIZQ PDER

    PIZQ            shift and go to state 216


state 184

    (100) tostring -> expresion PUNTO TOOWNED . PIZQ PDER

    PIZQ            shift and go to state 217


state 185

    (103) abs -> expresion PUNTO ABS . PIZQ PDER

    PIZQ            shift and go to state 218


state 186

    (104) sqrt -> expresion PUNTO SQRT . PIZQ PDER

    PIZQ            shift and go to state 219


state 187

    (92) len -> expresion PUNTO LEN . PIZQ PDER

    PIZQ            shift and go to state 220


state 188

    (91) clone -> expresion PUNTO CLONE . PIZQ PDER

    PIZQ            shift and go to state 221


state 189

    (101) as -> expresion AS I64 .

    MAS             reduce using rule 101 (as -> expresion AS I64 .)
    MENOS           reduce using rule 101 (as -> expresion AS I64 .)
    MULTIPLICACION  reduce using rule 101 (as -> expresion AS I64 .)
    DIVISION        reduce using rule 101 (as -> expresion AS I64 .)
    MODULO          reduce using rule 101 (as -> expresion AS I64 .)
    MAYOR           reduce using rule 101 (as -> expresion AS I64 .)
    MENOR           reduce using rule 101 (as -> expresion AS I64 .)
    MAYORIGUAL      reduce using rule 101 (as -> expresion AS I64 .)
    MENORIGUAL      reduce using rule 101 (as -> expresion AS I64 .)
    IGUALIGUAL      reduce using rule 101 (as -> expresion AS I64 .)
    DIFERENTE       reduce using rule 101 (as -> expresion AS I64 .)
    AND             reduce using rule 101 (as -> expresion AS I64 .)
    OR              reduce using rule 101 (as -> expresion AS I64 .)
    PUNTO           reduce using rule 101 (as -> expresion AS I64 .)
    AS              reduce using rule 101 (as -> expresion AS I64 .)
    LLAVEIZQ        reduce using rule 101 (as -> expresion AS I64 .)
    PTCOMA          reduce using rule 101 (as -> expresion AS I64 .)
    PDER            reduce using rule 101 (as -> expresion AS I64 .)
    COMA            reduce using rule 101 (as -> expresion AS I64 .)
    CORDER          reduce using rule 101 (as -> expresion AS I64 .)
    LLAVEDER        reduce using rule 101 (as -> expresion AS I64 .)


state 190

    (102) as -> expresion AS F64 .

    MAS             reduce using rule 102 (as -> expresion AS F64 .)
    MENOS           reduce using rule 102 (as -> expresion AS F64 .)
    MULTIPLICACION  reduce using rule 102 (as -> expresion AS F64 .)
    DIVISION        reduce using rule 102 (as -> expresion AS F64 .)
    MODULO          reduce using rule 102 (as -> expresion AS F64 .)
    MAYOR           reduce using rule 102 (as -> expresion AS F64 .)
    MENOR           reduce using rule 102 (as -> expresion AS F64 .)
    MAYORIGUAL      reduce using rule 102 (as -> expresion AS F64 .)
    MENORIGUAL      reduce using rule 102 (as -> expresion AS F64 .)
    IGUALIGUAL      reduce using rule 102 (as -> expresion AS F64 .)
    DIFERENTE       reduce using rule 102 (as -> expresion AS F64 .)
    AND             reduce using rule 102 (as -> expresion AS F64 .)
    OR              reduce using rule 102 (as -> expresion AS F64 .)
    PUNTO           reduce using rule 102 (as -> expresion AS F64 .)
    AS              reduce using rule 102 (as -> expresion AS F64 .)
    LLAVEIZQ        reduce using rule 102 (as -> expresion AS F64 .)
    PTCOMA          reduce using rule 102 (as -> expresion AS F64 .)
    PDER            reduce using rule 102 (as -> expresion AS F64 .)
    COMA            reduce using rule 102 (as -> expresion AS F64 .)
    CORDER          reduce using rule 102 (as -> expresion AS F64 .)
    LLAVEDER        reduce using rule 102 (as -> expresion AS F64 .)


state 191

    (67) expresion -> I64 DOBLEPT DOBLEPT . POW PIZQ expresion COMA expresion PDER

    POW             shift and go to state 222


state 192

    (69) expresion -> PIZQ expresion PDER .

    MAS             reduce using rule 69 (expresion -> PIZQ expresion PDER .)
    MENOS           reduce using rule 69 (expresion -> PIZQ expresion PDER .)
    MULTIPLICACION  reduce using rule 69 (expresion -> PIZQ expresion PDER .)
    DIVISION        reduce using rule 69 (expresion -> PIZQ expresion PDER .)
    MODULO          reduce using rule 69 (expresion -> PIZQ expresion PDER .)
    MAYOR           reduce using rule 69 (expresion -> PIZQ expresion PDER .)
    MENOR           reduce using rule 69 (expresion -> PIZQ expresion PDER .)
    MAYORIGUAL      reduce using rule 69 (expresion -> PIZQ expresion PDER .)
    MENORIGUAL      reduce using rule 69 (expresion -> PIZQ expresion PDER .)
    IGUALIGUAL      reduce using rule 69 (expresion -> PIZQ expresion PDER .)
    DIFERENTE       reduce using rule 69 (expresion -> PIZQ expresion PDER .)
    AND             reduce using rule 69 (expresion -> PIZQ expresion PDER .)
    OR              reduce using rule 69 (expresion -> PIZQ expresion PDER .)
    PUNTO           reduce using rule 69 (expresion -> PIZQ expresion PDER .)
    AS              reduce using rule 69 (expresion -> PIZQ expresion PDER .)
    LLAVEIZQ        reduce using rule 69 (expresion -> PIZQ expresion PDER .)
    PTCOMA          reduce using rule 69 (expresion -> PIZQ expresion PDER .)
    PDER            reduce using rule 69 (expresion -> PIZQ expresion PDER .)
    COMA            reduce using rule 69 (expresion -> PIZQ expresion PDER .)
    CORDER          reduce using rule 69 (expresion -> PIZQ expresion PDER .)
    LLAVEDER        reduce using rule 69 (expresion -> PIZQ expresion PDER .)


state 193

    (68) expresion -> F64 DOBLEPT DOBLEPT . POWF PIZQ expresion COMA expresion PDER

    POWF            shift and go to state 223


state 194

    (98) arraycontenido -> CORIZQ lista_expresiones CORDER .

    MAS             reduce using rule 98 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    MENOS           reduce using rule 98 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    MULTIPLICACION  reduce using rule 98 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    DIVISION        reduce using rule 98 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    MODULO          reduce using rule 98 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    MAYOR           reduce using rule 98 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    MENOR           reduce using rule 98 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    MAYORIGUAL      reduce using rule 98 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    MENORIGUAL      reduce using rule 98 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    IGUALIGUAL      reduce using rule 98 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    DIFERENTE       reduce using rule 98 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    AND             reduce using rule 98 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    OR              reduce using rule 98 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    PUNTO           reduce using rule 98 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    AS              reduce using rule 98 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    LLAVEIZQ        reduce using rule 98 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    PTCOMA          reduce using rule 98 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    PDER            reduce using rule 98 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    COMA            reduce using rule 98 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    CORDER          reduce using rule 98 (arraycontenido -> CORIZQ lista_expresiones CORDER .)
    LLAVEDER        reduce using rule 98 (arraycontenido -> CORIZQ lista_expresiones CORDER .)


state 195

    (93) referencia -> Y MUT ID .

    MAS             reduce using rule 93 (referencia -> Y MUT ID .)
    MENOS           reduce using rule 93 (referencia -> Y MUT ID .)
    MULTIPLICACION  reduce using rule 93 (referencia -> Y MUT ID .)
    DIVISION        reduce using rule 93 (referencia -> Y MUT ID .)
    MODULO          reduce using rule 93 (referencia -> Y MUT ID .)
    MAYOR           reduce using rule 93 (referencia -> Y MUT ID .)
    MENOR           reduce using rule 93 (referencia -> Y MUT ID .)
    MAYORIGUAL      reduce using rule 93 (referencia -> Y MUT ID .)
    MENORIGUAL      reduce using rule 93 (referencia -> Y MUT ID .)
    IGUALIGUAL      reduce using rule 93 (referencia -> Y MUT ID .)
    DIFERENTE       reduce using rule 93 (referencia -> Y MUT ID .)
    AND             reduce using rule 93 (referencia -> Y MUT ID .)
    OR              reduce using rule 93 (referencia -> Y MUT ID .)
    PUNTO           reduce using rule 93 (referencia -> Y MUT ID .)
    AS              reduce using rule 93 (referencia -> Y MUT ID .)
    LLAVEIZQ        reduce using rule 93 (referencia -> Y MUT ID .)
    PTCOMA          reduce using rule 93 (referencia -> Y MUT ID .)
    PDER            reduce using rule 93 (referencia -> Y MUT ID .)
    COMA            reduce using rule 93 (referencia -> Y MUT ID .)
    CORDER          reduce using rule 93 (referencia -> Y MUT ID .)
    LLAVEDER        reduce using rule 93 (referencia -> Y MUT ID .)


state 196

    (58) for -> FOR ID IN expresion . PUNTO PUNTO expresion bloque
    (59) for -> FOR ID IN expresion . PUNTO CHARS PIZQ PDER bloque
    (60) for -> FOR ID IN expresion . bloque
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER
    (17) bloque -> . LLAVEIZQ LLAVEDER
    (18) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    PUNTO           shift and go to state 224
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    AS              shift and go to state 142
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 225

state 197

    (46) dimensiones -> CORIZQ CORIZQ CORIZQ . tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
    (119) tipo_dato -> . I64
    (120) tipo_dato -> . F64
    (121) tipo_dato -> . BOOL
    (122) tipo_dato -> . CHAR
    (123) tipo_dato -> . str
    (124) tipo_dato -> . STRING
    (125) tipo_dato -> . USIZE
    (126) str -> . Y STR

    I64             shift and go to state 21
    F64             shift and go to state 22
    BOOL            shift and go to state 23
    CHAR            shift and go to state 24
    STRING          shift and go to state 26
    USIZE           shift and go to state 27
    Y               shift and go to state 29

    tipo_dato                      shift and go to state 226
    str                            shift and go to state 25

state 198

    (45) dimensiones -> CORIZQ CORIZQ tipo_dato . PTCOMA expresion CORDER PTCOMA expresion CORDER

    PTCOMA          shift and go to state 227


state 199

    (43) dimensiones -> CORIZQ tipo_dato CORDER .

    PDER            reduce using rule 43 (dimensiones -> CORIZQ tipo_dato CORDER .)
    COMA            reduce using rule 43 (dimensiones -> CORIZQ tipo_dato CORDER .)
    IGUAL           reduce using rule 43 (dimensiones -> CORIZQ tipo_dato CORDER .)


state 200

    (44) dimensiones -> CORIZQ tipo_dato PTCOMA . expresion CORDER
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 228
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 201

    (33) print -> PRINTLN NOT PIZQ lista_expresiones PDER .

    PTCOMA          reduce using rule 33 (print -> PRINTLN NOT PIZQ lista_expresiones PDER .)


state 202

    (37) declaracion -> LET MUT ID DOBLEPT tipo_dato . IGUAL expresion

    IGUAL           shift and go to state 229


state 203

    (41) declaracion -> LET MUT ID DOBLEPT dimensiones . IGUAL expresion

    IGUAL           shift and go to state 230


state 204

    (39) declaracion -> LET MUT ID IGUAL expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    PTCOMA          reduce using rule 39 (declaracion -> LET MUT ID IGUAL expresion .)
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 205

    (38) declaracion -> LET ID DOBLEPT tipo_dato IGUAL . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 231
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 206

    (42) declaracion -> LET ID DOBLEPT dimensiones IGUAL . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 232
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 207

    (15) lista_expresiones -> lista_expresiones COMA expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    PDER            reduce using rule 15 (lista_expresiones -> lista_expresiones COMA expresion .)
    COMA            reduce using rule 15 (lista_expresiones -> lista_expresiones COMA expresion .)
    CORDER          reduce using rule 15 (lista_expresiones -> lista_expresiones COMA expresion .)
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 208

    (105) if_e -> IF . expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> IF . expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> IF . expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> IF . expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (48) if_i -> IF . expresion bloque else
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 233
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 209

    (105) if_e -> IF expresion LLAVEIZQ expresion . LLAVEDER
    (106) if_e -> IF expresion LLAVEIZQ expresion . LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> IF expresion LLAVEIZQ expresion . LLAVEDER listaelse
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    LLAVEDER        shift and go to state 234
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 210

    (108) if_e -> IF expresion LLAVEIZQ instruccion . expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 235
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 211

    (84) expresion -> llamadaF .
    (25) instruccion -> llamadaF . PTCOMA

    LLAVEDER        reduce using rule 84 (expresion -> llamadaF .)
    MAS             reduce using rule 84 (expresion -> llamadaF .)
    MENOS           reduce using rule 84 (expresion -> llamadaF .)
    MULTIPLICACION  reduce using rule 84 (expresion -> llamadaF .)
    DIVISION        reduce using rule 84 (expresion -> llamadaF .)
    MODULO          reduce using rule 84 (expresion -> llamadaF .)
    MAYOR           reduce using rule 84 (expresion -> llamadaF .)
    MENOR           reduce using rule 84 (expresion -> llamadaF .)
    MAYORIGUAL      reduce using rule 84 (expresion -> llamadaF .)
    MENORIGUAL      reduce using rule 84 (expresion -> llamadaF .)
    IGUALIGUAL      reduce using rule 84 (expresion -> llamadaF .)
    DIFERENTE       reduce using rule 84 (expresion -> llamadaF .)
    AND             reduce using rule 84 (expresion -> llamadaF .)
    OR              reduce using rule 84 (expresion -> llamadaF .)
    PUNTO           reduce using rule 84 (expresion -> llamadaF .)
    AS              reduce using rule 84 (expresion -> llamadaF .)
    PTCOMA          shift and go to state 66


state 212

    (85) expresion -> loop .
    (27) instruccion -> loop .

  ! reduce/reduce conflict for MENOS resolved using rule 27 (instruccion -> loop .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 27 (instruccion -> loop .)
    MAS             reduce using rule 85 (expresion -> loop .)
    MULTIPLICACION  reduce using rule 85 (expresion -> loop .)
    DIVISION        reduce using rule 85 (expresion -> loop .)
    MODULO          reduce using rule 85 (expresion -> loop .)
    MAYOR           reduce using rule 85 (expresion -> loop .)
    MENOR           reduce using rule 85 (expresion -> loop .)
    MAYORIGUAL      reduce using rule 85 (expresion -> loop .)
    MENORIGUAL      reduce using rule 85 (expresion -> loop .)
    IGUALIGUAL      reduce using rule 85 (expresion -> loop .)
    DIFERENTE       reduce using rule 85 (expresion -> loop .)
    AND             reduce using rule 85 (expresion -> loop .)
    OR              reduce using rule 85 (expresion -> loop .)
    PUNTO           reduce using rule 85 (expresion -> loop .)
    AS              reduce using rule 85 (expresion -> loop .)
    MENOS           reduce using rule 27 (instruccion -> loop .)
    I64             reduce using rule 27 (instruccion -> loop .)
    F64             reduce using rule 27 (instruccion -> loop .)
    PIZQ            reduce using rule 27 (instruccion -> loop .)
    NOT             reduce using rule 27 (instruccion -> loop .)
    ENTERO          reduce using rule 27 (instruccion -> loop .)
    DECIMAL         reduce using rule 27 (instruccion -> loop .)
    ID              reduce using rule 27 (instruccion -> loop .)
    CARACTER        reduce using rule 27 (instruccion -> loop .)
    CADENA          reduce using rule 27 (instruccion -> loop .)
    TRUE            reduce using rule 27 (instruccion -> loop .)
    FALSE           reduce using rule 27 (instruccion -> loop .)
    IF              reduce using rule 27 (instruccion -> loop .)
    LOOP            reduce using rule 27 (instruccion -> loop .)
    CORIZQ          reduce using rule 27 (instruccion -> loop .)
    Y               reduce using rule 27 (instruccion -> loop .)
    LLAVEDER        reduce using rule 27 (instruccion -> loop .)
    PRINTLN         reduce using rule 27 (instruccion -> loop .)
    LET             reduce using rule 27 (instruccion -> loop .)
    RETURN          reduce using rule 27 (instruccion -> loop .)
    BREAK           reduce using rule 27 (instruccion -> loop .)
    WHILE           reduce using rule 27 (instruccion -> loop .)
    CONTINUE        reduce using rule 27 (instruccion -> loop .)
    FOR             reduce using rule 27 (instruccion -> loop .)

  ! LLAVEDER        [ reduce using rule 85 (expresion -> loop .) ]
  ! MENOS           [ reduce using rule 85 (expresion -> loop .) ]


state 213

    (114) expresion -> ID .
    (13) llamadaF -> ID . PIZQ PDER
    (14) llamadaF -> ID . PIZQ lista_expresiones PDER
    (94) accesoarray -> ID . ubicaciones
    (47) asignacion -> ID . IGUAL expresion
    (36) asignacionA -> ID . ubicaciones IGUAL expresion
    (95) ubicaciones -> . ubicaciones ubicacion
    (96) ubicaciones -> . ubicacion
    (97) ubicacion -> . CORIZQ expresion CORDER

    LLAVEDER        reduce using rule 114 (expresion -> ID .)
    MAS             reduce using rule 114 (expresion -> ID .)
    MENOS           reduce using rule 114 (expresion -> ID .)
    MULTIPLICACION  reduce using rule 114 (expresion -> ID .)
    DIVISION        reduce using rule 114 (expresion -> ID .)
    MODULO          reduce using rule 114 (expresion -> ID .)
    MAYOR           reduce using rule 114 (expresion -> ID .)
    MENOR           reduce using rule 114 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 114 (expresion -> ID .)
    MENORIGUAL      reduce using rule 114 (expresion -> ID .)
    IGUALIGUAL      reduce using rule 114 (expresion -> ID .)
    DIFERENTE       reduce using rule 114 (expresion -> ID .)
    AND             reduce using rule 114 (expresion -> ID .)
    OR              reduce using rule 114 (expresion -> ID .)
    PUNTO           reduce using rule 114 (expresion -> ID .)
    AS              reduce using rule 114 (expresion -> ID .)
    PIZQ            shift and go to state 75
    IGUAL           shift and go to state 74
    CORIZQ          shift and go to state 78

    ubicaciones                    shift and go to state 236
    ubicacion                      shift and go to state 77

state 214

    (49) else -> ELSE if_i .

    LLAVEDER        reduce using rule 49 (else -> ELSE if_i .)
    PRINTLN         reduce using rule 49 (else -> ELSE if_i .)
    LET             reduce using rule 49 (else -> ELSE if_i .)
    ID              reduce using rule 49 (else -> ELSE if_i .)
    IF              reduce using rule 49 (else -> ELSE if_i .)
    RETURN          reduce using rule 49 (else -> ELSE if_i .)
    LOOP            reduce using rule 49 (else -> ELSE if_i .)
    BREAK           reduce using rule 49 (else -> ELSE if_i .)
    WHILE           reduce using rule 49 (else -> ELSE if_i .)
    CONTINUE        reduce using rule 49 (else -> ELSE if_i .)
    FOR             reduce using rule 49 (else -> ELSE if_i .)
    MENOS           reduce using rule 49 (else -> ELSE if_i .)
    I64             reduce using rule 49 (else -> ELSE if_i .)
    F64             reduce using rule 49 (else -> ELSE if_i .)
    PIZQ            reduce using rule 49 (else -> ELSE if_i .)
    NOT             reduce using rule 49 (else -> ELSE if_i .)
    ENTERO          reduce using rule 49 (else -> ELSE if_i .)
    DECIMAL         reduce using rule 49 (else -> ELSE if_i .)
    CARACTER        reduce using rule 49 (else -> ELSE if_i .)
    CADENA          reduce using rule 49 (else -> ELSE if_i .)
    TRUE            reduce using rule 49 (else -> ELSE if_i .)
    FALSE           reduce using rule 49 (else -> ELSE if_i .)
    CORIZQ          reduce using rule 49 (else -> ELSE if_i .)
    Y               reduce using rule 49 (else -> ELSE if_i .)


state 215

    (50) else -> ELSE bloque .

    LLAVEDER        reduce using rule 50 (else -> ELSE bloque .)
    PRINTLN         reduce using rule 50 (else -> ELSE bloque .)
    LET             reduce using rule 50 (else -> ELSE bloque .)
    ID              reduce using rule 50 (else -> ELSE bloque .)
    IF              reduce using rule 50 (else -> ELSE bloque .)
    RETURN          reduce using rule 50 (else -> ELSE bloque .)
    LOOP            reduce using rule 50 (else -> ELSE bloque .)
    BREAK           reduce using rule 50 (else -> ELSE bloque .)
    WHILE           reduce using rule 50 (else -> ELSE bloque .)
    CONTINUE        reduce using rule 50 (else -> ELSE bloque .)
    FOR             reduce using rule 50 (else -> ELSE bloque .)
    MENOS           reduce using rule 50 (else -> ELSE bloque .)
    I64             reduce using rule 50 (else -> ELSE bloque .)
    F64             reduce using rule 50 (else -> ELSE bloque .)
    PIZQ            reduce using rule 50 (else -> ELSE bloque .)
    NOT             reduce using rule 50 (else -> ELSE bloque .)
    ENTERO          reduce using rule 50 (else -> ELSE bloque .)
    DECIMAL         reduce using rule 50 (else -> ELSE bloque .)
    CARACTER        reduce using rule 50 (else -> ELSE bloque .)
    CADENA          reduce using rule 50 (else -> ELSE bloque .)
    TRUE            reduce using rule 50 (else -> ELSE bloque .)
    FALSE           reduce using rule 50 (else -> ELSE bloque .)
    CORIZQ          reduce using rule 50 (else -> ELSE bloque .)
    Y               reduce using rule 50 (else -> ELSE bloque .)


state 216

    (99) tostring -> expresion PUNTO TOSTRING PIZQ . PDER

    PDER            shift and go to state 237


state 217

    (100) tostring -> expresion PUNTO TOOWNED PIZQ . PDER

    PDER            shift and go to state 238


state 218

    (103) abs -> expresion PUNTO ABS PIZQ . PDER

    PDER            shift and go to state 239


state 219

    (104) sqrt -> expresion PUNTO SQRT PIZQ . PDER

    PDER            shift and go to state 240


state 220

    (92) len -> expresion PUNTO LEN PIZQ . PDER

    PDER            shift and go to state 241


state 221

    (91) clone -> expresion PUNTO CLONE PIZQ . PDER

    PDER            shift and go to state 242


state 222

    (67) expresion -> I64 DOBLEPT DOBLEPT POW . PIZQ expresion COMA expresion PDER

    PIZQ            shift and go to state 243


state 223

    (68) expresion -> F64 DOBLEPT DOBLEPT POWF . PIZQ expresion COMA expresion PDER

    PIZQ            shift and go to state 244


state 224

    (58) for -> FOR ID IN expresion PUNTO . PUNTO expresion bloque
    (59) for -> FOR ID IN expresion PUNTO . CHARS PIZQ PDER bloque
    (99) tostring -> expresion PUNTO . TOSTRING PIZQ PDER
    (100) tostring -> expresion PUNTO . TOOWNED PIZQ PDER
    (103) abs -> expresion PUNTO . ABS PIZQ PDER
    (104) sqrt -> expresion PUNTO . SQRT PIZQ PDER
    (92) len -> expresion PUNTO . LEN PIZQ PDER
    (91) clone -> expresion PUNTO . CLONE PIZQ PDER

    PUNTO           shift and go to state 245
    CHARS           shift and go to state 246
    TOSTRING        shift and go to state 183
    TOOWNED         shift and go to state 184
    ABS             shift and go to state 185
    SQRT            shift and go to state 186
    LEN             shift and go to state 187
    CLONE           shift and go to state 188


state 225

    (60) for -> FOR ID IN expresion bloque .

    LLAVEDER        reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    PRINTLN         reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    LET             reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    ID              reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    IF              reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    RETURN          reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    LOOP            reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    BREAK           reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    WHILE           reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    CONTINUE        reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    FOR             reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    MENOS           reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    I64             reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    F64             reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    PIZQ            reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    NOT             reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    ENTERO          reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    DECIMAL         reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    CARACTER        reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    CADENA          reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    TRUE            reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    FALSE           reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    CORIZQ          reduce using rule 60 (for -> FOR ID IN expresion bloque .)
    Y               reduce using rule 60 (for -> FOR ID IN expresion bloque .)


state 226

    (46) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato . PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER

    PTCOMA          shift and go to state 247


state 227

    (45) dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA . expresion CORDER PTCOMA expresion CORDER
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 248
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 228

    (44) dimensiones -> CORIZQ tipo_dato PTCOMA expresion . CORDER
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    CORDER          shift and go to state 249
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 229

    (37) declaracion -> LET MUT ID DOBLEPT tipo_dato IGUAL . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 250
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 230

    (41) declaracion -> LET MUT ID DOBLEPT dimensiones IGUAL . expresion
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 251
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 231

    (38) declaracion -> LET ID DOBLEPT tipo_dato IGUAL expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    PTCOMA          reduce using rule 38 (declaracion -> LET ID DOBLEPT tipo_dato IGUAL expresion .)
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 232

    (42) declaracion -> LET ID DOBLEPT dimensiones IGUAL expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    PTCOMA          reduce using rule 42 (declaracion -> LET ID DOBLEPT dimensiones IGUAL expresion .)
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 233

    (105) if_e -> IF expresion . LLAVEIZQ expresion LLAVEDER
    (106) if_e -> IF expresion . LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> IF expresion . LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> IF expresion . LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (48) if_i -> IF expresion . bloque else
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER
    (17) bloque -> . LLAVEIZQ LLAVEDER
    (18) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 252
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142

    bloque                         shift and go to state 127

state 234

    (105) if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .
    (106) if_e -> IF expresion LLAVEIZQ expresion LLAVEDER . ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> IF expresion LLAVEIZQ expresion LLAVEDER . listaelse
    (109) listaelse -> . listaelse elseif
    (110) listaelse -> . elseif
    (111) elseif -> . ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER

    MAS             reduce using rule 105 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    MENOS           reduce using rule 105 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    MULTIPLICACION  reduce using rule 105 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    DIVISION        reduce using rule 105 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    MODULO          reduce using rule 105 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    MAYOR           reduce using rule 105 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    MENOR           reduce using rule 105 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    MAYORIGUAL      reduce using rule 105 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    MENORIGUAL      reduce using rule 105 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    IGUALIGUAL      reduce using rule 105 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    DIFERENTE       reduce using rule 105 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    AND             reduce using rule 105 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    OR              reduce using rule 105 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    PUNTO           reduce using rule 105 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    AS              reduce using rule 105 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 105 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    PTCOMA          reduce using rule 105 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    PDER            reduce using rule 105 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    COMA            reduce using rule 105 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    CORDER          reduce using rule 105 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    LLAVEDER        reduce using rule 105 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    ELSE            shift and go to state 253

    listaelse                      shift and go to state 254
    elseif                         shift and go to state 255

state 235

    (108) if_e -> IF expresion LLAVEIZQ instruccion expresion . LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    LLAVEDER        shift and go to state 256
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 236

    (94) accesoarray -> ID ubicaciones .
    (36) asignacionA -> ID ubicaciones . IGUAL expresion
    (95) ubicaciones -> ubicaciones . ubicacion
    (97) ubicacion -> . CORIZQ expresion CORDER

    LLAVEDER        reduce using rule 94 (accesoarray -> ID ubicaciones .)
    MAS             reduce using rule 94 (accesoarray -> ID ubicaciones .)
    MENOS           reduce using rule 94 (accesoarray -> ID ubicaciones .)
    MULTIPLICACION  reduce using rule 94 (accesoarray -> ID ubicaciones .)
    DIVISION        reduce using rule 94 (accesoarray -> ID ubicaciones .)
    MODULO          reduce using rule 94 (accesoarray -> ID ubicaciones .)
    MAYOR           reduce using rule 94 (accesoarray -> ID ubicaciones .)
    MENOR           reduce using rule 94 (accesoarray -> ID ubicaciones .)
    MAYORIGUAL      reduce using rule 94 (accesoarray -> ID ubicaciones .)
    MENORIGUAL      reduce using rule 94 (accesoarray -> ID ubicaciones .)
    IGUALIGUAL      reduce using rule 94 (accesoarray -> ID ubicaciones .)
    DIFERENTE       reduce using rule 94 (accesoarray -> ID ubicaciones .)
    AND             reduce using rule 94 (accesoarray -> ID ubicaciones .)
    OR              reduce using rule 94 (accesoarray -> ID ubicaciones .)
    PUNTO           reduce using rule 94 (accesoarray -> ID ubicaciones .)
    AS              reduce using rule 94 (accesoarray -> ID ubicaciones .)
    IGUAL           shift and go to state 123
    CORIZQ          shift and go to state 78

    ubicacion                      shift and go to state 124

state 237

    (99) tostring -> expresion PUNTO TOSTRING PIZQ PDER .

    MAS             reduce using rule 99 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MENOS           reduce using rule 99 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MULTIPLICACION  reduce using rule 99 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    DIVISION        reduce using rule 99 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MODULO          reduce using rule 99 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MAYOR           reduce using rule 99 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MENOR           reduce using rule 99 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MAYORIGUAL      reduce using rule 99 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MENORIGUAL      reduce using rule 99 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    IGUALIGUAL      reduce using rule 99 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    DIFERENTE       reduce using rule 99 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    AND             reduce using rule 99 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    OR              reduce using rule 99 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    PUNTO           reduce using rule 99 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    AS              reduce using rule 99 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    LLAVEIZQ        reduce using rule 99 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    PTCOMA          reduce using rule 99 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    PDER            reduce using rule 99 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    COMA            reduce using rule 99 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    CORDER          reduce using rule 99 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    LLAVEDER        reduce using rule 99 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)


state 238

    (100) tostring -> expresion PUNTO TOOWNED PIZQ PDER .

    MAS             reduce using rule 100 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MENOS           reduce using rule 100 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MULTIPLICACION  reduce using rule 100 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    DIVISION        reduce using rule 100 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MODULO          reduce using rule 100 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MAYOR           reduce using rule 100 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MENOR           reduce using rule 100 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MAYORIGUAL      reduce using rule 100 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MENORIGUAL      reduce using rule 100 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    IGUALIGUAL      reduce using rule 100 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    DIFERENTE       reduce using rule 100 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    AND             reduce using rule 100 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    OR              reduce using rule 100 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    PUNTO           reduce using rule 100 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    AS              reduce using rule 100 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    LLAVEIZQ        reduce using rule 100 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    PTCOMA          reduce using rule 100 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    PDER            reduce using rule 100 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    COMA            reduce using rule 100 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    CORDER          reduce using rule 100 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    LLAVEDER        reduce using rule 100 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)


state 239

    (103) abs -> expresion PUNTO ABS PIZQ PDER .

    MAS             reduce using rule 103 (abs -> expresion PUNTO ABS PIZQ PDER .)
    MENOS           reduce using rule 103 (abs -> expresion PUNTO ABS PIZQ PDER .)
    MULTIPLICACION  reduce using rule 103 (abs -> expresion PUNTO ABS PIZQ PDER .)
    DIVISION        reduce using rule 103 (abs -> expresion PUNTO ABS PIZQ PDER .)
    MODULO          reduce using rule 103 (abs -> expresion PUNTO ABS PIZQ PDER .)
    MAYOR           reduce using rule 103 (abs -> expresion PUNTO ABS PIZQ PDER .)
    MENOR           reduce using rule 103 (abs -> expresion PUNTO ABS PIZQ PDER .)
    MAYORIGUAL      reduce using rule 103 (abs -> expresion PUNTO ABS PIZQ PDER .)
    MENORIGUAL      reduce using rule 103 (abs -> expresion PUNTO ABS PIZQ PDER .)
    IGUALIGUAL      reduce using rule 103 (abs -> expresion PUNTO ABS PIZQ PDER .)
    DIFERENTE       reduce using rule 103 (abs -> expresion PUNTO ABS PIZQ PDER .)
    AND             reduce using rule 103 (abs -> expresion PUNTO ABS PIZQ PDER .)
    OR              reduce using rule 103 (abs -> expresion PUNTO ABS PIZQ PDER .)
    PUNTO           reduce using rule 103 (abs -> expresion PUNTO ABS PIZQ PDER .)
    AS              reduce using rule 103 (abs -> expresion PUNTO ABS PIZQ PDER .)
    LLAVEIZQ        reduce using rule 103 (abs -> expresion PUNTO ABS PIZQ PDER .)
    PTCOMA          reduce using rule 103 (abs -> expresion PUNTO ABS PIZQ PDER .)
    PDER            reduce using rule 103 (abs -> expresion PUNTO ABS PIZQ PDER .)
    COMA            reduce using rule 103 (abs -> expresion PUNTO ABS PIZQ PDER .)
    CORDER          reduce using rule 103 (abs -> expresion PUNTO ABS PIZQ PDER .)
    LLAVEDER        reduce using rule 103 (abs -> expresion PUNTO ABS PIZQ PDER .)


state 240

    (104) sqrt -> expresion PUNTO SQRT PIZQ PDER .

    MAS             reduce using rule 104 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    MENOS           reduce using rule 104 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    MULTIPLICACION  reduce using rule 104 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    DIVISION        reduce using rule 104 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    MODULO          reduce using rule 104 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    MAYOR           reduce using rule 104 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    MENOR           reduce using rule 104 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    MAYORIGUAL      reduce using rule 104 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    MENORIGUAL      reduce using rule 104 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    IGUALIGUAL      reduce using rule 104 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    DIFERENTE       reduce using rule 104 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    AND             reduce using rule 104 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    OR              reduce using rule 104 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    PUNTO           reduce using rule 104 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    AS              reduce using rule 104 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    LLAVEIZQ        reduce using rule 104 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    PTCOMA          reduce using rule 104 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    PDER            reduce using rule 104 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    COMA            reduce using rule 104 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    CORDER          reduce using rule 104 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)
    LLAVEDER        reduce using rule 104 (sqrt -> expresion PUNTO SQRT PIZQ PDER .)


state 241

    (92) len -> expresion PUNTO LEN PIZQ PDER .

    MAS             reduce using rule 92 (len -> expresion PUNTO LEN PIZQ PDER .)
    MENOS           reduce using rule 92 (len -> expresion PUNTO LEN PIZQ PDER .)
    MULTIPLICACION  reduce using rule 92 (len -> expresion PUNTO LEN PIZQ PDER .)
    DIVISION        reduce using rule 92 (len -> expresion PUNTO LEN PIZQ PDER .)
    MODULO          reduce using rule 92 (len -> expresion PUNTO LEN PIZQ PDER .)
    MAYOR           reduce using rule 92 (len -> expresion PUNTO LEN PIZQ PDER .)
    MENOR           reduce using rule 92 (len -> expresion PUNTO LEN PIZQ PDER .)
    MAYORIGUAL      reduce using rule 92 (len -> expresion PUNTO LEN PIZQ PDER .)
    MENORIGUAL      reduce using rule 92 (len -> expresion PUNTO LEN PIZQ PDER .)
    IGUALIGUAL      reduce using rule 92 (len -> expresion PUNTO LEN PIZQ PDER .)
    DIFERENTE       reduce using rule 92 (len -> expresion PUNTO LEN PIZQ PDER .)
    AND             reduce using rule 92 (len -> expresion PUNTO LEN PIZQ PDER .)
    OR              reduce using rule 92 (len -> expresion PUNTO LEN PIZQ PDER .)
    PUNTO           reduce using rule 92 (len -> expresion PUNTO LEN PIZQ PDER .)
    AS              reduce using rule 92 (len -> expresion PUNTO LEN PIZQ PDER .)
    LLAVEIZQ        reduce using rule 92 (len -> expresion PUNTO LEN PIZQ PDER .)
    PTCOMA          reduce using rule 92 (len -> expresion PUNTO LEN PIZQ PDER .)
    PDER            reduce using rule 92 (len -> expresion PUNTO LEN PIZQ PDER .)
    COMA            reduce using rule 92 (len -> expresion PUNTO LEN PIZQ PDER .)
    CORDER          reduce using rule 92 (len -> expresion PUNTO LEN PIZQ PDER .)
    LLAVEDER        reduce using rule 92 (len -> expresion PUNTO LEN PIZQ PDER .)


state 242

    (91) clone -> expresion PUNTO CLONE PIZQ PDER .

    MAS             reduce using rule 91 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    MENOS           reduce using rule 91 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    MULTIPLICACION  reduce using rule 91 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    DIVISION        reduce using rule 91 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    MODULO          reduce using rule 91 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    MAYOR           reduce using rule 91 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    MENOR           reduce using rule 91 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    MAYORIGUAL      reduce using rule 91 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    MENORIGUAL      reduce using rule 91 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    IGUALIGUAL      reduce using rule 91 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    DIFERENTE       reduce using rule 91 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    AND             reduce using rule 91 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    OR              reduce using rule 91 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    PUNTO           reduce using rule 91 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    AS              reduce using rule 91 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    LLAVEIZQ        reduce using rule 91 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    PTCOMA          reduce using rule 91 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    PDER            reduce using rule 91 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    COMA            reduce using rule 91 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    CORDER          reduce using rule 91 (clone -> expresion PUNTO CLONE PIZQ PDER .)
    LLAVEDER        reduce using rule 91 (clone -> expresion PUNTO CLONE PIZQ PDER .)


state 243

    (67) expresion -> I64 DOBLEPT DOBLEPT POW PIZQ . expresion COMA expresion PDER
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 257
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 244

    (68) expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ . expresion COMA expresion PDER
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 258
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 245

    (58) for -> FOR ID IN expresion PUNTO PUNTO . expresion bloque
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 259
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 246

    (59) for -> FOR ID IN expresion PUNTO CHARS . PIZQ PDER bloque

    PIZQ            shift and go to state 260


state 247

    (46) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA . expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 261
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 248

    (45) dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion . CORDER PTCOMA expresion CORDER
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    CORDER          shift and go to state 262
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 249

    (44) dimensiones -> CORIZQ tipo_dato PTCOMA expresion CORDER .

    PDER            reduce using rule 44 (dimensiones -> CORIZQ tipo_dato PTCOMA expresion CORDER .)
    COMA            reduce using rule 44 (dimensiones -> CORIZQ tipo_dato PTCOMA expresion CORDER .)
    IGUAL           reduce using rule 44 (dimensiones -> CORIZQ tipo_dato PTCOMA expresion CORDER .)


state 250

    (37) declaracion -> LET MUT ID DOBLEPT tipo_dato IGUAL expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    PTCOMA          reduce using rule 37 (declaracion -> LET MUT ID DOBLEPT tipo_dato IGUAL expresion .)
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 251

    (41) declaracion -> LET MUT ID DOBLEPT dimensiones IGUAL expresion .
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    PTCOMA          reduce using rule 41 (declaracion -> LET MUT ID DOBLEPT dimensiones IGUAL expresion .)
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 252

    (105) if_e -> IF expresion LLAVEIZQ . expresion LLAVEDER
    (106) if_e -> IF expresion LLAVEIZQ . expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> IF expresion LLAVEIZQ . expresion LLAVEDER listaelse
    (108) if_e -> IF expresion LLAVEIZQ . instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (17) bloque -> LLAVEIZQ . LLAVEDER
    (18) bloque -> LLAVEIZQ . instrucciones LLAVEDER
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (21) instruccion -> . print PTCOMA
    (22) instruccion -> . declaracion PTCOMA
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . if_i
    (25) instruccion -> . llamadaF PTCOMA
    (26) instruccion -> . return PTCOMA
    (27) instruccion -> . loop
    (28) instruccion -> . break PTCOMA
    (29) instruccion -> . while
    (30) instruccion -> . continue PTCOMA
    (31) instruccion -> . for
    (32) instruccion -> . asignacionA PTCOMA
    (19) instrucciones -> . instrucciones instruccion
    (20) instrucciones -> . instruccion
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER
    (33) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (37) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (38) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (39) declaracion -> . LET MUT ID IGUAL expresion
    (40) declaracion -> . LET ID IGUAL expresion
    (41) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (42) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (47) asignacion -> . ID IGUAL expresion
    (48) if_i -> . IF expresion bloque else
    (34) return -> . RETURN
    (35) return -> . RETURN expresion
    (54) break -> . BREAK
    (55) break -> . BREAK expresion
    (56) while -> . WHILE expresion bloque
    (57) continue -> . CONTINUE
    (58) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (59) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (60) for -> . FOR ID IN expresion bloque
    (36) asignacionA -> . ID ubicaciones IGUAL expresion

    LLAVEDER        shift and go to state 30
    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 213
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 208
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106
    PRINTLN         shift and go to state 45
    LET             shift and go to state 46
    RETURN          shift and go to state 49
    BREAK           shift and go to state 51
    WHILE           shift and go to state 52
    CONTINUE        shift and go to state 53
    FOR             shift and go to state 54

    expresion                      shift and go to state 209
    instruccion                    shift and go to state 263
    instrucciones                  shift and go to state 31
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 211
    loop                           shift and go to state 212
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    return                         shift and go to state 38
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    asignacionA                    shift and go to state 44

state 253

    (106) if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE . LLAVEIZQ expresion LLAVEDER
    (111) elseif -> ELSE . IF expresion LLAVEIZQ instruccion expresion LLAVEDER

    LLAVEIZQ        shift and go to state 265
    IF              shift and go to state 264


state 254

    (107) if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .
    (109) listaelse -> listaelse . elseif
    (111) elseif -> . ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER

    MAS             reduce using rule 107 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    MENOS           reduce using rule 107 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    MULTIPLICACION  reduce using rule 107 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    DIVISION        reduce using rule 107 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    MODULO          reduce using rule 107 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    MAYOR           reduce using rule 107 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    MENOR           reduce using rule 107 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    MAYORIGUAL      reduce using rule 107 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    MENORIGUAL      reduce using rule 107 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    IGUALIGUAL      reduce using rule 107 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    DIFERENTE       reduce using rule 107 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    AND             reduce using rule 107 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    OR              reduce using rule 107 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    PUNTO           reduce using rule 107 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    AS              reduce using rule 107 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    LLAVEIZQ        reduce using rule 107 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    PTCOMA          reduce using rule 107 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    PDER            reduce using rule 107 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    COMA            reduce using rule 107 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    CORDER          reduce using rule 107 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    LLAVEDER        reduce using rule 107 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    ELSE            shift and go to state 267

    elseif                         shift and go to state 266

state 255

    (110) listaelse -> elseif .

    ELSE            reduce using rule 110 (listaelse -> elseif .)
    MAS             reduce using rule 110 (listaelse -> elseif .)
    MENOS           reduce using rule 110 (listaelse -> elseif .)
    MULTIPLICACION  reduce using rule 110 (listaelse -> elseif .)
    DIVISION        reduce using rule 110 (listaelse -> elseif .)
    MODULO          reduce using rule 110 (listaelse -> elseif .)
    MAYOR           reduce using rule 110 (listaelse -> elseif .)
    MENOR           reduce using rule 110 (listaelse -> elseif .)
    MAYORIGUAL      reduce using rule 110 (listaelse -> elseif .)
    MENORIGUAL      reduce using rule 110 (listaelse -> elseif .)
    IGUALIGUAL      reduce using rule 110 (listaelse -> elseif .)
    DIFERENTE       reduce using rule 110 (listaelse -> elseif .)
    AND             reduce using rule 110 (listaelse -> elseif .)
    OR              reduce using rule 110 (listaelse -> elseif .)
    PUNTO           reduce using rule 110 (listaelse -> elseif .)
    AS              reduce using rule 110 (listaelse -> elseif .)
    LLAVEIZQ        reduce using rule 110 (listaelse -> elseif .)
    PTCOMA          reduce using rule 110 (listaelse -> elseif .)
    PDER            reduce using rule 110 (listaelse -> elseif .)
    COMA            reduce using rule 110 (listaelse -> elseif .)
    CORDER          reduce using rule 110 (listaelse -> elseif .)
    LLAVEDER        reduce using rule 110 (listaelse -> elseif .)


state 256

    (108) if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER . listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (109) listaelse -> . listaelse elseif
    (110) listaelse -> . elseif
    (111) elseif -> . ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER

    ELSE            shift and go to state 267

    listaelse                      shift and go to state 268
    elseif                         shift and go to state 255

state 257

    (67) expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion . COMA expresion PDER
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    COMA            shift and go to state 269
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 258

    (68) expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion . COMA expresion PDER
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    COMA            shift and go to state 270
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 259

    (58) for -> FOR ID IN expresion PUNTO PUNTO expresion . bloque
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER
    (17) bloque -> . LLAVEIZQ LLAVEDER
    (18) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 271

state 260

    (59) for -> FOR ID IN expresion PUNTO CHARS PIZQ . PDER bloque

    PDER            shift and go to state 272


state 261

    (46) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion . CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    CORDER          shift and go to state 273
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 262

    (45) dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER . PTCOMA expresion CORDER

    PTCOMA          shift and go to state 274


state 263

    (108) if_e -> IF expresion LLAVEIZQ instruccion . expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (20) instrucciones -> instruccion .
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
    LLAVEDER        reduce using rule 20 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 20 (instrucciones -> instruccion .)
    LET             reduce using rule 20 (instrucciones -> instruccion .)
    RETURN          reduce using rule 20 (instrucciones -> instruccion .)
    BREAK           reduce using rule 20 (instrucciones -> instruccion .)
    WHILE           reduce using rule 20 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 20 (instrucciones -> instruccion .)
    FOR             reduce using rule 20 (instrucciones -> instruccion .)
    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

  ! ID              [ reduce using rule 20 (instrucciones -> instruccion .) ]
  ! IF              [ reduce using rule 20 (instrucciones -> instruccion .) ]
  ! LOOP            [ reduce using rule 20 (instrucciones -> instruccion .) ]

    expresion                      shift and go to state 235
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 264

    (111) elseif -> ELSE IF . expresion LLAVEIZQ instruccion expresion LLAVEDER
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 275
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 265

    (106) if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ . expresion LLAVEDER
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 276
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 266

    (109) listaelse -> listaelse elseif .

    ELSE            reduce using rule 109 (listaelse -> listaelse elseif .)
    MAS             reduce using rule 109 (listaelse -> listaelse elseif .)
    MENOS           reduce using rule 109 (listaelse -> listaelse elseif .)
    MULTIPLICACION  reduce using rule 109 (listaelse -> listaelse elseif .)
    DIVISION        reduce using rule 109 (listaelse -> listaelse elseif .)
    MODULO          reduce using rule 109 (listaelse -> listaelse elseif .)
    MAYOR           reduce using rule 109 (listaelse -> listaelse elseif .)
    MENOR           reduce using rule 109 (listaelse -> listaelse elseif .)
    MAYORIGUAL      reduce using rule 109 (listaelse -> listaelse elseif .)
    MENORIGUAL      reduce using rule 109 (listaelse -> listaelse elseif .)
    IGUALIGUAL      reduce using rule 109 (listaelse -> listaelse elseif .)
    DIFERENTE       reduce using rule 109 (listaelse -> listaelse elseif .)
    AND             reduce using rule 109 (listaelse -> listaelse elseif .)
    OR              reduce using rule 109 (listaelse -> listaelse elseif .)
    PUNTO           reduce using rule 109 (listaelse -> listaelse elseif .)
    AS              reduce using rule 109 (listaelse -> listaelse elseif .)
    LLAVEIZQ        reduce using rule 109 (listaelse -> listaelse elseif .)
    PTCOMA          reduce using rule 109 (listaelse -> listaelse elseif .)
    PDER            reduce using rule 109 (listaelse -> listaelse elseif .)
    COMA            reduce using rule 109 (listaelse -> listaelse elseif .)
    CORDER          reduce using rule 109 (listaelse -> listaelse elseif .)
    LLAVEDER        reduce using rule 109 (listaelse -> listaelse elseif .)


state 267

    (111) elseif -> ELSE . IF expresion LLAVEIZQ instruccion expresion LLAVEDER

    IF              shift and go to state 264


state 268

    (108) if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse . ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (109) listaelse -> listaelse . elseif
    (111) elseif -> . ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER

    ELSE            shift and go to state 277

    elseif                         shift and go to state 266

state 269

    (67) expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA . expresion PDER
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 278
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 270

    (68) expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA . expresion PDER
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 279
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 271

    (58) for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .

    LLAVEDER        reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    PRINTLN         reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    LET             reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    ID              reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    IF              reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    RETURN          reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    LOOP            reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    BREAK           reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    WHILE           reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    CONTINUE        reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    FOR             reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    MENOS           reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    I64             reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    F64             reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    PIZQ            reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    NOT             reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    ENTERO          reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    DECIMAL         reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    CARACTER        reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    CADENA          reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    TRUE            reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    FALSE           reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    CORIZQ          reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    Y               reduce using rule 58 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)


state 272

    (59) for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER . bloque
    (17) bloque -> . LLAVEIZQ LLAVEDER
    (18) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 280

state 273

    (46) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER . PTCOMA expresion CORDER PTCOMA expresion CORDER

    PTCOMA          shift and go to state 281


state 274

    (45) dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA . expresion CORDER
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 282
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 275

    (111) elseif -> ELSE IF expresion . LLAVEIZQ instruccion expresion LLAVEDER
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    LLAVEIZQ        shift and go to state 283
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 276

    (106) if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion . LLAVEDER
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    LLAVEDER        shift and go to state 284
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 277

    (108) if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE . LLAVEIZQ instruccion expresion LLAVEDER
    (111) elseif -> ELSE . IF expresion LLAVEIZQ instruccion expresion LLAVEDER

    LLAVEIZQ        shift and go to state 285
    IF              shift and go to state 264


state 278

    (67) expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion . PDER
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    PDER            shift and go to state 286
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 279

    (68) expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion . PDER
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    PDER            shift and go to state 287
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 280

    (59) for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .

    LLAVEDER        reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    PRINTLN         reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    LET             reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    ID              reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    IF              reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    RETURN          reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    LOOP            reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    BREAK           reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    WHILE           reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    CONTINUE        reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    FOR             reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    MENOS           reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    I64             reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    F64             reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    PIZQ            reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    NOT             reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    ENTERO          reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    DECIMAL         reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    CARACTER        reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    CADENA          reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    TRUE            reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    FALSE           reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    CORIZQ          reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    Y               reduce using rule 59 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)


state 281

    (46) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA . expresion CORDER PTCOMA expresion CORDER
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 288
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 282

    (45) dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion . CORDER
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    CORDER          shift and go to state 289
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 283

    (111) elseif -> ELSE IF expresion LLAVEIZQ . instruccion expresion LLAVEDER
    (21) instruccion -> . print PTCOMA
    (22) instruccion -> . declaracion PTCOMA
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . if_i
    (25) instruccion -> . llamadaF PTCOMA
    (26) instruccion -> . return PTCOMA
    (27) instruccion -> . loop
    (28) instruccion -> . break PTCOMA
    (29) instruccion -> . while
    (30) instruccion -> . continue PTCOMA
    (31) instruccion -> . for
    (32) instruccion -> . asignacionA PTCOMA
    (33) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (37) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (38) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (39) declaracion -> . LET MUT ID IGUAL expresion
    (40) declaracion -> . LET ID IGUAL expresion
    (41) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (42) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (47) asignacion -> . ID IGUAL expresion
    (48) if_i -> . IF expresion bloque else
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (34) return -> . RETURN
    (35) return -> . RETURN expresion
    (53) loop -> . LOOP bloque
    (54) break -> . BREAK
    (55) break -> . BREAK expresion
    (56) while -> . WHILE expresion bloque
    (57) continue -> . CONTINUE
    (58) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (59) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (60) for -> . FOR ID IN expresion bloque
    (36) asignacionA -> . ID ubicaciones IGUAL expresion

    PRINTLN         shift and go to state 45
    LET             shift and go to state 46
    ID              shift and go to state 47
    IF              shift and go to state 48
    RETURN          shift and go to state 49
    LOOP            shift and go to state 50
    BREAK           shift and go to state 51
    WHILE           shift and go to state 52
    CONTINUE        shift and go to state 53
    FOR             shift and go to state 54

    instruccion                    shift and go to state 290
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    llamadaF                       shift and go to state 37
    return                         shift and go to state 38
    loop                           shift and go to state 39
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    asignacionA                    shift and go to state 44

state 284

    (106) if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .

    MAS             reduce using rule 106 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    MENOS           reduce using rule 106 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    MULTIPLICACION  reduce using rule 106 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    DIVISION        reduce using rule 106 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    MODULO          reduce using rule 106 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    MAYOR           reduce using rule 106 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    MENOR           reduce using rule 106 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    MAYORIGUAL      reduce using rule 106 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    MENORIGUAL      reduce using rule 106 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    IGUALIGUAL      reduce using rule 106 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    DIFERENTE       reduce using rule 106 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    AND             reduce using rule 106 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    OR              reduce using rule 106 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    PUNTO           reduce using rule 106 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    AS              reduce using rule 106 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 106 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    PTCOMA          reduce using rule 106 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    PDER            reduce using rule 106 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    COMA            reduce using rule 106 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    CORDER          reduce using rule 106 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    LLAVEDER        reduce using rule 106 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)


state 285

    (108) if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ . instruccion expresion LLAVEDER
    (21) instruccion -> . print PTCOMA
    (22) instruccion -> . declaracion PTCOMA
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . if_i
    (25) instruccion -> . llamadaF PTCOMA
    (26) instruccion -> . return PTCOMA
    (27) instruccion -> . loop
    (28) instruccion -> . break PTCOMA
    (29) instruccion -> . while
    (30) instruccion -> . continue PTCOMA
    (31) instruccion -> . for
    (32) instruccion -> . asignacionA PTCOMA
    (33) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (37) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (38) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (39) declaracion -> . LET MUT ID IGUAL expresion
    (40) declaracion -> . LET ID IGUAL expresion
    (41) declaracion -> . LET MUT ID DOBLEPT dimensiones IGUAL expresion
    (42) declaracion -> . LET ID DOBLEPT dimensiones IGUAL expresion
    (47) asignacion -> . ID IGUAL expresion
    (48) if_i -> . IF expresion bloque else
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (34) return -> . RETURN
    (35) return -> . RETURN expresion
    (53) loop -> . LOOP bloque
    (54) break -> . BREAK
    (55) break -> . BREAK expresion
    (56) while -> . WHILE expresion bloque
    (57) continue -> . CONTINUE
    (58) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (59) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
    (60) for -> . FOR ID IN expresion bloque
    (36) asignacionA -> . ID ubicaciones IGUAL expresion

    PRINTLN         shift and go to state 45
    LET             shift and go to state 46
    ID              shift and go to state 47
    IF              shift and go to state 48
    RETURN          shift and go to state 49
    LOOP            shift and go to state 50
    BREAK           shift and go to state 51
    WHILE           shift and go to state 52
    CONTINUE        shift and go to state 53
    FOR             shift and go to state 54

    instruccion                    shift and go to state 291
    print                          shift and go to state 33
    declaracion                    shift and go to state 34
    asignacion                     shift and go to state 35
    if_i                           shift and go to state 36
    llamadaF                       shift and go to state 37
    return                         shift and go to state 38
    loop                           shift and go to state 39
    break                          shift and go to state 40
    while                          shift and go to state 41
    continue                       shift and go to state 42
    for                            shift and go to state 43
    asignacionA                    shift and go to state 44

state 286

    (67) expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .

    MAS             reduce using rule 67 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MENOS           reduce using rule 67 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MULTIPLICACION  reduce using rule 67 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    DIVISION        reduce using rule 67 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MODULO          reduce using rule 67 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MAYOR           reduce using rule 67 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MENOR           reduce using rule 67 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MAYORIGUAL      reduce using rule 67 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MENORIGUAL      reduce using rule 67 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    IGUALIGUAL      reduce using rule 67 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    DIFERENTE       reduce using rule 67 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    AND             reduce using rule 67 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    OR              reduce using rule 67 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    PUNTO           reduce using rule 67 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    AS              reduce using rule 67 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    LLAVEIZQ        reduce using rule 67 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    PTCOMA          reduce using rule 67 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    PDER            reduce using rule 67 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    COMA            reduce using rule 67 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    CORDER          reduce using rule 67 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    LLAVEDER        reduce using rule 67 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)


state 287

    (68) expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .

    MAS             reduce using rule 68 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MENOS           reduce using rule 68 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MULTIPLICACION  reduce using rule 68 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    DIVISION        reduce using rule 68 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MODULO          reduce using rule 68 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MAYOR           reduce using rule 68 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MENOR           reduce using rule 68 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MAYORIGUAL      reduce using rule 68 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MENORIGUAL      reduce using rule 68 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    IGUALIGUAL      reduce using rule 68 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    DIFERENTE       reduce using rule 68 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    AND             reduce using rule 68 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    OR              reduce using rule 68 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    PUNTO           reduce using rule 68 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    AS              reduce using rule 68 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    LLAVEIZQ        reduce using rule 68 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    PTCOMA          reduce using rule 68 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    PDER            reduce using rule 68 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    COMA            reduce using rule 68 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    CORDER          reduce using rule 68 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    LLAVEDER        reduce using rule 68 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)


state 288

    (46) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion . CORDER PTCOMA expresion CORDER
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    CORDER          shift and go to state 292
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 289

    (45) dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER .

    PDER            reduce using rule 45 (dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER .)
    COMA            reduce using rule 45 (dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER .)
    IGUAL           reduce using rule 45 (dimensiones -> CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER .)


state 290

    (111) elseif -> ELSE IF expresion LLAVEIZQ instruccion . expresion LLAVEDER
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 293
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 291

    (108) if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion . expresion LLAVEDER
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 294
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 292

    (46) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER . PTCOMA expresion CORDER

    PTCOMA          shift and go to state 295


state 293

    (111) elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion . LLAVEDER
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    LLAVEDER        shift and go to state 296
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 294

    (108) if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion . LLAVEDER
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    LLAVEDER        shift and go to state 297
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 295

    (46) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA . expresion CORDER
    (61) expresion -> . MENOS expresion
    (62) expresion -> . expresion MAS expresion
    (63) expresion -> . expresion MENOS expresion
    (64) expresion -> . expresion MULTIPLICACION expresion
    (65) expresion -> . expresion DIVISION expresion
    (66) expresion -> . expresion MODULO expresion
    (67) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (68) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (69) expresion -> . PIZQ expresion PDER
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALIGUAL expresion
    (75) expresion -> . expresion DIFERENTE expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . tostring
    (80) expresion -> . as
    (81) expresion -> . abs
    (82) expresion -> . sqrt
    (83) expresion -> . if_e
    (84) expresion -> . llamadaF
    (85) expresion -> . loop
    (86) expresion -> . arraycontenido
    (87) expresion -> . accesoarray
    (88) expresion -> . referencia
    (89) expresion -> . len
    (90) expresion -> . clone
    (112) expresion -> . ENTERO
    (113) expresion -> . DECIMAL
    (114) expresion -> . ID
    (115) expresion -> . CARACTER
    (116) expresion -> . CADENA
    (117) expresion -> . TRUE
    (118) expresion -> . FALSE
    (99) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (100) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (101) as -> . expresion AS I64
    (102) as -> . expresion AS F64
    (103) abs -> . expresion PUNTO ABS PIZQ PDER
    (104) sqrt -> . expresion PUNTO SQRT PIZQ PDER
    (105) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (106) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (107) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (108) if_e -> . IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER
    (13) llamadaF -> . ID PIZQ PDER
    (14) llamadaF -> . ID PIZQ lista_expresiones PDER
    (53) loop -> . LOOP bloque
    (98) arraycontenido -> . CORIZQ lista_expresiones CORDER
    (94) accesoarray -> . ID ubicaciones
    (93) referencia -> . Y MUT ID
    (92) len -> . expresion PUNTO LEN PIZQ PDER
    (91) clone -> . expresion PUNTO CLONE PIZQ PDER

    MENOS           shift and go to state 81
    I64             shift and go to state 82
    F64             shift and go to state 84
    PIZQ            shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 98
    DECIMAL         shift and go to state 99
    ID              shift and go to state 100
    CARACTER        shift and go to state 101
    CADENA          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    IF              shift and go to state 79
    LOOP            shift and go to state 50
    CORIZQ          shift and go to state 105
    Y               shift and go to state 106

    expresion                      shift and go to state 298
    tostring                       shift and go to state 86
    as                             shift and go to state 87
    abs                            shift and go to state 88
    sqrt                           shift and go to state 89
    if_e                           shift and go to state 90
    llamadaF                       shift and go to state 91
    loop                           shift and go to state 92
    arraycontenido                 shift and go to state 93
    accesoarray                    shift and go to state 94
    referencia                     shift and go to state 95
    len                            shift and go to state 96
    clone                          shift and go to state 97

state 296

    (111) elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .

    ELSE            reduce using rule 111 (elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .)
    MAS             reduce using rule 111 (elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .)
    MENOS           reduce using rule 111 (elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .)
    MULTIPLICACION  reduce using rule 111 (elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .)
    DIVISION        reduce using rule 111 (elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .)
    MODULO          reduce using rule 111 (elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .)
    MAYOR           reduce using rule 111 (elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .)
    MENOR           reduce using rule 111 (elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .)
    MAYORIGUAL      reduce using rule 111 (elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .)
    MENORIGUAL      reduce using rule 111 (elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .)
    IGUALIGUAL      reduce using rule 111 (elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .)
    DIFERENTE       reduce using rule 111 (elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .)
    AND             reduce using rule 111 (elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .)
    OR              reduce using rule 111 (elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .)
    PUNTO           reduce using rule 111 (elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .)
    AS              reduce using rule 111 (elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 111 (elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .)
    PTCOMA          reduce using rule 111 (elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .)
    PDER            reduce using rule 111 (elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .)
    COMA            reduce using rule 111 (elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .)
    CORDER          reduce using rule 111 (elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .)
    LLAVEDER        reduce using rule 111 (elseif -> ELSE IF expresion LLAVEIZQ instruccion expresion LLAVEDER .)


state 297

    (108) if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER .

    MAS             reduce using rule 108 (if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER .)
    MENOS           reduce using rule 108 (if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER .)
    MULTIPLICACION  reduce using rule 108 (if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER .)
    DIVISION        reduce using rule 108 (if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER .)
    MODULO          reduce using rule 108 (if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER .)
    MAYOR           reduce using rule 108 (if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER .)
    MENOR           reduce using rule 108 (if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER .)
    MAYORIGUAL      reduce using rule 108 (if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER .)
    MENORIGUAL      reduce using rule 108 (if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER .)
    IGUALIGUAL      reduce using rule 108 (if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER .)
    DIFERENTE       reduce using rule 108 (if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER .)
    AND             reduce using rule 108 (if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER .)
    OR              reduce using rule 108 (if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER .)
    PUNTO           reduce using rule 108 (if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER .)
    AS              reduce using rule 108 (if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 108 (if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER .)
    PTCOMA          reduce using rule 108 (if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER .)
    PDER            reduce using rule 108 (if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER .)
    COMA            reduce using rule 108 (if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER .)
    CORDER          reduce using rule 108 (if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER .)
    LLAVEDER        reduce using rule 108 (if_e -> IF expresion LLAVEIZQ instruccion expresion LLAVEDER listaelse ELSE LLAVEIZQ instruccion expresion LLAVEDER .)


state 298

    (46) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion . CORDER
    (62) expresion -> expresion . MAS expresion
    (63) expresion -> expresion . MENOS expresion
    (64) expresion -> expresion . MULTIPLICACION expresion
    (65) expresion -> expresion . DIVISION expresion
    (66) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALIGUAL expresion
    (75) expresion -> expresion . DIFERENTE expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (99) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (100) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (101) as -> expresion . AS I64
    (102) as -> expresion . AS F64
    (103) abs -> expresion . PUNTO ABS PIZQ PDER
    (104) sqrt -> expresion . PUNTO SQRT PIZQ PDER
    (92) len -> expresion . PUNTO LEN PIZQ PDER
    (91) clone -> expresion . PUNTO CLONE PIZQ PDER

    CORDER          shift and go to state 299
    MAS             shift and go to state 128
    MENOS           shift and go to state 129
    MULTIPLICACION  shift and go to state 130
    DIVISION        shift and go to state 131
    MODULO          shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    DIFERENTE       shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    PUNTO           shift and go to state 141
    AS              shift and go to state 142


state 299

    (46) dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER .

    PDER            reduce using rule 46 (dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER .)
    COMA            reduce using rule 46 (dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER .)
    IGUAL           reduce using rule 46 (dimensiones -> CORIZQ CORIZQ CORIZQ tipo_dato PTCOMA expresion CORDER PTCOMA expresion CORDER PTCOMA expresion CORDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 263 resolved as shift
WARNING: shift/reduce conflict for IF in state 263 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 263 resolved as shift
WARNING: reduce/reduce conflict in state 212 resolved using rule (instruccion -> loop)
WARNING: rejected rule (expresion -> loop) in state 212
