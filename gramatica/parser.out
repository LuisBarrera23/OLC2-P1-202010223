Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CORDER
    CORIZQ

Grammar

Rule 0     S' -> init
Rule 1     init -> funciones_structs
Rule 2     funciones_structs -> funciones_structs funcion_struct
Rule 3     funciones_structs -> funcion_struct
Rule 4     funcion_struct -> funcion
Rule 5     funcion -> FN ID PIZQ PDER bloque
Rule 6     funcion -> FN ID PIZQ PDER FLECHA tipo_dato bloque
Rule 7     funcion -> FN ID PIZQ parametros PDER bloque
Rule 8     funcion -> FN ID PIZQ parametros PDER FLECHA tipo_dato bloque
Rule 9     parametros -> parametros COMA parametro
Rule 10    parametros -> parametro
Rule 11    parametro -> ID DOBLEPT tipo_dato
Rule 12    llamadaF -> ID PIZQ PDER
Rule 13    llamadaF -> ID PIZQ lista_expresiones PDER
Rule 14    lista_expresiones -> lista_expresiones COMA expresion
Rule 15    lista_expresiones -> expresion
Rule 16    bloque -> LLAVEIZQ LLAVEDER
Rule 17    bloque -> LLAVEIZQ instrucciones LLAVEDER
Rule 18    instrucciones -> instrucciones instruccion
Rule 19    instrucciones -> instruccion
Rule 20    instruccion -> print PTCOMA
Rule 21    instruccion -> declaracion PTCOMA
Rule 22    instruccion -> asignacion PTCOMA
Rule 23    instruccion -> if_i
Rule 24    instruccion -> llamadaF PTCOMA
Rule 25    instruccion -> return PTCOMA
Rule 26    instruccion -> loop
Rule 27    instruccion -> break PTCOMA
Rule 28    instruccion -> while
Rule 29    instruccion -> continue PTCOMA
Rule 30    instruccion -> for
Rule 31    print -> PRINTLN NOT PIZQ lista_expresiones PDER
Rule 32    return -> RETURN
Rule 33    return -> RETURN expresion
Rule 34    declaracion -> LET MUT ID DOBLEPT tipo_dato IGUAL expresion
Rule 35    declaracion -> LET ID DOBLEPT tipo_dato IGUAL expresion
Rule 36    declaracion -> LET MUT ID IGUAL expresion
Rule 37    declaracion -> LET ID IGUAL expresion
Rule 38    asignacion -> ID IGUAL expresion
Rule 39    if_i -> IF expresion bloque else
Rule 40    else -> ELSE if_i
Rule 41    else -> ELSE bloque
Rule 42    else -> empty
Rule 43    empty -> <empty>
Rule 44    loop -> LOOP bloque
Rule 45    break -> BREAK
Rule 46    break -> BREAK expresion
Rule 47    while -> WHILE expresion bloque
Rule 48    continue -> CONTINUE
Rule 49    for -> FOR ID IN expresion PUNTO PUNTO expresion bloque
Rule 50    for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque
Rule 51    expresion -> MENOS expresion
Rule 52    expresion -> expresion MAS expresion
Rule 53    expresion -> expresion MENOS expresion
Rule 54    expresion -> expresion MULTIPLICACION expresion
Rule 55    expresion -> expresion DIVISION expresion
Rule 56    expresion -> expresion MODULO expresion
Rule 57    expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
Rule 58    expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
Rule 59    expresion -> PIZQ expresion PDER
Rule 60    expresion -> expresion MAYOR expresion
Rule 61    expresion -> expresion MENOR expresion
Rule 62    expresion -> expresion MAYORIGUAL expresion
Rule 63    expresion -> expresion MENORIGUAL expresion
Rule 64    expresion -> expresion IGUALIGUAL expresion
Rule 65    expresion -> expresion DIFERENTE expresion
Rule 66    expresion -> expresion AND expresion
Rule 67    expresion -> expresion OR expresion
Rule 68    expresion -> NOT expresion
Rule 69    expresion -> tostring
Rule 70    expresion -> as
Rule 71    expresion -> if_e
Rule 72    expresion -> llamadaF
Rule 73    expresion -> loop
Rule 74    tostring -> expresion PUNTO TOSTRING PIZQ PDER
Rule 75    tostring -> expresion PUNTO TOOWNED PIZQ PDER
Rule 76    as -> expresion AS I64
Rule 77    as -> expresion AS F64
Rule 78    if_e -> IF expresion LLAVEIZQ expresion LLAVEDER
Rule 79    if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
Rule 80    if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse
Rule 81    if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
Rule 82    listaelse -> listaelse elseif
Rule 83    listaelse -> elseif
Rule 84    elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER
Rule 85    expresion -> ENTERO
Rule 86    expresion -> DECIMAL
Rule 87    expresion -> ID
Rule 88    expresion -> CARACTER
Rule 89    expresion -> CADENA
Rule 90    expresion -> TRUE
Rule 91    expresion -> FALSE
Rule 92    tipo_dato -> I64
Rule 93    tipo_dato -> F64
Rule 94    tipo_dato -> BOOL
Rule 95    tipo_dato -> CHAR
Rule 96    tipo_dato -> str
Rule 97    tipo_dato -> STRING
Rule 98    str -> Y STR

Terminals, with rules where they appear

AND                  : 66
AS                   : 76 77
BOOL                 : 94
BREAK                : 45 46
CADENA               : 89
CARACTER             : 88
CHAR                 : 95
CHARS                : 50
COMA                 : 9 14 57 58
CONTINUE             : 48
CORDER               : 
CORIZQ               : 
DECIMAL              : 86
DIFERENTE            : 65
DIVISION             : 55
DOBLEPT              : 11 34 35 57 57 58 58
ELSE                 : 40 41 79 81 84
ENTERO               : 85
F64                  : 58 77 93
FALSE                : 91
FLECHA               : 6 8
FN                   : 5 6 7 8
FOR                  : 49 50
I64                  : 57 76 92
ID                   : 5 6 7 8 11 12 13 34 35 36 37 38 49 50 87
IF                   : 39 78 79 80 81 84
IGUAL                : 34 35 36 37 38
IGUALIGUAL           : 64
IN                   : 49 50
LET                  : 34 35 36 37
LLAVEDER             : 16 17 78 79 79 80 81 81 84
LLAVEIZQ             : 16 17 78 79 79 80 81 81 84
LOOP                 : 44
MAS                  : 52
MAYOR                : 60
MAYORIGUAL           : 62
MENOR                : 61
MENORIGUAL           : 63
MENOS                : 51 53
MODULO               : 56
MULTIPLICACION       : 54
MUT                  : 34 36
NOT                  : 31 68
OR                   : 67
PDER                 : 5 6 7 8 12 13 31 50 57 58 59 74 75
PIZQ                 : 5 6 7 8 12 13 31 50 57 58 59 74 75
POW                  : 57
POWF                 : 58
PRINTLN              : 31
PTCOMA               : 20 21 22 24 25 27 29
PUNTO                : 49 49 50 74 75
RETURN               : 32 33
STR                  : 98
STRING               : 97
TOOWNED              : 75
TOSTRING             : 74
TRUE                 : 90
WHILE                : 47
Y                    : 98
error                : 

Nonterminals, with rules where they appear

as                   : 70
asignacion           : 22
bloque               : 5 6 7 8 39 41 44 47 49 50
break                : 27
continue             : 29
declaracion          : 21
else                 : 39
elseif               : 82 83
empty                : 42
expresion            : 14 15 33 34 35 36 37 38 39 46 47 49 49 50 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 74 75 76 77 78 78 79 79 79 80 80 81 81 81 84 84
for                  : 30
funcion              : 4
funcion_struct       : 2 3
funciones_structs    : 1 2
if_e                 : 71
if_i                 : 23 40
init                 : 0
instruccion          : 18 19
instrucciones        : 17 18
lista_expresiones    : 13 14 31
listaelse            : 80 81 82
llamadaF             : 24 72
loop                 : 26 73
parametro            : 9 10
parametros           : 7 8 9
print                : 20
return               : 25
str                  : 96
tipo_dato            : 6 8 11 34 35
tostring             : 69
while                : 28

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . funciones_structs
    (2) funciones_structs -> . funciones_structs funcion_struct
    (3) funciones_structs -> . funcion_struct
    (4) funcion_struct -> . funcion
    (5) funcion -> . FN ID PIZQ PDER bloque
    (6) funcion -> . FN ID PIZQ PDER FLECHA tipo_dato bloque
    (7) funcion -> . FN ID PIZQ parametros PDER bloque
    (8) funcion -> . FN ID PIZQ parametros PDER FLECHA tipo_dato bloque

    FN              shift and go to state 5

    init                           shift and go to state 1
    funciones_structs              shift and go to state 2
    funcion_struct                 shift and go to state 3
    funcion                        shift and go to state 4

state 1

    (0) S' -> init .



state 2

    (1) init -> funciones_structs .
    (2) funciones_structs -> funciones_structs . funcion_struct
    (4) funcion_struct -> . funcion
    (5) funcion -> . FN ID PIZQ PDER bloque
    (6) funcion -> . FN ID PIZQ PDER FLECHA tipo_dato bloque
    (7) funcion -> . FN ID PIZQ parametros PDER bloque
    (8) funcion -> . FN ID PIZQ parametros PDER FLECHA tipo_dato bloque

    $end            reduce using rule 1 (init -> funciones_structs .)
    FN              shift and go to state 5

    funcion_struct                 shift and go to state 6
    funcion                        shift and go to state 4

state 3

    (3) funciones_structs -> funcion_struct .

    FN              reduce using rule 3 (funciones_structs -> funcion_struct .)
    $end            reduce using rule 3 (funciones_structs -> funcion_struct .)


state 4

    (4) funcion_struct -> funcion .

    FN              reduce using rule 4 (funcion_struct -> funcion .)
    $end            reduce using rule 4 (funcion_struct -> funcion .)


state 5

    (5) funcion -> FN . ID PIZQ PDER bloque
    (6) funcion -> FN . ID PIZQ PDER FLECHA tipo_dato bloque
    (7) funcion -> FN . ID PIZQ parametros PDER bloque
    (8) funcion -> FN . ID PIZQ parametros PDER FLECHA tipo_dato bloque

    ID              shift and go to state 7


state 6

    (2) funciones_structs -> funciones_structs funcion_struct .

    FN              reduce using rule 2 (funciones_structs -> funciones_structs funcion_struct .)
    $end            reduce using rule 2 (funciones_structs -> funciones_structs funcion_struct .)


state 7

    (5) funcion -> FN ID . PIZQ PDER bloque
    (6) funcion -> FN ID . PIZQ PDER FLECHA tipo_dato bloque
    (7) funcion -> FN ID . PIZQ parametros PDER bloque
    (8) funcion -> FN ID . PIZQ parametros PDER FLECHA tipo_dato bloque

    PIZQ            shift and go to state 8


state 8

    (5) funcion -> FN ID PIZQ . PDER bloque
    (6) funcion -> FN ID PIZQ . PDER FLECHA tipo_dato bloque
    (7) funcion -> FN ID PIZQ . parametros PDER bloque
    (8) funcion -> FN ID PIZQ . parametros PDER FLECHA tipo_dato bloque
    (9) parametros -> . parametros COMA parametro
    (10) parametros -> . parametro
    (11) parametro -> . ID DOBLEPT tipo_dato

    PDER            shift and go to state 10
    ID              shift and go to state 9

    parametros                     shift and go to state 11
    parametro                      shift and go to state 12

state 9

    (11) parametro -> ID . DOBLEPT tipo_dato

    DOBLEPT         shift and go to state 13


state 10

    (5) funcion -> FN ID PIZQ PDER . bloque
    (6) funcion -> FN ID PIZQ PDER . FLECHA tipo_dato bloque
    (16) bloque -> . LLAVEIZQ LLAVEDER
    (17) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    FLECHA          shift and go to state 15
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 14

state 11

    (7) funcion -> FN ID PIZQ parametros . PDER bloque
    (8) funcion -> FN ID PIZQ parametros . PDER FLECHA tipo_dato bloque
    (9) parametros -> parametros . COMA parametro

    PDER            shift and go to state 17
    COMA            shift and go to state 18


state 12

    (10) parametros -> parametro .

    PDER            reduce using rule 10 (parametros -> parametro .)
    COMA            reduce using rule 10 (parametros -> parametro .)


state 13

    (11) parametro -> ID DOBLEPT . tipo_dato
    (92) tipo_dato -> . I64
    (93) tipo_dato -> . F64
    (94) tipo_dato -> . BOOL
    (95) tipo_dato -> . CHAR
    (96) tipo_dato -> . str
    (97) tipo_dato -> . STRING
    (98) str -> . Y STR

    I64             shift and go to state 20
    F64             shift and go to state 21
    BOOL            shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 25
    Y               shift and go to state 26

    tipo_dato                      shift and go to state 19
    str                            shift and go to state 24

state 14

    (5) funcion -> FN ID PIZQ PDER bloque .

    FN              reduce using rule 5 (funcion -> FN ID PIZQ PDER bloque .)
    $end            reduce using rule 5 (funcion -> FN ID PIZQ PDER bloque .)


state 15

    (6) funcion -> FN ID PIZQ PDER FLECHA . tipo_dato bloque
    (92) tipo_dato -> . I64
    (93) tipo_dato -> . F64
    (94) tipo_dato -> . BOOL
    (95) tipo_dato -> . CHAR
    (96) tipo_dato -> . str
    (97) tipo_dato -> . STRING
    (98) str -> . Y STR

    I64             shift and go to state 20
    F64             shift and go to state 21
    BOOL            shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 25
    Y               shift and go to state 26

    tipo_dato                      shift and go to state 27
    str                            shift and go to state 24

state 16

    (16) bloque -> LLAVEIZQ . LLAVEDER
    (17) bloque -> LLAVEIZQ . instrucciones LLAVEDER
    (18) instrucciones -> . instrucciones instruccion
    (19) instrucciones -> . instruccion
    (20) instruccion -> . print PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . asignacion PTCOMA
    (23) instruccion -> . if_i
    (24) instruccion -> . llamadaF PTCOMA
    (25) instruccion -> . return PTCOMA
    (26) instruccion -> . loop
    (27) instruccion -> . break PTCOMA
    (28) instruccion -> . while
    (29) instruccion -> . continue PTCOMA
    (30) instruccion -> . for
    (31) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (34) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (35) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (36) declaracion -> . LET MUT ID IGUAL expresion
    (37) declaracion -> . LET ID IGUAL expresion
    (38) asignacion -> . ID IGUAL expresion
    (39) if_i -> . IF expresion bloque else
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (32) return -> . RETURN
    (33) return -> . RETURN expresion
    (44) loop -> . LOOP bloque
    (45) break -> . BREAK
    (46) break -> . BREAK expresion
    (47) while -> . WHILE expresion bloque
    (48) continue -> . CONTINUE
    (49) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (50) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque

    LLAVEDER        shift and go to state 28
    PRINTLN         shift and go to state 42
    LET             shift and go to state 43
    ID              shift and go to state 44
    IF              shift and go to state 45
    RETURN          shift and go to state 46
    LOOP            shift and go to state 47
    BREAK           shift and go to state 48
    WHILE           shift and go to state 49
    CONTINUE        shift and go to state 50
    FOR             shift and go to state 51

    instrucciones                  shift and go to state 29
    instruccion                    shift and go to state 30
    print                          shift and go to state 31
    declaracion                    shift and go to state 32
    asignacion                     shift and go to state 33
    if_i                           shift and go to state 34
    llamadaF                       shift and go to state 35
    return                         shift and go to state 36
    loop                           shift and go to state 37
    break                          shift and go to state 38
    while                          shift and go to state 39
    continue                       shift and go to state 40
    for                            shift and go to state 41

state 17

    (7) funcion -> FN ID PIZQ parametros PDER . bloque
    (8) funcion -> FN ID PIZQ parametros PDER . FLECHA tipo_dato bloque
    (16) bloque -> . LLAVEIZQ LLAVEDER
    (17) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    FLECHA          shift and go to state 53
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 52

state 18

    (9) parametros -> parametros COMA . parametro
    (11) parametro -> . ID DOBLEPT tipo_dato

    ID              shift and go to state 9

    parametro                      shift and go to state 54

state 19

    (11) parametro -> ID DOBLEPT tipo_dato .

    PDER            reduce using rule 11 (parametro -> ID DOBLEPT tipo_dato .)
    COMA            reduce using rule 11 (parametro -> ID DOBLEPT tipo_dato .)


state 20

    (92) tipo_dato -> I64 .

    PDER            reduce using rule 92 (tipo_dato -> I64 .)
    COMA            reduce using rule 92 (tipo_dato -> I64 .)
    LLAVEIZQ        reduce using rule 92 (tipo_dato -> I64 .)
    IGUAL           reduce using rule 92 (tipo_dato -> I64 .)


state 21

    (93) tipo_dato -> F64 .

    PDER            reduce using rule 93 (tipo_dato -> F64 .)
    COMA            reduce using rule 93 (tipo_dato -> F64 .)
    LLAVEIZQ        reduce using rule 93 (tipo_dato -> F64 .)
    IGUAL           reduce using rule 93 (tipo_dato -> F64 .)


state 22

    (94) tipo_dato -> BOOL .

    PDER            reduce using rule 94 (tipo_dato -> BOOL .)
    COMA            reduce using rule 94 (tipo_dato -> BOOL .)
    LLAVEIZQ        reduce using rule 94 (tipo_dato -> BOOL .)
    IGUAL           reduce using rule 94 (tipo_dato -> BOOL .)


state 23

    (95) tipo_dato -> CHAR .

    PDER            reduce using rule 95 (tipo_dato -> CHAR .)
    COMA            reduce using rule 95 (tipo_dato -> CHAR .)
    LLAVEIZQ        reduce using rule 95 (tipo_dato -> CHAR .)
    IGUAL           reduce using rule 95 (tipo_dato -> CHAR .)


state 24

    (96) tipo_dato -> str .

    PDER            reduce using rule 96 (tipo_dato -> str .)
    COMA            reduce using rule 96 (tipo_dato -> str .)
    LLAVEIZQ        reduce using rule 96 (tipo_dato -> str .)
    IGUAL           reduce using rule 96 (tipo_dato -> str .)


state 25

    (97) tipo_dato -> STRING .

    PDER            reduce using rule 97 (tipo_dato -> STRING .)
    COMA            reduce using rule 97 (tipo_dato -> STRING .)
    LLAVEIZQ        reduce using rule 97 (tipo_dato -> STRING .)
    IGUAL           reduce using rule 97 (tipo_dato -> STRING .)


state 26

    (98) str -> Y . STR

    STR             shift and go to state 55


state 27

    (6) funcion -> FN ID PIZQ PDER FLECHA tipo_dato . bloque
    (16) bloque -> . LLAVEIZQ LLAVEDER
    (17) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 56

state 28

    (16) bloque -> LLAVEIZQ LLAVEDER .

    FN              reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    $end            reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    LLAVEDER        reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    PRINTLN         reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    LET             reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    ID              reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    IF              reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    RETURN          reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    LOOP            reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    BREAK           reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    WHILE           reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    CONTINUE        reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    FOR             reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    MAS             reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    MENOS           reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    MULTIPLICACION  reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    DIVISION        reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    MODULO          reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    MAYOR           reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    MENOR           reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    MAYORIGUAL      reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    MENORIGUAL      reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    IGUALIGUAL      reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    DIFERENTE       reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    AND             reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    OR              reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    PUNTO           reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    AS              reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    LLAVEIZQ        reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    PTCOMA          reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    PDER            reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    COMA            reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)
    ELSE            reduce using rule 16 (bloque -> LLAVEIZQ LLAVEDER .)


state 29

    (17) bloque -> LLAVEIZQ instrucciones . LLAVEDER
    (18) instrucciones -> instrucciones . instruccion
    (20) instruccion -> . print PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . asignacion PTCOMA
    (23) instruccion -> . if_i
    (24) instruccion -> . llamadaF PTCOMA
    (25) instruccion -> . return PTCOMA
    (26) instruccion -> . loop
    (27) instruccion -> . break PTCOMA
    (28) instruccion -> . while
    (29) instruccion -> . continue PTCOMA
    (30) instruccion -> . for
    (31) print -> . PRINTLN NOT PIZQ lista_expresiones PDER
    (34) declaracion -> . LET MUT ID DOBLEPT tipo_dato IGUAL expresion
    (35) declaracion -> . LET ID DOBLEPT tipo_dato IGUAL expresion
    (36) declaracion -> . LET MUT ID IGUAL expresion
    (37) declaracion -> . LET ID IGUAL expresion
    (38) asignacion -> . ID IGUAL expresion
    (39) if_i -> . IF expresion bloque else
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (32) return -> . RETURN
    (33) return -> . RETURN expresion
    (44) loop -> . LOOP bloque
    (45) break -> . BREAK
    (46) break -> . BREAK expresion
    (47) while -> . WHILE expresion bloque
    (48) continue -> . CONTINUE
    (49) for -> . FOR ID IN expresion PUNTO PUNTO expresion bloque
    (50) for -> . FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque

    LLAVEDER        shift and go to state 57
    PRINTLN         shift and go to state 42
    LET             shift and go to state 43
    ID              shift and go to state 44
    IF              shift and go to state 45
    RETURN          shift and go to state 46
    LOOP            shift and go to state 47
    BREAK           shift and go to state 48
    WHILE           shift and go to state 49
    CONTINUE        shift and go to state 50
    FOR             shift and go to state 51

    instruccion                    shift and go to state 58
    print                          shift and go to state 31
    declaracion                    shift and go to state 32
    asignacion                     shift and go to state 33
    if_i                           shift and go to state 34
    llamadaF                       shift and go to state 35
    return                         shift and go to state 36
    loop                           shift and go to state 37
    break                          shift and go to state 38
    while                          shift and go to state 39
    continue                       shift and go to state 40
    for                            shift and go to state 41

state 30

    (19) instrucciones -> instruccion .

    LLAVEDER        reduce using rule 19 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 19 (instrucciones -> instruccion .)
    LET             reduce using rule 19 (instrucciones -> instruccion .)
    ID              reduce using rule 19 (instrucciones -> instruccion .)
    IF              reduce using rule 19 (instrucciones -> instruccion .)
    RETURN          reduce using rule 19 (instrucciones -> instruccion .)
    LOOP            reduce using rule 19 (instrucciones -> instruccion .)
    BREAK           reduce using rule 19 (instrucciones -> instruccion .)
    WHILE           reduce using rule 19 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 19 (instrucciones -> instruccion .)
    FOR             reduce using rule 19 (instrucciones -> instruccion .)


state 31

    (20) instruccion -> print . PTCOMA

    PTCOMA          shift and go to state 59


state 32

    (21) instruccion -> declaracion . PTCOMA

    PTCOMA          shift and go to state 60


state 33

    (22) instruccion -> asignacion . PTCOMA

    PTCOMA          shift and go to state 61


state 34

    (23) instruccion -> if_i .

    LLAVEDER        reduce using rule 23 (instruccion -> if_i .)
    PRINTLN         reduce using rule 23 (instruccion -> if_i .)
    LET             reduce using rule 23 (instruccion -> if_i .)
    ID              reduce using rule 23 (instruccion -> if_i .)
    IF              reduce using rule 23 (instruccion -> if_i .)
    RETURN          reduce using rule 23 (instruccion -> if_i .)
    LOOP            reduce using rule 23 (instruccion -> if_i .)
    BREAK           reduce using rule 23 (instruccion -> if_i .)
    WHILE           reduce using rule 23 (instruccion -> if_i .)
    CONTINUE        reduce using rule 23 (instruccion -> if_i .)
    FOR             reduce using rule 23 (instruccion -> if_i .)


state 35

    (24) instruccion -> llamadaF . PTCOMA

    PTCOMA          shift and go to state 62


state 36

    (25) instruccion -> return . PTCOMA

    PTCOMA          shift and go to state 63


state 37

    (26) instruccion -> loop .

    LLAVEDER        reduce using rule 26 (instruccion -> loop .)
    PRINTLN         reduce using rule 26 (instruccion -> loop .)
    LET             reduce using rule 26 (instruccion -> loop .)
    ID              reduce using rule 26 (instruccion -> loop .)
    IF              reduce using rule 26 (instruccion -> loop .)
    RETURN          reduce using rule 26 (instruccion -> loop .)
    LOOP            reduce using rule 26 (instruccion -> loop .)
    BREAK           reduce using rule 26 (instruccion -> loop .)
    WHILE           reduce using rule 26 (instruccion -> loop .)
    CONTINUE        reduce using rule 26 (instruccion -> loop .)
    FOR             reduce using rule 26 (instruccion -> loop .)


state 38

    (27) instruccion -> break . PTCOMA

    PTCOMA          shift and go to state 64


state 39

    (28) instruccion -> while .

    LLAVEDER        reduce using rule 28 (instruccion -> while .)
    PRINTLN         reduce using rule 28 (instruccion -> while .)
    LET             reduce using rule 28 (instruccion -> while .)
    ID              reduce using rule 28 (instruccion -> while .)
    IF              reduce using rule 28 (instruccion -> while .)
    RETURN          reduce using rule 28 (instruccion -> while .)
    LOOP            reduce using rule 28 (instruccion -> while .)
    BREAK           reduce using rule 28 (instruccion -> while .)
    WHILE           reduce using rule 28 (instruccion -> while .)
    CONTINUE        reduce using rule 28 (instruccion -> while .)
    FOR             reduce using rule 28 (instruccion -> while .)


state 40

    (29) instruccion -> continue . PTCOMA

    PTCOMA          shift and go to state 65


state 41

    (30) instruccion -> for .

    LLAVEDER        reduce using rule 30 (instruccion -> for .)
    PRINTLN         reduce using rule 30 (instruccion -> for .)
    LET             reduce using rule 30 (instruccion -> for .)
    ID              reduce using rule 30 (instruccion -> for .)
    IF              reduce using rule 30 (instruccion -> for .)
    RETURN          reduce using rule 30 (instruccion -> for .)
    LOOP            reduce using rule 30 (instruccion -> for .)
    BREAK           reduce using rule 30 (instruccion -> for .)
    WHILE           reduce using rule 30 (instruccion -> for .)
    CONTINUE        reduce using rule 30 (instruccion -> for .)
    FOR             reduce using rule 30 (instruccion -> for .)


state 42

    (31) print -> PRINTLN . NOT PIZQ lista_expresiones PDER

    NOT             shift and go to state 66


state 43

    (34) declaracion -> LET . MUT ID DOBLEPT tipo_dato IGUAL expresion
    (35) declaracion -> LET . ID DOBLEPT tipo_dato IGUAL expresion
    (36) declaracion -> LET . MUT ID IGUAL expresion
    (37) declaracion -> LET . ID IGUAL expresion

    MUT             shift and go to state 67
    ID              shift and go to state 68


state 44

    (38) asignacion -> ID . IGUAL expresion
    (12) llamadaF -> ID . PIZQ PDER
    (13) llamadaF -> ID . PIZQ lista_expresiones PDER

    IGUAL           shift and go to state 69
    PIZQ            shift and go to state 70


state 45

    (39) if_i -> IF . expresion bloque else
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 72
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 46

    (32) return -> RETURN .
    (33) return -> RETURN . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    PTCOMA          reduce using rule 32 (return -> RETURN .)
    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 90
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 47

    (44) loop -> LOOP . bloque
    (16) bloque -> . LLAVEIZQ LLAVEDER
    (17) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 91

state 48

    (45) break -> BREAK .
    (46) break -> BREAK . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    PTCOMA          reduce using rule 45 (break -> BREAK .)
    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 92
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 49

    (47) while -> WHILE . expresion bloque
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 93
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 50

    (48) continue -> CONTINUE .

    PTCOMA          reduce using rule 48 (continue -> CONTINUE .)


state 51

    (49) for -> FOR . ID IN expresion PUNTO PUNTO expresion bloque
    (50) for -> FOR . ID IN expresion PUNTO CHARS PIZQ PDER bloque

    ID              shift and go to state 94


state 52

    (7) funcion -> FN ID PIZQ parametros PDER bloque .

    FN              reduce using rule 7 (funcion -> FN ID PIZQ parametros PDER bloque .)
    $end            reduce using rule 7 (funcion -> FN ID PIZQ parametros PDER bloque .)


state 53

    (8) funcion -> FN ID PIZQ parametros PDER FLECHA . tipo_dato bloque
    (92) tipo_dato -> . I64
    (93) tipo_dato -> . F64
    (94) tipo_dato -> . BOOL
    (95) tipo_dato -> . CHAR
    (96) tipo_dato -> . str
    (97) tipo_dato -> . STRING
    (98) str -> . Y STR

    I64             shift and go to state 20
    F64             shift and go to state 21
    BOOL            shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 25
    Y               shift and go to state 26

    tipo_dato                      shift and go to state 95
    str                            shift and go to state 24

state 54

    (9) parametros -> parametros COMA parametro .

    PDER            reduce using rule 9 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 9 (parametros -> parametros COMA parametro .)


state 55

    (98) str -> Y STR .

    PDER            reduce using rule 98 (str -> Y STR .)
    COMA            reduce using rule 98 (str -> Y STR .)
    LLAVEIZQ        reduce using rule 98 (str -> Y STR .)
    IGUAL           reduce using rule 98 (str -> Y STR .)


state 56

    (6) funcion -> FN ID PIZQ PDER FLECHA tipo_dato bloque .

    FN              reduce using rule 6 (funcion -> FN ID PIZQ PDER FLECHA tipo_dato bloque .)
    $end            reduce using rule 6 (funcion -> FN ID PIZQ PDER FLECHA tipo_dato bloque .)


state 57

    (17) bloque -> LLAVEIZQ instrucciones LLAVEDER .

    FN              reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    $end            reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEDER        reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PRINTLN         reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    LET             reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    ID              reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    IF              reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    RETURN          reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    LOOP            reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    BREAK           reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    WHILE           reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    CONTINUE        reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    FOR             reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MAS             reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MENOS           reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MULTIPLICACION  reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    DIVISION        reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MODULO          reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MAYOR           reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MENOR           reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MAYORIGUAL      reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    MENORIGUAL      reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    IGUALIGUAL      reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    DIFERENTE       reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    AND             reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    OR              reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PUNTO           reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    AS              reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    LLAVEIZQ        reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PTCOMA          reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    PDER            reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    COMA            reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)
    ELSE            reduce using rule 17 (bloque -> LLAVEIZQ instrucciones LLAVEDER .)


state 58

    (18) instrucciones -> instrucciones instruccion .

    LLAVEDER        reduce using rule 18 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 18 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 18 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 18 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 18 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 18 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 18 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 18 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 18 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 18 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 18 (instrucciones -> instrucciones instruccion .)


state 59

    (20) instruccion -> print PTCOMA .

    LLAVEDER        reduce using rule 20 (instruccion -> print PTCOMA .)
    PRINTLN         reduce using rule 20 (instruccion -> print PTCOMA .)
    LET             reduce using rule 20 (instruccion -> print PTCOMA .)
    ID              reduce using rule 20 (instruccion -> print PTCOMA .)
    IF              reduce using rule 20 (instruccion -> print PTCOMA .)
    RETURN          reduce using rule 20 (instruccion -> print PTCOMA .)
    LOOP            reduce using rule 20 (instruccion -> print PTCOMA .)
    BREAK           reduce using rule 20 (instruccion -> print PTCOMA .)
    WHILE           reduce using rule 20 (instruccion -> print PTCOMA .)
    CONTINUE        reduce using rule 20 (instruccion -> print PTCOMA .)
    FOR             reduce using rule 20 (instruccion -> print PTCOMA .)


state 60

    (21) instruccion -> declaracion PTCOMA .

    LLAVEDER        reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    PRINTLN         reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    LET             reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    ID              reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    IF              reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    RETURN          reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    LOOP            reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    BREAK           reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    WHILE           reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    CONTINUE        reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    FOR             reduce using rule 21 (instruccion -> declaracion PTCOMA .)


state 61

    (22) instruccion -> asignacion PTCOMA .

    LLAVEDER        reduce using rule 22 (instruccion -> asignacion PTCOMA .)
    PRINTLN         reduce using rule 22 (instruccion -> asignacion PTCOMA .)
    LET             reduce using rule 22 (instruccion -> asignacion PTCOMA .)
    ID              reduce using rule 22 (instruccion -> asignacion PTCOMA .)
    IF              reduce using rule 22 (instruccion -> asignacion PTCOMA .)
    RETURN          reduce using rule 22 (instruccion -> asignacion PTCOMA .)
    LOOP            reduce using rule 22 (instruccion -> asignacion PTCOMA .)
    BREAK           reduce using rule 22 (instruccion -> asignacion PTCOMA .)
    WHILE           reduce using rule 22 (instruccion -> asignacion PTCOMA .)
    CONTINUE        reduce using rule 22 (instruccion -> asignacion PTCOMA .)
    FOR             reduce using rule 22 (instruccion -> asignacion PTCOMA .)


state 62

    (24) instruccion -> llamadaF PTCOMA .

    LLAVEDER        reduce using rule 24 (instruccion -> llamadaF PTCOMA .)
    PRINTLN         reduce using rule 24 (instruccion -> llamadaF PTCOMA .)
    LET             reduce using rule 24 (instruccion -> llamadaF PTCOMA .)
    ID              reduce using rule 24 (instruccion -> llamadaF PTCOMA .)
    IF              reduce using rule 24 (instruccion -> llamadaF PTCOMA .)
    RETURN          reduce using rule 24 (instruccion -> llamadaF PTCOMA .)
    LOOP            reduce using rule 24 (instruccion -> llamadaF PTCOMA .)
    BREAK           reduce using rule 24 (instruccion -> llamadaF PTCOMA .)
    WHILE           reduce using rule 24 (instruccion -> llamadaF PTCOMA .)
    CONTINUE        reduce using rule 24 (instruccion -> llamadaF PTCOMA .)
    FOR             reduce using rule 24 (instruccion -> llamadaF PTCOMA .)


state 63

    (25) instruccion -> return PTCOMA .

    LLAVEDER        reduce using rule 25 (instruccion -> return PTCOMA .)
    PRINTLN         reduce using rule 25 (instruccion -> return PTCOMA .)
    LET             reduce using rule 25 (instruccion -> return PTCOMA .)
    ID              reduce using rule 25 (instruccion -> return PTCOMA .)
    IF              reduce using rule 25 (instruccion -> return PTCOMA .)
    RETURN          reduce using rule 25 (instruccion -> return PTCOMA .)
    LOOP            reduce using rule 25 (instruccion -> return PTCOMA .)
    BREAK           reduce using rule 25 (instruccion -> return PTCOMA .)
    WHILE           reduce using rule 25 (instruccion -> return PTCOMA .)
    CONTINUE        reduce using rule 25 (instruccion -> return PTCOMA .)
    FOR             reduce using rule 25 (instruccion -> return PTCOMA .)


state 64

    (27) instruccion -> break PTCOMA .

    LLAVEDER        reduce using rule 27 (instruccion -> break PTCOMA .)
    PRINTLN         reduce using rule 27 (instruccion -> break PTCOMA .)
    LET             reduce using rule 27 (instruccion -> break PTCOMA .)
    ID              reduce using rule 27 (instruccion -> break PTCOMA .)
    IF              reduce using rule 27 (instruccion -> break PTCOMA .)
    RETURN          reduce using rule 27 (instruccion -> break PTCOMA .)
    LOOP            reduce using rule 27 (instruccion -> break PTCOMA .)
    BREAK           reduce using rule 27 (instruccion -> break PTCOMA .)
    WHILE           reduce using rule 27 (instruccion -> break PTCOMA .)
    CONTINUE        reduce using rule 27 (instruccion -> break PTCOMA .)
    FOR             reduce using rule 27 (instruccion -> break PTCOMA .)


state 65

    (29) instruccion -> continue PTCOMA .

    LLAVEDER        reduce using rule 29 (instruccion -> continue PTCOMA .)
    PRINTLN         reduce using rule 29 (instruccion -> continue PTCOMA .)
    LET             reduce using rule 29 (instruccion -> continue PTCOMA .)
    ID              reduce using rule 29 (instruccion -> continue PTCOMA .)
    IF              reduce using rule 29 (instruccion -> continue PTCOMA .)
    RETURN          reduce using rule 29 (instruccion -> continue PTCOMA .)
    LOOP            reduce using rule 29 (instruccion -> continue PTCOMA .)
    BREAK           reduce using rule 29 (instruccion -> continue PTCOMA .)
    WHILE           reduce using rule 29 (instruccion -> continue PTCOMA .)
    CONTINUE        reduce using rule 29 (instruccion -> continue PTCOMA .)
    FOR             reduce using rule 29 (instruccion -> continue PTCOMA .)


state 66

    (31) print -> PRINTLN NOT . PIZQ lista_expresiones PDER

    PIZQ            shift and go to state 96


state 67

    (34) declaracion -> LET MUT . ID DOBLEPT tipo_dato IGUAL expresion
    (36) declaracion -> LET MUT . ID IGUAL expresion

    ID              shift and go to state 97


state 68

    (35) declaracion -> LET ID . DOBLEPT tipo_dato IGUAL expresion
    (37) declaracion -> LET ID . IGUAL expresion

    DOBLEPT         shift and go to state 98
    IGUAL           shift and go to state 99


state 69

    (38) asignacion -> ID IGUAL . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 100
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 70

    (12) llamadaF -> ID PIZQ . PDER
    (13) llamadaF -> ID PIZQ . lista_expresiones PDER
    (14) lista_expresiones -> . lista_expresiones COMA expresion
    (15) lista_expresiones -> . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    PDER            shift and go to state 101
    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    lista_expresiones              shift and go to state 102
    expresion                      shift and go to state 103
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 71

    (78) if_e -> IF . expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> IF . expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> IF . expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> IF . expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 104
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 72

    (39) if_i -> IF expresion . bloque else
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64
    (16) bloque -> . LLAVEIZQ LLAVEDER
    (17) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 105

state 73

    (51) expresion -> MENOS . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 121
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 74

    (57) expresion -> I64 . DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER

    DOBLEPT         shift and go to state 122


state 75

    (59) expresion -> PIZQ . expresion PDER
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 123
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 76

    (58) expresion -> F64 . DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER

    DOBLEPT         shift and go to state 124


state 77

    (68) expresion -> NOT . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 125
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 78

    (69) expresion -> tostring .

    MAS             reduce using rule 69 (expresion -> tostring .)
    MENOS           reduce using rule 69 (expresion -> tostring .)
    MULTIPLICACION  reduce using rule 69 (expresion -> tostring .)
    DIVISION        reduce using rule 69 (expresion -> tostring .)
    MODULO          reduce using rule 69 (expresion -> tostring .)
    MAYOR           reduce using rule 69 (expresion -> tostring .)
    MENOR           reduce using rule 69 (expresion -> tostring .)
    MAYORIGUAL      reduce using rule 69 (expresion -> tostring .)
    MENORIGUAL      reduce using rule 69 (expresion -> tostring .)
    IGUALIGUAL      reduce using rule 69 (expresion -> tostring .)
    DIFERENTE       reduce using rule 69 (expresion -> tostring .)
    AND             reduce using rule 69 (expresion -> tostring .)
    OR              reduce using rule 69 (expresion -> tostring .)
    PUNTO           reduce using rule 69 (expresion -> tostring .)
    AS              reduce using rule 69 (expresion -> tostring .)
    LLAVEIZQ        reduce using rule 69 (expresion -> tostring .)
    PTCOMA          reduce using rule 69 (expresion -> tostring .)
    PDER            reduce using rule 69 (expresion -> tostring .)
    COMA            reduce using rule 69 (expresion -> tostring .)
    LLAVEDER        reduce using rule 69 (expresion -> tostring .)


state 79

    (70) expresion -> as .

    MAS             reduce using rule 70 (expresion -> as .)
    MENOS           reduce using rule 70 (expresion -> as .)
    MULTIPLICACION  reduce using rule 70 (expresion -> as .)
    DIVISION        reduce using rule 70 (expresion -> as .)
    MODULO          reduce using rule 70 (expresion -> as .)
    MAYOR           reduce using rule 70 (expresion -> as .)
    MENOR           reduce using rule 70 (expresion -> as .)
    MAYORIGUAL      reduce using rule 70 (expresion -> as .)
    MENORIGUAL      reduce using rule 70 (expresion -> as .)
    IGUALIGUAL      reduce using rule 70 (expresion -> as .)
    DIFERENTE       reduce using rule 70 (expresion -> as .)
    AND             reduce using rule 70 (expresion -> as .)
    OR              reduce using rule 70 (expresion -> as .)
    PUNTO           reduce using rule 70 (expresion -> as .)
    AS              reduce using rule 70 (expresion -> as .)
    LLAVEIZQ        reduce using rule 70 (expresion -> as .)
    PTCOMA          reduce using rule 70 (expresion -> as .)
    PDER            reduce using rule 70 (expresion -> as .)
    COMA            reduce using rule 70 (expresion -> as .)
    LLAVEDER        reduce using rule 70 (expresion -> as .)


state 80

    (71) expresion -> if_e .

    MAS             reduce using rule 71 (expresion -> if_e .)
    MENOS           reduce using rule 71 (expresion -> if_e .)
    MULTIPLICACION  reduce using rule 71 (expresion -> if_e .)
    DIVISION        reduce using rule 71 (expresion -> if_e .)
    MODULO          reduce using rule 71 (expresion -> if_e .)
    MAYOR           reduce using rule 71 (expresion -> if_e .)
    MENOR           reduce using rule 71 (expresion -> if_e .)
    MAYORIGUAL      reduce using rule 71 (expresion -> if_e .)
    MENORIGUAL      reduce using rule 71 (expresion -> if_e .)
    IGUALIGUAL      reduce using rule 71 (expresion -> if_e .)
    DIFERENTE       reduce using rule 71 (expresion -> if_e .)
    AND             reduce using rule 71 (expresion -> if_e .)
    OR              reduce using rule 71 (expresion -> if_e .)
    PUNTO           reduce using rule 71 (expresion -> if_e .)
    AS              reduce using rule 71 (expresion -> if_e .)
    LLAVEIZQ        reduce using rule 71 (expresion -> if_e .)
    PTCOMA          reduce using rule 71 (expresion -> if_e .)
    PDER            reduce using rule 71 (expresion -> if_e .)
    COMA            reduce using rule 71 (expresion -> if_e .)
    LLAVEDER        reduce using rule 71 (expresion -> if_e .)


state 81

    (72) expresion -> llamadaF .

    MAS             reduce using rule 72 (expresion -> llamadaF .)
    MENOS           reduce using rule 72 (expresion -> llamadaF .)
    MULTIPLICACION  reduce using rule 72 (expresion -> llamadaF .)
    DIVISION        reduce using rule 72 (expresion -> llamadaF .)
    MODULO          reduce using rule 72 (expresion -> llamadaF .)
    MAYOR           reduce using rule 72 (expresion -> llamadaF .)
    MENOR           reduce using rule 72 (expresion -> llamadaF .)
    MAYORIGUAL      reduce using rule 72 (expresion -> llamadaF .)
    MENORIGUAL      reduce using rule 72 (expresion -> llamadaF .)
    IGUALIGUAL      reduce using rule 72 (expresion -> llamadaF .)
    DIFERENTE       reduce using rule 72 (expresion -> llamadaF .)
    AND             reduce using rule 72 (expresion -> llamadaF .)
    OR              reduce using rule 72 (expresion -> llamadaF .)
    PUNTO           reduce using rule 72 (expresion -> llamadaF .)
    AS              reduce using rule 72 (expresion -> llamadaF .)
    LLAVEIZQ        reduce using rule 72 (expresion -> llamadaF .)
    PTCOMA          reduce using rule 72 (expresion -> llamadaF .)
    PDER            reduce using rule 72 (expresion -> llamadaF .)
    COMA            reduce using rule 72 (expresion -> llamadaF .)
    LLAVEDER        reduce using rule 72 (expresion -> llamadaF .)


state 82

    (73) expresion -> loop .

    MAS             reduce using rule 73 (expresion -> loop .)
    MENOS           reduce using rule 73 (expresion -> loop .)
    MULTIPLICACION  reduce using rule 73 (expresion -> loop .)
    DIVISION        reduce using rule 73 (expresion -> loop .)
    MODULO          reduce using rule 73 (expresion -> loop .)
    MAYOR           reduce using rule 73 (expresion -> loop .)
    MENOR           reduce using rule 73 (expresion -> loop .)
    MAYORIGUAL      reduce using rule 73 (expresion -> loop .)
    MENORIGUAL      reduce using rule 73 (expresion -> loop .)
    IGUALIGUAL      reduce using rule 73 (expresion -> loop .)
    DIFERENTE       reduce using rule 73 (expresion -> loop .)
    AND             reduce using rule 73 (expresion -> loop .)
    OR              reduce using rule 73 (expresion -> loop .)
    PUNTO           reduce using rule 73 (expresion -> loop .)
    AS              reduce using rule 73 (expresion -> loop .)
    LLAVEIZQ        reduce using rule 73 (expresion -> loop .)
    PTCOMA          reduce using rule 73 (expresion -> loop .)
    PDER            reduce using rule 73 (expresion -> loop .)
    COMA            reduce using rule 73 (expresion -> loop .)
    LLAVEDER        reduce using rule 73 (expresion -> loop .)


state 83

    (85) expresion -> ENTERO .

    MAS             reduce using rule 85 (expresion -> ENTERO .)
    MENOS           reduce using rule 85 (expresion -> ENTERO .)
    MULTIPLICACION  reduce using rule 85 (expresion -> ENTERO .)
    DIVISION        reduce using rule 85 (expresion -> ENTERO .)
    MODULO          reduce using rule 85 (expresion -> ENTERO .)
    MAYOR           reduce using rule 85 (expresion -> ENTERO .)
    MENOR           reduce using rule 85 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 85 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 85 (expresion -> ENTERO .)
    IGUALIGUAL      reduce using rule 85 (expresion -> ENTERO .)
    DIFERENTE       reduce using rule 85 (expresion -> ENTERO .)
    AND             reduce using rule 85 (expresion -> ENTERO .)
    OR              reduce using rule 85 (expresion -> ENTERO .)
    PUNTO           reduce using rule 85 (expresion -> ENTERO .)
    AS              reduce using rule 85 (expresion -> ENTERO .)
    LLAVEIZQ        reduce using rule 85 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 85 (expresion -> ENTERO .)
    PDER            reduce using rule 85 (expresion -> ENTERO .)
    COMA            reduce using rule 85 (expresion -> ENTERO .)
    LLAVEDER        reduce using rule 85 (expresion -> ENTERO .)


state 84

    (86) expresion -> DECIMAL .

    MAS             reduce using rule 86 (expresion -> DECIMAL .)
    MENOS           reduce using rule 86 (expresion -> DECIMAL .)
    MULTIPLICACION  reduce using rule 86 (expresion -> DECIMAL .)
    DIVISION        reduce using rule 86 (expresion -> DECIMAL .)
    MODULO          reduce using rule 86 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 86 (expresion -> DECIMAL .)
    MENOR           reduce using rule 86 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 86 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 86 (expresion -> DECIMAL .)
    IGUALIGUAL      reduce using rule 86 (expresion -> DECIMAL .)
    DIFERENTE       reduce using rule 86 (expresion -> DECIMAL .)
    AND             reduce using rule 86 (expresion -> DECIMAL .)
    OR              reduce using rule 86 (expresion -> DECIMAL .)
    PUNTO           reduce using rule 86 (expresion -> DECIMAL .)
    AS              reduce using rule 86 (expresion -> DECIMAL .)
    LLAVEIZQ        reduce using rule 86 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 86 (expresion -> DECIMAL .)
    PDER            reduce using rule 86 (expresion -> DECIMAL .)
    COMA            reduce using rule 86 (expresion -> DECIMAL .)
    LLAVEDER        reduce using rule 86 (expresion -> DECIMAL .)


state 85

    (87) expresion -> ID .
    (12) llamadaF -> ID . PIZQ PDER
    (13) llamadaF -> ID . PIZQ lista_expresiones PDER

    MAS             reduce using rule 87 (expresion -> ID .)
    MENOS           reduce using rule 87 (expresion -> ID .)
    MULTIPLICACION  reduce using rule 87 (expresion -> ID .)
    DIVISION        reduce using rule 87 (expresion -> ID .)
    MODULO          reduce using rule 87 (expresion -> ID .)
    MAYOR           reduce using rule 87 (expresion -> ID .)
    MENOR           reduce using rule 87 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 87 (expresion -> ID .)
    MENORIGUAL      reduce using rule 87 (expresion -> ID .)
    IGUALIGUAL      reduce using rule 87 (expresion -> ID .)
    DIFERENTE       reduce using rule 87 (expresion -> ID .)
    AND             reduce using rule 87 (expresion -> ID .)
    OR              reduce using rule 87 (expresion -> ID .)
    PUNTO           reduce using rule 87 (expresion -> ID .)
    AS              reduce using rule 87 (expresion -> ID .)
    LLAVEIZQ        reduce using rule 87 (expresion -> ID .)
    PTCOMA          reduce using rule 87 (expresion -> ID .)
    PDER            reduce using rule 87 (expresion -> ID .)
    COMA            reduce using rule 87 (expresion -> ID .)
    LLAVEDER        reduce using rule 87 (expresion -> ID .)
    PIZQ            shift and go to state 70


state 86

    (88) expresion -> CARACTER .

    MAS             reduce using rule 88 (expresion -> CARACTER .)
    MENOS           reduce using rule 88 (expresion -> CARACTER .)
    MULTIPLICACION  reduce using rule 88 (expresion -> CARACTER .)
    DIVISION        reduce using rule 88 (expresion -> CARACTER .)
    MODULO          reduce using rule 88 (expresion -> CARACTER .)
    MAYOR           reduce using rule 88 (expresion -> CARACTER .)
    MENOR           reduce using rule 88 (expresion -> CARACTER .)
    MAYORIGUAL      reduce using rule 88 (expresion -> CARACTER .)
    MENORIGUAL      reduce using rule 88 (expresion -> CARACTER .)
    IGUALIGUAL      reduce using rule 88 (expresion -> CARACTER .)
    DIFERENTE       reduce using rule 88 (expresion -> CARACTER .)
    AND             reduce using rule 88 (expresion -> CARACTER .)
    OR              reduce using rule 88 (expresion -> CARACTER .)
    PUNTO           reduce using rule 88 (expresion -> CARACTER .)
    AS              reduce using rule 88 (expresion -> CARACTER .)
    LLAVEIZQ        reduce using rule 88 (expresion -> CARACTER .)
    PTCOMA          reduce using rule 88 (expresion -> CARACTER .)
    PDER            reduce using rule 88 (expresion -> CARACTER .)
    COMA            reduce using rule 88 (expresion -> CARACTER .)
    LLAVEDER        reduce using rule 88 (expresion -> CARACTER .)


state 87

    (89) expresion -> CADENA .

    MAS             reduce using rule 89 (expresion -> CADENA .)
    MENOS           reduce using rule 89 (expresion -> CADENA .)
    MULTIPLICACION  reduce using rule 89 (expresion -> CADENA .)
    DIVISION        reduce using rule 89 (expresion -> CADENA .)
    MODULO          reduce using rule 89 (expresion -> CADENA .)
    MAYOR           reduce using rule 89 (expresion -> CADENA .)
    MENOR           reduce using rule 89 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 89 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 89 (expresion -> CADENA .)
    IGUALIGUAL      reduce using rule 89 (expresion -> CADENA .)
    DIFERENTE       reduce using rule 89 (expresion -> CADENA .)
    AND             reduce using rule 89 (expresion -> CADENA .)
    OR              reduce using rule 89 (expresion -> CADENA .)
    PUNTO           reduce using rule 89 (expresion -> CADENA .)
    AS              reduce using rule 89 (expresion -> CADENA .)
    LLAVEIZQ        reduce using rule 89 (expresion -> CADENA .)
    PTCOMA          reduce using rule 89 (expresion -> CADENA .)
    PDER            reduce using rule 89 (expresion -> CADENA .)
    COMA            reduce using rule 89 (expresion -> CADENA .)
    LLAVEDER        reduce using rule 89 (expresion -> CADENA .)


state 88

    (90) expresion -> TRUE .

    MAS             reduce using rule 90 (expresion -> TRUE .)
    MENOS           reduce using rule 90 (expresion -> TRUE .)
    MULTIPLICACION  reduce using rule 90 (expresion -> TRUE .)
    DIVISION        reduce using rule 90 (expresion -> TRUE .)
    MODULO          reduce using rule 90 (expresion -> TRUE .)
    MAYOR           reduce using rule 90 (expresion -> TRUE .)
    MENOR           reduce using rule 90 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 90 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 90 (expresion -> TRUE .)
    IGUALIGUAL      reduce using rule 90 (expresion -> TRUE .)
    DIFERENTE       reduce using rule 90 (expresion -> TRUE .)
    AND             reduce using rule 90 (expresion -> TRUE .)
    OR              reduce using rule 90 (expresion -> TRUE .)
    PUNTO           reduce using rule 90 (expresion -> TRUE .)
    AS              reduce using rule 90 (expresion -> TRUE .)
    LLAVEIZQ        reduce using rule 90 (expresion -> TRUE .)
    PTCOMA          reduce using rule 90 (expresion -> TRUE .)
    PDER            reduce using rule 90 (expresion -> TRUE .)
    COMA            reduce using rule 90 (expresion -> TRUE .)
    LLAVEDER        reduce using rule 90 (expresion -> TRUE .)


state 89

    (91) expresion -> FALSE .

    MAS             reduce using rule 91 (expresion -> FALSE .)
    MENOS           reduce using rule 91 (expresion -> FALSE .)
    MULTIPLICACION  reduce using rule 91 (expresion -> FALSE .)
    DIVISION        reduce using rule 91 (expresion -> FALSE .)
    MODULO          reduce using rule 91 (expresion -> FALSE .)
    MAYOR           reduce using rule 91 (expresion -> FALSE .)
    MENOR           reduce using rule 91 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 91 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 91 (expresion -> FALSE .)
    IGUALIGUAL      reduce using rule 91 (expresion -> FALSE .)
    DIFERENTE       reduce using rule 91 (expresion -> FALSE .)
    AND             reduce using rule 91 (expresion -> FALSE .)
    OR              reduce using rule 91 (expresion -> FALSE .)
    PUNTO           reduce using rule 91 (expresion -> FALSE .)
    AS              reduce using rule 91 (expresion -> FALSE .)
    LLAVEIZQ        reduce using rule 91 (expresion -> FALSE .)
    PTCOMA          reduce using rule 91 (expresion -> FALSE .)
    PDER            reduce using rule 91 (expresion -> FALSE .)
    COMA            reduce using rule 91 (expresion -> FALSE .)
    LLAVEDER        reduce using rule 91 (expresion -> FALSE .)


state 90

    (33) return -> RETURN expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    PTCOMA          reduce using rule 33 (return -> RETURN expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120


state 91

    (44) loop -> LOOP bloque .

    LLAVEDER        reduce using rule 44 (loop -> LOOP bloque .)
    PRINTLN         reduce using rule 44 (loop -> LOOP bloque .)
    LET             reduce using rule 44 (loop -> LOOP bloque .)
    ID              reduce using rule 44 (loop -> LOOP bloque .)
    IF              reduce using rule 44 (loop -> LOOP bloque .)
    RETURN          reduce using rule 44 (loop -> LOOP bloque .)
    LOOP            reduce using rule 44 (loop -> LOOP bloque .)
    BREAK           reduce using rule 44 (loop -> LOOP bloque .)
    WHILE           reduce using rule 44 (loop -> LOOP bloque .)
    CONTINUE        reduce using rule 44 (loop -> LOOP bloque .)
    FOR             reduce using rule 44 (loop -> LOOP bloque .)
    MAS             reduce using rule 44 (loop -> LOOP bloque .)
    MENOS           reduce using rule 44 (loop -> LOOP bloque .)
    MULTIPLICACION  reduce using rule 44 (loop -> LOOP bloque .)
    DIVISION        reduce using rule 44 (loop -> LOOP bloque .)
    MODULO          reduce using rule 44 (loop -> LOOP bloque .)
    MAYOR           reduce using rule 44 (loop -> LOOP bloque .)
    MENOR           reduce using rule 44 (loop -> LOOP bloque .)
    MAYORIGUAL      reduce using rule 44 (loop -> LOOP bloque .)
    MENORIGUAL      reduce using rule 44 (loop -> LOOP bloque .)
    IGUALIGUAL      reduce using rule 44 (loop -> LOOP bloque .)
    DIFERENTE       reduce using rule 44 (loop -> LOOP bloque .)
    AND             reduce using rule 44 (loop -> LOOP bloque .)
    OR              reduce using rule 44 (loop -> LOOP bloque .)
    PUNTO           reduce using rule 44 (loop -> LOOP bloque .)
    AS              reduce using rule 44 (loop -> LOOP bloque .)
    LLAVEIZQ        reduce using rule 44 (loop -> LOOP bloque .)
    PTCOMA          reduce using rule 44 (loop -> LOOP bloque .)
    PDER            reduce using rule 44 (loop -> LOOP bloque .)
    COMA            reduce using rule 44 (loop -> LOOP bloque .)


state 92

    (46) break -> BREAK expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    PTCOMA          reduce using rule 46 (break -> BREAK expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120


state 93

    (47) while -> WHILE expresion . bloque
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64
    (16) bloque -> . LLAVEIZQ LLAVEDER
    (17) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 126

state 94

    (49) for -> FOR ID . IN expresion PUNTO PUNTO expresion bloque
    (50) for -> FOR ID . IN expresion PUNTO CHARS PIZQ PDER bloque

    IN              shift and go to state 127


state 95

    (8) funcion -> FN ID PIZQ parametros PDER FLECHA tipo_dato . bloque
    (16) bloque -> . LLAVEIZQ LLAVEDER
    (17) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 128

state 96

    (31) print -> PRINTLN NOT PIZQ . lista_expresiones PDER
    (14) lista_expresiones -> . lista_expresiones COMA expresion
    (15) lista_expresiones -> . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    lista_expresiones              shift and go to state 129
    expresion                      shift and go to state 103
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 97

    (34) declaracion -> LET MUT ID . DOBLEPT tipo_dato IGUAL expresion
    (36) declaracion -> LET MUT ID . IGUAL expresion

    DOBLEPT         shift and go to state 130
    IGUAL           shift and go to state 131


state 98

    (35) declaracion -> LET ID DOBLEPT . tipo_dato IGUAL expresion
    (92) tipo_dato -> . I64
    (93) tipo_dato -> . F64
    (94) tipo_dato -> . BOOL
    (95) tipo_dato -> . CHAR
    (96) tipo_dato -> . str
    (97) tipo_dato -> . STRING
    (98) str -> . Y STR

    I64             shift and go to state 20
    F64             shift and go to state 21
    BOOL            shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 25
    Y               shift and go to state 26

    tipo_dato                      shift and go to state 132
    str                            shift and go to state 24

state 99

    (37) declaracion -> LET ID IGUAL . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 133
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 100

    (38) asignacion -> ID IGUAL expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    PTCOMA          reduce using rule 38 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120


state 101

    (12) llamadaF -> ID PIZQ PDER .

    PTCOMA          reduce using rule 12 (llamadaF -> ID PIZQ PDER .)
    MAS             reduce using rule 12 (llamadaF -> ID PIZQ PDER .)
    MENOS           reduce using rule 12 (llamadaF -> ID PIZQ PDER .)
    MULTIPLICACION  reduce using rule 12 (llamadaF -> ID PIZQ PDER .)
    DIVISION        reduce using rule 12 (llamadaF -> ID PIZQ PDER .)
    MODULO          reduce using rule 12 (llamadaF -> ID PIZQ PDER .)
    MAYOR           reduce using rule 12 (llamadaF -> ID PIZQ PDER .)
    MENOR           reduce using rule 12 (llamadaF -> ID PIZQ PDER .)
    MAYORIGUAL      reduce using rule 12 (llamadaF -> ID PIZQ PDER .)
    MENORIGUAL      reduce using rule 12 (llamadaF -> ID PIZQ PDER .)
    IGUALIGUAL      reduce using rule 12 (llamadaF -> ID PIZQ PDER .)
    DIFERENTE       reduce using rule 12 (llamadaF -> ID PIZQ PDER .)
    AND             reduce using rule 12 (llamadaF -> ID PIZQ PDER .)
    OR              reduce using rule 12 (llamadaF -> ID PIZQ PDER .)
    PUNTO           reduce using rule 12 (llamadaF -> ID PIZQ PDER .)
    AS              reduce using rule 12 (llamadaF -> ID PIZQ PDER .)
    LLAVEIZQ        reduce using rule 12 (llamadaF -> ID PIZQ PDER .)
    PDER            reduce using rule 12 (llamadaF -> ID PIZQ PDER .)
    COMA            reduce using rule 12 (llamadaF -> ID PIZQ PDER .)
    LLAVEDER        reduce using rule 12 (llamadaF -> ID PIZQ PDER .)


state 102

    (13) llamadaF -> ID PIZQ lista_expresiones . PDER
    (14) lista_expresiones -> lista_expresiones . COMA expresion

    PDER            shift and go to state 134
    COMA            shift and go to state 135


state 103

    (15) lista_expresiones -> expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    PDER            reduce using rule 15 (lista_expresiones -> expresion .)
    COMA            reduce using rule 15 (lista_expresiones -> expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120


state 104

    (78) if_e -> IF expresion . LLAVEIZQ expresion LLAVEDER
    (79) if_e -> IF expresion . LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> IF expresion . LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> IF expresion . LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    LLAVEIZQ        shift and go to state 136
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120


state 105

    (39) if_i -> IF expresion bloque . else
    (40) else -> . ELSE if_i
    (41) else -> . ELSE bloque
    (42) else -> . empty
    (43) empty -> .

    ELSE            shift and go to state 138
    LLAVEDER        reduce using rule 43 (empty -> .)
    PRINTLN         reduce using rule 43 (empty -> .)
    LET             reduce using rule 43 (empty -> .)
    ID              reduce using rule 43 (empty -> .)
    IF              reduce using rule 43 (empty -> .)
    RETURN          reduce using rule 43 (empty -> .)
    LOOP            reduce using rule 43 (empty -> .)
    BREAK           reduce using rule 43 (empty -> .)
    WHILE           reduce using rule 43 (empty -> .)
    CONTINUE        reduce using rule 43 (empty -> .)
    FOR             reduce using rule 43 (empty -> .)

    else                           shift and go to state 137
    empty                          shift and go to state 139

state 106

    (52) expresion -> expresion MAS . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 140
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 107

    (53) expresion -> expresion MENOS . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 141
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 108

    (54) expresion -> expresion MULTIPLICACION . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 142
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 109

    (55) expresion -> expresion DIVISION . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 143
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 110

    (56) expresion -> expresion MODULO . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 144
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 111

    (60) expresion -> expresion MAYOR . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 145
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 112

    (61) expresion -> expresion MENOR . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 146
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 113

    (62) expresion -> expresion MAYORIGUAL . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 147
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 114

    (63) expresion -> expresion MENORIGUAL . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 148
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 115

    (64) expresion -> expresion IGUALIGUAL . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 149
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 116

    (65) expresion -> expresion DIFERENTE . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 150
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 117

    (66) expresion -> expresion AND . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 151
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 118

    (67) expresion -> expresion OR . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 152
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 119

    (74) tostring -> expresion PUNTO . TOSTRING PIZQ PDER
    (75) tostring -> expresion PUNTO . TOOWNED PIZQ PDER

    TOSTRING        shift and go to state 153
    TOOWNED         shift and go to state 154


state 120

    (76) as -> expresion AS . I64
    (77) as -> expresion AS . F64

    I64             shift and go to state 155
    F64             shift and go to state 156


state 121

    (51) expresion -> MENOS expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    MAS             reduce using rule 51 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 51 (expresion -> MENOS expresion .)
    MULTIPLICACION  reduce using rule 51 (expresion -> MENOS expresion .)
    DIVISION        reduce using rule 51 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 51 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 51 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 51 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 51 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 51 (expresion -> MENOS expresion .)
    IGUALIGUAL      reduce using rule 51 (expresion -> MENOS expresion .)
    DIFERENTE       reduce using rule 51 (expresion -> MENOS expresion .)
    AND             reduce using rule 51 (expresion -> MENOS expresion .)
    OR              reduce using rule 51 (expresion -> MENOS expresion .)
    PUNTO           reduce using rule 51 (expresion -> MENOS expresion .)
    AS              reduce using rule 51 (expresion -> MENOS expresion .)
    LLAVEIZQ        reduce using rule 51 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 51 (expresion -> MENOS expresion .)
    PDER            reduce using rule 51 (expresion -> MENOS expresion .)
    COMA            reduce using rule 51 (expresion -> MENOS expresion .)
    LLAVEDER        reduce using rule 51 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 106 ]
  ! MENOS           [ shift and go to state 107 ]
  ! MULTIPLICACION  [ shift and go to state 108 ]
  ! DIVISION        [ shift and go to state 109 ]
  ! MODULO          [ shift and go to state 110 ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALIGUAL      [ shift and go to state 115 ]
  ! DIFERENTE       [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]
  ! OR              [ shift and go to state 118 ]
  ! PUNTO           [ shift and go to state 119 ]
  ! AS              [ shift and go to state 120 ]


state 122

    (57) expresion -> I64 DOBLEPT . DOBLEPT POW PIZQ expresion COMA expresion PDER

    DOBLEPT         shift and go to state 157


state 123

    (59) expresion -> PIZQ expresion . PDER
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    PDER            shift and go to state 158
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120


state 124

    (58) expresion -> F64 DOBLEPT . DOBLEPT POWF PIZQ expresion COMA expresion PDER

    DOBLEPT         shift and go to state 159


state 125

    (68) expresion -> NOT expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    MAS             reduce using rule 68 (expresion -> NOT expresion .)
    MENOS           reduce using rule 68 (expresion -> NOT expresion .)
    MULTIPLICACION  reduce using rule 68 (expresion -> NOT expresion .)
    DIVISION        reduce using rule 68 (expresion -> NOT expresion .)
    MODULO          reduce using rule 68 (expresion -> NOT expresion .)
    MAYOR           reduce using rule 68 (expresion -> NOT expresion .)
    MENOR           reduce using rule 68 (expresion -> NOT expresion .)
    MAYORIGUAL      reduce using rule 68 (expresion -> NOT expresion .)
    MENORIGUAL      reduce using rule 68 (expresion -> NOT expresion .)
    IGUALIGUAL      reduce using rule 68 (expresion -> NOT expresion .)
    DIFERENTE       reduce using rule 68 (expresion -> NOT expresion .)
    AND             reduce using rule 68 (expresion -> NOT expresion .)
    OR              reduce using rule 68 (expresion -> NOT expresion .)
    PUNTO           reduce using rule 68 (expresion -> NOT expresion .)
    AS              reduce using rule 68 (expresion -> NOT expresion .)
    LLAVEIZQ        reduce using rule 68 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 68 (expresion -> NOT expresion .)
    PDER            reduce using rule 68 (expresion -> NOT expresion .)
    COMA            reduce using rule 68 (expresion -> NOT expresion .)
    LLAVEDER        reduce using rule 68 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 106 ]
  ! MENOS           [ shift and go to state 107 ]
  ! MULTIPLICACION  [ shift and go to state 108 ]
  ! DIVISION        [ shift and go to state 109 ]
  ! MODULO          [ shift and go to state 110 ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALIGUAL      [ shift and go to state 115 ]
  ! DIFERENTE       [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]
  ! OR              [ shift and go to state 118 ]
  ! PUNTO           [ shift and go to state 119 ]
  ! AS              [ shift and go to state 120 ]


state 126

    (47) while -> WHILE expresion bloque .

    LLAVEDER        reduce using rule 47 (while -> WHILE expresion bloque .)
    PRINTLN         reduce using rule 47 (while -> WHILE expresion bloque .)
    LET             reduce using rule 47 (while -> WHILE expresion bloque .)
    ID              reduce using rule 47 (while -> WHILE expresion bloque .)
    IF              reduce using rule 47 (while -> WHILE expresion bloque .)
    RETURN          reduce using rule 47 (while -> WHILE expresion bloque .)
    LOOP            reduce using rule 47 (while -> WHILE expresion bloque .)
    BREAK           reduce using rule 47 (while -> WHILE expresion bloque .)
    WHILE           reduce using rule 47 (while -> WHILE expresion bloque .)
    CONTINUE        reduce using rule 47 (while -> WHILE expresion bloque .)
    FOR             reduce using rule 47 (while -> WHILE expresion bloque .)


state 127

    (49) for -> FOR ID IN . expresion PUNTO PUNTO expresion bloque
    (50) for -> FOR ID IN . expresion PUNTO CHARS PIZQ PDER bloque
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 160
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 128

    (8) funcion -> FN ID PIZQ parametros PDER FLECHA tipo_dato bloque .

    FN              reduce using rule 8 (funcion -> FN ID PIZQ parametros PDER FLECHA tipo_dato bloque .)
    $end            reduce using rule 8 (funcion -> FN ID PIZQ parametros PDER FLECHA tipo_dato bloque .)


state 129

    (31) print -> PRINTLN NOT PIZQ lista_expresiones . PDER
    (14) lista_expresiones -> lista_expresiones . COMA expresion

    PDER            shift and go to state 161
    COMA            shift and go to state 135


state 130

    (34) declaracion -> LET MUT ID DOBLEPT . tipo_dato IGUAL expresion
    (92) tipo_dato -> . I64
    (93) tipo_dato -> . F64
    (94) tipo_dato -> . BOOL
    (95) tipo_dato -> . CHAR
    (96) tipo_dato -> . str
    (97) tipo_dato -> . STRING
    (98) str -> . Y STR

    I64             shift and go to state 20
    F64             shift and go to state 21
    BOOL            shift and go to state 22
    CHAR            shift and go to state 23
    STRING          shift and go to state 25
    Y               shift and go to state 26

    tipo_dato                      shift and go to state 162
    str                            shift and go to state 24

state 131

    (36) declaracion -> LET MUT ID IGUAL . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 163
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 132

    (35) declaracion -> LET ID DOBLEPT tipo_dato . IGUAL expresion

    IGUAL           shift and go to state 164


state 133

    (37) declaracion -> LET ID IGUAL expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    PTCOMA          reduce using rule 37 (declaracion -> LET ID IGUAL expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120


state 134

    (13) llamadaF -> ID PIZQ lista_expresiones PDER .

    PTCOMA          reduce using rule 13 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MAS             reduce using rule 13 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MENOS           reduce using rule 13 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MULTIPLICACION  reduce using rule 13 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    DIVISION        reduce using rule 13 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MODULO          reduce using rule 13 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MAYOR           reduce using rule 13 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MENOR           reduce using rule 13 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MAYORIGUAL      reduce using rule 13 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    MENORIGUAL      reduce using rule 13 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    IGUALIGUAL      reduce using rule 13 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    DIFERENTE       reduce using rule 13 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    AND             reduce using rule 13 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    OR              reduce using rule 13 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    PUNTO           reduce using rule 13 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    AS              reduce using rule 13 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    LLAVEIZQ        reduce using rule 13 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    PDER            reduce using rule 13 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    COMA            reduce using rule 13 (llamadaF -> ID PIZQ lista_expresiones PDER .)
    LLAVEDER        reduce using rule 13 (llamadaF -> ID PIZQ lista_expresiones PDER .)


state 135

    (14) lista_expresiones -> lista_expresiones COMA . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 165
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 136

    (78) if_e -> IF expresion LLAVEIZQ . expresion LLAVEDER
    (79) if_e -> IF expresion LLAVEIZQ . expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> IF expresion LLAVEIZQ . expresion LLAVEDER listaelse
    (81) if_e -> IF expresion LLAVEIZQ . expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 166
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 137

    (39) if_i -> IF expresion bloque else .

    LLAVEDER        reduce using rule 39 (if_i -> IF expresion bloque else .)
    PRINTLN         reduce using rule 39 (if_i -> IF expresion bloque else .)
    LET             reduce using rule 39 (if_i -> IF expresion bloque else .)
    ID              reduce using rule 39 (if_i -> IF expresion bloque else .)
    IF              reduce using rule 39 (if_i -> IF expresion bloque else .)
    RETURN          reduce using rule 39 (if_i -> IF expresion bloque else .)
    LOOP            reduce using rule 39 (if_i -> IF expresion bloque else .)
    BREAK           reduce using rule 39 (if_i -> IF expresion bloque else .)
    WHILE           reduce using rule 39 (if_i -> IF expresion bloque else .)
    CONTINUE        reduce using rule 39 (if_i -> IF expresion bloque else .)
    FOR             reduce using rule 39 (if_i -> IF expresion bloque else .)


state 138

    (40) else -> ELSE . if_i
    (41) else -> ELSE . bloque
    (39) if_i -> . IF expresion bloque else
    (16) bloque -> . LLAVEIZQ LLAVEDER
    (17) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    IF              shift and go to state 45
    LLAVEIZQ        shift and go to state 16

    if_i                           shift and go to state 167
    bloque                         shift and go to state 168

state 139

    (42) else -> empty .

    LLAVEDER        reduce using rule 42 (else -> empty .)
    PRINTLN         reduce using rule 42 (else -> empty .)
    LET             reduce using rule 42 (else -> empty .)
    ID              reduce using rule 42 (else -> empty .)
    IF              reduce using rule 42 (else -> empty .)
    RETURN          reduce using rule 42 (else -> empty .)
    LOOP            reduce using rule 42 (else -> empty .)
    BREAK           reduce using rule 42 (else -> empty .)
    WHILE           reduce using rule 42 (else -> empty .)
    CONTINUE        reduce using rule 42 (else -> empty .)
    FOR             reduce using rule 42 (else -> empty .)


state 140

    (52) expresion -> expresion MAS expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    MAS             reduce using rule 52 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 52 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 52 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 52 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 52 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 52 (expresion -> expresion MAS expresion .)
    IGUALIGUAL      reduce using rule 52 (expresion -> expresion MAS expresion .)
    DIFERENTE       reduce using rule 52 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 52 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 52 (expresion -> expresion MAS expresion .)
    PUNTO           reduce using rule 52 (expresion -> expresion MAS expresion .)
    AS              reduce using rule 52 (expresion -> expresion MAS expresion .)
    LLAVEIZQ        reduce using rule 52 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 52 (expresion -> expresion MAS expresion .)
    PDER            reduce using rule 52 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 52 (expresion -> expresion MAS expresion .)
    LLAVEDER        reduce using rule 52 (expresion -> expresion MAS expresion .)
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110

  ! MULTIPLICACION  [ reduce using rule 52 (expresion -> expresion MAS expresion .) ]
  ! DIVISION        [ reduce using rule 52 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 52 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 106 ]
  ! MENOS           [ shift and go to state 107 ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALIGUAL      [ shift and go to state 115 ]
  ! DIFERENTE       [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]
  ! OR              [ shift and go to state 118 ]
  ! PUNTO           [ shift and go to state 119 ]
  ! AS              [ shift and go to state 120 ]


state 141

    (53) expresion -> expresion MENOS expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    MAS             reduce using rule 53 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 53 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 53 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 53 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 53 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 53 (expresion -> expresion MENOS expresion .)
    IGUALIGUAL      reduce using rule 53 (expresion -> expresion MENOS expresion .)
    DIFERENTE       reduce using rule 53 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 53 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 53 (expresion -> expresion MENOS expresion .)
    PUNTO           reduce using rule 53 (expresion -> expresion MENOS expresion .)
    AS              reduce using rule 53 (expresion -> expresion MENOS expresion .)
    LLAVEIZQ        reduce using rule 53 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 53 (expresion -> expresion MENOS expresion .)
    PDER            reduce using rule 53 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 53 (expresion -> expresion MENOS expresion .)
    LLAVEDER        reduce using rule 53 (expresion -> expresion MENOS expresion .)
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110

  ! MULTIPLICACION  [ reduce using rule 53 (expresion -> expresion MENOS expresion .) ]
  ! DIVISION        [ reduce using rule 53 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 53 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 106 ]
  ! MENOS           [ shift and go to state 107 ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALIGUAL      [ shift and go to state 115 ]
  ! DIFERENTE       [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]
  ! OR              [ shift and go to state 118 ]
  ! PUNTO           [ shift and go to state 119 ]
  ! AS              [ shift and go to state 120 ]


state 142

    (54) expresion -> expresion MULTIPLICACION expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    MAS             reduce using rule 54 (expresion -> expresion MULTIPLICACION expresion .)
    MENOS           reduce using rule 54 (expresion -> expresion MULTIPLICACION expresion .)
    MULTIPLICACION  reduce using rule 54 (expresion -> expresion MULTIPLICACION expresion .)
    DIVISION        reduce using rule 54 (expresion -> expresion MULTIPLICACION expresion .)
    MODULO          reduce using rule 54 (expresion -> expresion MULTIPLICACION expresion .)
    MAYOR           reduce using rule 54 (expresion -> expresion MULTIPLICACION expresion .)
    MENOR           reduce using rule 54 (expresion -> expresion MULTIPLICACION expresion .)
    MAYORIGUAL      reduce using rule 54 (expresion -> expresion MULTIPLICACION expresion .)
    MENORIGUAL      reduce using rule 54 (expresion -> expresion MULTIPLICACION expresion .)
    IGUALIGUAL      reduce using rule 54 (expresion -> expresion MULTIPLICACION expresion .)
    DIFERENTE       reduce using rule 54 (expresion -> expresion MULTIPLICACION expresion .)
    AND             reduce using rule 54 (expresion -> expresion MULTIPLICACION expresion .)
    OR              reduce using rule 54 (expresion -> expresion MULTIPLICACION expresion .)
    PUNTO           reduce using rule 54 (expresion -> expresion MULTIPLICACION expresion .)
    AS              reduce using rule 54 (expresion -> expresion MULTIPLICACION expresion .)
    LLAVEIZQ        reduce using rule 54 (expresion -> expresion MULTIPLICACION expresion .)
    PTCOMA          reduce using rule 54 (expresion -> expresion MULTIPLICACION expresion .)
    PDER            reduce using rule 54 (expresion -> expresion MULTIPLICACION expresion .)
    COMA            reduce using rule 54 (expresion -> expresion MULTIPLICACION expresion .)
    LLAVEDER        reduce using rule 54 (expresion -> expresion MULTIPLICACION expresion .)

  ! MAS             [ shift and go to state 106 ]
  ! MENOS           [ shift and go to state 107 ]
  ! MULTIPLICACION  [ shift and go to state 108 ]
  ! DIVISION        [ shift and go to state 109 ]
  ! MODULO          [ shift and go to state 110 ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALIGUAL      [ shift and go to state 115 ]
  ! DIFERENTE       [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]
  ! OR              [ shift and go to state 118 ]
  ! PUNTO           [ shift and go to state 119 ]
  ! AS              [ shift and go to state 120 ]


state 143

    (55) expresion -> expresion DIVISION expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    MAS             reduce using rule 55 (expresion -> expresion DIVISION expresion .)
    MENOS           reduce using rule 55 (expresion -> expresion DIVISION expresion .)
    MULTIPLICACION  reduce using rule 55 (expresion -> expresion DIVISION expresion .)
    DIVISION        reduce using rule 55 (expresion -> expresion DIVISION expresion .)
    MODULO          reduce using rule 55 (expresion -> expresion DIVISION expresion .)
    MAYOR           reduce using rule 55 (expresion -> expresion DIVISION expresion .)
    MENOR           reduce using rule 55 (expresion -> expresion DIVISION expresion .)
    MAYORIGUAL      reduce using rule 55 (expresion -> expresion DIVISION expresion .)
    MENORIGUAL      reduce using rule 55 (expresion -> expresion DIVISION expresion .)
    IGUALIGUAL      reduce using rule 55 (expresion -> expresion DIVISION expresion .)
    DIFERENTE       reduce using rule 55 (expresion -> expresion DIVISION expresion .)
    AND             reduce using rule 55 (expresion -> expresion DIVISION expresion .)
    OR              reduce using rule 55 (expresion -> expresion DIVISION expresion .)
    PUNTO           reduce using rule 55 (expresion -> expresion DIVISION expresion .)
    AS              reduce using rule 55 (expresion -> expresion DIVISION expresion .)
    LLAVEIZQ        reduce using rule 55 (expresion -> expresion DIVISION expresion .)
    PTCOMA          reduce using rule 55 (expresion -> expresion DIVISION expresion .)
    PDER            reduce using rule 55 (expresion -> expresion DIVISION expresion .)
    COMA            reduce using rule 55 (expresion -> expresion DIVISION expresion .)
    LLAVEDER        reduce using rule 55 (expresion -> expresion DIVISION expresion .)

  ! MAS             [ shift and go to state 106 ]
  ! MENOS           [ shift and go to state 107 ]
  ! MULTIPLICACION  [ shift and go to state 108 ]
  ! DIVISION        [ shift and go to state 109 ]
  ! MODULO          [ shift and go to state 110 ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALIGUAL      [ shift and go to state 115 ]
  ! DIFERENTE       [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]
  ! OR              [ shift and go to state 118 ]
  ! PUNTO           [ shift and go to state 119 ]
  ! AS              [ shift and go to state 120 ]


state 144

    (56) expresion -> expresion MODULO expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    MAS             reduce using rule 56 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 56 (expresion -> expresion MODULO expresion .)
    MULTIPLICACION  reduce using rule 56 (expresion -> expresion MODULO expresion .)
    DIVISION        reduce using rule 56 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 56 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 56 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 56 (expresion -> expresion MODULO expresion .)
    MAYORIGUAL      reduce using rule 56 (expresion -> expresion MODULO expresion .)
    MENORIGUAL      reduce using rule 56 (expresion -> expresion MODULO expresion .)
    IGUALIGUAL      reduce using rule 56 (expresion -> expresion MODULO expresion .)
    DIFERENTE       reduce using rule 56 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 56 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 56 (expresion -> expresion MODULO expresion .)
    PUNTO           reduce using rule 56 (expresion -> expresion MODULO expresion .)
    AS              reduce using rule 56 (expresion -> expresion MODULO expresion .)
    LLAVEIZQ        reduce using rule 56 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 56 (expresion -> expresion MODULO expresion .)
    PDER            reduce using rule 56 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 56 (expresion -> expresion MODULO expresion .)
    LLAVEDER        reduce using rule 56 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 106 ]
  ! MENOS           [ shift and go to state 107 ]
  ! MULTIPLICACION  [ shift and go to state 108 ]
  ! DIVISION        [ shift and go to state 109 ]
  ! MODULO          [ shift and go to state 110 ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALIGUAL      [ shift and go to state 115 ]
  ! DIFERENTE       [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]
  ! OR              [ shift and go to state 118 ]
  ! PUNTO           [ shift and go to state 119 ]
  ! AS              [ shift and go to state 120 ]


state 145

    (60) expresion -> expresion MAYOR expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    MAYOR           reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    MAYORIGUAL      reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    MENORIGUAL      reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    IGUALIGUAL      reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    DIFERENTE       reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    PUNTO           reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    AS              reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    LLAVEIZQ        reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    PTCOMA          reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    PDER            reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    LLAVEDER        reduce using rule 60 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110

  ! MAS             [ reduce using rule 60 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 60 (expresion -> expresion MAYOR expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 60 (expresion -> expresion MAYOR expresion .) ]
  ! DIVISION        [ reduce using rule 60 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 60 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALIGUAL      [ shift and go to state 115 ]
  ! DIFERENTE       [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]
  ! OR              [ shift and go to state 118 ]
  ! PUNTO           [ shift and go to state 119 ]
  ! AS              [ shift and go to state 120 ]


state 146

    (61) expresion -> expresion MENOR expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    MAYOR           reduce using rule 61 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 61 (expresion -> expresion MENOR expresion .)
    MAYORIGUAL      reduce using rule 61 (expresion -> expresion MENOR expresion .)
    MENORIGUAL      reduce using rule 61 (expresion -> expresion MENOR expresion .)
    IGUALIGUAL      reduce using rule 61 (expresion -> expresion MENOR expresion .)
    DIFERENTE       reduce using rule 61 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 61 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 61 (expresion -> expresion MENOR expresion .)
    PUNTO           reduce using rule 61 (expresion -> expresion MENOR expresion .)
    AS              reduce using rule 61 (expresion -> expresion MENOR expresion .)
    LLAVEIZQ        reduce using rule 61 (expresion -> expresion MENOR expresion .)
    PTCOMA          reduce using rule 61 (expresion -> expresion MENOR expresion .)
    PDER            reduce using rule 61 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 61 (expresion -> expresion MENOR expresion .)
    LLAVEDER        reduce using rule 61 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110

  ! MAS             [ reduce using rule 61 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 61 (expresion -> expresion MENOR expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 61 (expresion -> expresion MENOR expresion .) ]
  ! DIVISION        [ reduce using rule 61 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 61 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALIGUAL      [ shift and go to state 115 ]
  ! DIFERENTE       [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]
  ! OR              [ shift and go to state 118 ]
  ! PUNTO           [ shift and go to state 119 ]
  ! AS              [ shift and go to state 120 ]


state 147

    (62) expresion -> expresion MAYORIGUAL expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    MAYOR           reduce using rule 62 (expresion -> expresion MAYORIGUAL expresion .)
    MENOR           reduce using rule 62 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 62 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 62 (expresion -> expresion MAYORIGUAL expresion .)
    IGUALIGUAL      reduce using rule 62 (expresion -> expresion MAYORIGUAL expresion .)
    DIFERENTE       reduce using rule 62 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 62 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 62 (expresion -> expresion MAYORIGUAL expresion .)
    PUNTO           reduce using rule 62 (expresion -> expresion MAYORIGUAL expresion .)
    AS              reduce using rule 62 (expresion -> expresion MAYORIGUAL expresion .)
    LLAVEIZQ        reduce using rule 62 (expresion -> expresion MAYORIGUAL expresion .)
    PTCOMA          reduce using rule 62 (expresion -> expresion MAYORIGUAL expresion .)
    PDER            reduce using rule 62 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 62 (expresion -> expresion MAYORIGUAL expresion .)
    LLAVEDER        reduce using rule 62 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110

  ! MAS             [ reduce using rule 62 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 62 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 62 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIVISION        [ reduce using rule 62 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 62 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALIGUAL      [ shift and go to state 115 ]
  ! DIFERENTE       [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]
  ! OR              [ shift and go to state 118 ]
  ! PUNTO           [ shift and go to state 119 ]
  ! AS              [ shift and go to state 120 ]


state 148

    (63) expresion -> expresion MENORIGUAL expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    MAYOR           reduce using rule 63 (expresion -> expresion MENORIGUAL expresion .)
    MENOR           reduce using rule 63 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 63 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 63 (expresion -> expresion MENORIGUAL expresion .)
    IGUALIGUAL      reduce using rule 63 (expresion -> expresion MENORIGUAL expresion .)
    DIFERENTE       reduce using rule 63 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 63 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 63 (expresion -> expresion MENORIGUAL expresion .)
    PUNTO           reduce using rule 63 (expresion -> expresion MENORIGUAL expresion .)
    AS              reduce using rule 63 (expresion -> expresion MENORIGUAL expresion .)
    LLAVEIZQ        reduce using rule 63 (expresion -> expresion MENORIGUAL expresion .)
    PTCOMA          reduce using rule 63 (expresion -> expresion MENORIGUAL expresion .)
    PDER            reduce using rule 63 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 63 (expresion -> expresion MENORIGUAL expresion .)
    LLAVEDER        reduce using rule 63 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110

  ! MAS             [ reduce using rule 63 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 63 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 63 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIVISION        [ reduce using rule 63 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 63 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALIGUAL      [ shift and go to state 115 ]
  ! DIFERENTE       [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]
  ! OR              [ shift and go to state 118 ]
  ! PUNTO           [ shift and go to state 119 ]
  ! AS              [ shift and go to state 120 ]


state 149

    (64) expresion -> expresion IGUALIGUAL expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    MAYOR           reduce using rule 64 (expresion -> expresion IGUALIGUAL expresion .)
    MENOR           reduce using rule 64 (expresion -> expresion IGUALIGUAL expresion .)
    MAYORIGUAL      reduce using rule 64 (expresion -> expresion IGUALIGUAL expresion .)
    MENORIGUAL      reduce using rule 64 (expresion -> expresion IGUALIGUAL expresion .)
    IGUALIGUAL      reduce using rule 64 (expresion -> expresion IGUALIGUAL expresion .)
    DIFERENTE       reduce using rule 64 (expresion -> expresion IGUALIGUAL expresion .)
    AND             reduce using rule 64 (expresion -> expresion IGUALIGUAL expresion .)
    OR              reduce using rule 64 (expresion -> expresion IGUALIGUAL expresion .)
    PUNTO           reduce using rule 64 (expresion -> expresion IGUALIGUAL expresion .)
    AS              reduce using rule 64 (expresion -> expresion IGUALIGUAL expresion .)
    LLAVEIZQ        reduce using rule 64 (expresion -> expresion IGUALIGUAL expresion .)
    PTCOMA          reduce using rule 64 (expresion -> expresion IGUALIGUAL expresion .)
    PDER            reduce using rule 64 (expresion -> expresion IGUALIGUAL expresion .)
    COMA            reduce using rule 64 (expresion -> expresion IGUALIGUAL expresion .)
    LLAVEDER        reduce using rule 64 (expresion -> expresion IGUALIGUAL expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110

  ! MAS             [ reduce using rule 64 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 64 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 64 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! DIVISION        [ reduce using rule 64 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 64 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALIGUAL      [ shift and go to state 115 ]
  ! DIFERENTE       [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]
  ! OR              [ shift and go to state 118 ]
  ! PUNTO           [ shift and go to state 119 ]
  ! AS              [ shift and go to state 120 ]


state 150

    (65) expresion -> expresion DIFERENTE expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    MAYOR           reduce using rule 65 (expresion -> expresion DIFERENTE expresion .)
    MENOR           reduce using rule 65 (expresion -> expresion DIFERENTE expresion .)
    MAYORIGUAL      reduce using rule 65 (expresion -> expresion DIFERENTE expresion .)
    MENORIGUAL      reduce using rule 65 (expresion -> expresion DIFERENTE expresion .)
    IGUALIGUAL      reduce using rule 65 (expresion -> expresion DIFERENTE expresion .)
    DIFERENTE       reduce using rule 65 (expresion -> expresion DIFERENTE expresion .)
    AND             reduce using rule 65 (expresion -> expresion DIFERENTE expresion .)
    OR              reduce using rule 65 (expresion -> expresion DIFERENTE expresion .)
    PUNTO           reduce using rule 65 (expresion -> expresion DIFERENTE expresion .)
    AS              reduce using rule 65 (expresion -> expresion DIFERENTE expresion .)
    LLAVEIZQ        reduce using rule 65 (expresion -> expresion DIFERENTE expresion .)
    PTCOMA          reduce using rule 65 (expresion -> expresion DIFERENTE expresion .)
    PDER            reduce using rule 65 (expresion -> expresion DIFERENTE expresion .)
    COMA            reduce using rule 65 (expresion -> expresion DIFERENTE expresion .)
    LLAVEDER        reduce using rule 65 (expresion -> expresion DIFERENTE expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110

  ! MAS             [ reduce using rule 65 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENOS           [ reduce using rule 65 (expresion -> expresion DIFERENTE expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 65 (expresion -> expresion DIFERENTE expresion .) ]
  ! DIVISION        [ reduce using rule 65 (expresion -> expresion DIFERENTE expresion .) ]
  ! MODULO          [ reduce using rule 65 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAYOR           [ shift and go to state 111 ]
  ! MENOR           [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]
  ! MENORIGUAL      [ shift and go to state 114 ]
  ! IGUALIGUAL      [ shift and go to state 115 ]
  ! DIFERENTE       [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]
  ! OR              [ shift and go to state 118 ]
  ! PUNTO           [ shift and go to state 119 ]
  ! AS              [ shift and go to state 120 ]


state 151

    (66) expresion -> expresion AND expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    AND             reduce using rule 66 (expresion -> expresion AND expresion .)
    OR              reduce using rule 66 (expresion -> expresion AND expresion .)
    PUNTO           reduce using rule 66 (expresion -> expresion AND expresion .)
    AS              reduce using rule 66 (expresion -> expresion AND expresion .)
    LLAVEIZQ        reduce using rule 66 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 66 (expresion -> expresion AND expresion .)
    PDER            reduce using rule 66 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 66 (expresion -> expresion AND expresion .)
    LLAVEDER        reduce using rule 66 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116

  ! MAS             [ reduce using rule 66 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 66 (expresion -> expresion AND expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 66 (expresion -> expresion AND expresion .) ]
  ! DIVISION        [ reduce using rule 66 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 66 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 66 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 66 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 66 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 66 (expresion -> expresion AND expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 66 (expresion -> expresion AND expresion .) ]
  ! DIFERENTE       [ reduce using rule 66 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 117 ]
  ! OR              [ shift and go to state 118 ]
  ! PUNTO           [ shift and go to state 119 ]
  ! AS              [ shift and go to state 120 ]


state 152

    (67) expresion -> expresion OR expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    OR              reduce using rule 67 (expresion -> expresion OR expresion .)
    PUNTO           reduce using rule 67 (expresion -> expresion OR expresion .)
    AS              reduce using rule 67 (expresion -> expresion OR expresion .)
    LLAVEIZQ        reduce using rule 67 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 67 (expresion -> expresion OR expresion .)
    PDER            reduce using rule 67 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 67 (expresion -> expresion OR expresion .)
    LLAVEDER        reduce using rule 67 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117

  ! MAS             [ reduce using rule 67 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 67 (expresion -> expresion OR expresion .) ]
  ! MULTIPLICACION  [ reduce using rule 67 (expresion -> expresion OR expresion .) ]
  ! DIVISION        [ reduce using rule 67 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 67 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 67 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 67 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 67 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 67 (expresion -> expresion OR expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 67 (expresion -> expresion OR expresion .) ]
  ! DIFERENTE       [ reduce using rule 67 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 67 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 118 ]
  ! PUNTO           [ shift and go to state 119 ]
  ! AS              [ shift and go to state 120 ]


state 153

    (74) tostring -> expresion PUNTO TOSTRING . PIZQ PDER

    PIZQ            shift and go to state 169


state 154

    (75) tostring -> expresion PUNTO TOOWNED . PIZQ PDER

    PIZQ            shift and go to state 170


state 155

    (76) as -> expresion AS I64 .

    MAS             reduce using rule 76 (as -> expresion AS I64 .)
    MENOS           reduce using rule 76 (as -> expresion AS I64 .)
    MULTIPLICACION  reduce using rule 76 (as -> expresion AS I64 .)
    DIVISION        reduce using rule 76 (as -> expresion AS I64 .)
    MODULO          reduce using rule 76 (as -> expresion AS I64 .)
    MAYOR           reduce using rule 76 (as -> expresion AS I64 .)
    MENOR           reduce using rule 76 (as -> expresion AS I64 .)
    MAYORIGUAL      reduce using rule 76 (as -> expresion AS I64 .)
    MENORIGUAL      reduce using rule 76 (as -> expresion AS I64 .)
    IGUALIGUAL      reduce using rule 76 (as -> expresion AS I64 .)
    DIFERENTE       reduce using rule 76 (as -> expresion AS I64 .)
    AND             reduce using rule 76 (as -> expresion AS I64 .)
    OR              reduce using rule 76 (as -> expresion AS I64 .)
    PUNTO           reduce using rule 76 (as -> expresion AS I64 .)
    AS              reduce using rule 76 (as -> expresion AS I64 .)
    LLAVEIZQ        reduce using rule 76 (as -> expresion AS I64 .)
    PTCOMA          reduce using rule 76 (as -> expresion AS I64 .)
    PDER            reduce using rule 76 (as -> expresion AS I64 .)
    COMA            reduce using rule 76 (as -> expresion AS I64 .)
    LLAVEDER        reduce using rule 76 (as -> expresion AS I64 .)


state 156

    (77) as -> expresion AS F64 .

    MAS             reduce using rule 77 (as -> expresion AS F64 .)
    MENOS           reduce using rule 77 (as -> expresion AS F64 .)
    MULTIPLICACION  reduce using rule 77 (as -> expresion AS F64 .)
    DIVISION        reduce using rule 77 (as -> expresion AS F64 .)
    MODULO          reduce using rule 77 (as -> expresion AS F64 .)
    MAYOR           reduce using rule 77 (as -> expresion AS F64 .)
    MENOR           reduce using rule 77 (as -> expresion AS F64 .)
    MAYORIGUAL      reduce using rule 77 (as -> expresion AS F64 .)
    MENORIGUAL      reduce using rule 77 (as -> expresion AS F64 .)
    IGUALIGUAL      reduce using rule 77 (as -> expresion AS F64 .)
    DIFERENTE       reduce using rule 77 (as -> expresion AS F64 .)
    AND             reduce using rule 77 (as -> expresion AS F64 .)
    OR              reduce using rule 77 (as -> expresion AS F64 .)
    PUNTO           reduce using rule 77 (as -> expresion AS F64 .)
    AS              reduce using rule 77 (as -> expresion AS F64 .)
    LLAVEIZQ        reduce using rule 77 (as -> expresion AS F64 .)
    PTCOMA          reduce using rule 77 (as -> expresion AS F64 .)
    PDER            reduce using rule 77 (as -> expresion AS F64 .)
    COMA            reduce using rule 77 (as -> expresion AS F64 .)
    LLAVEDER        reduce using rule 77 (as -> expresion AS F64 .)


state 157

    (57) expresion -> I64 DOBLEPT DOBLEPT . POW PIZQ expresion COMA expresion PDER

    POW             shift and go to state 171


state 158

    (59) expresion -> PIZQ expresion PDER .

    MAS             reduce using rule 59 (expresion -> PIZQ expresion PDER .)
    MENOS           reduce using rule 59 (expresion -> PIZQ expresion PDER .)
    MULTIPLICACION  reduce using rule 59 (expresion -> PIZQ expresion PDER .)
    DIVISION        reduce using rule 59 (expresion -> PIZQ expresion PDER .)
    MODULO          reduce using rule 59 (expresion -> PIZQ expresion PDER .)
    MAYOR           reduce using rule 59 (expresion -> PIZQ expresion PDER .)
    MENOR           reduce using rule 59 (expresion -> PIZQ expresion PDER .)
    MAYORIGUAL      reduce using rule 59 (expresion -> PIZQ expresion PDER .)
    MENORIGUAL      reduce using rule 59 (expresion -> PIZQ expresion PDER .)
    IGUALIGUAL      reduce using rule 59 (expresion -> PIZQ expresion PDER .)
    DIFERENTE       reduce using rule 59 (expresion -> PIZQ expresion PDER .)
    AND             reduce using rule 59 (expresion -> PIZQ expresion PDER .)
    OR              reduce using rule 59 (expresion -> PIZQ expresion PDER .)
    PUNTO           reduce using rule 59 (expresion -> PIZQ expresion PDER .)
    AS              reduce using rule 59 (expresion -> PIZQ expresion PDER .)
    LLAVEIZQ        reduce using rule 59 (expresion -> PIZQ expresion PDER .)
    PTCOMA          reduce using rule 59 (expresion -> PIZQ expresion PDER .)
    PDER            reduce using rule 59 (expresion -> PIZQ expresion PDER .)
    COMA            reduce using rule 59 (expresion -> PIZQ expresion PDER .)
    LLAVEDER        reduce using rule 59 (expresion -> PIZQ expresion PDER .)


state 159

    (58) expresion -> F64 DOBLEPT DOBLEPT . POWF PIZQ expresion COMA expresion PDER

    POWF            shift and go to state 172


state 160

    (49) for -> FOR ID IN expresion . PUNTO PUNTO expresion bloque
    (50) for -> FOR ID IN expresion . PUNTO CHARS PIZQ PDER bloque
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    PUNTO           shift and go to state 173
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    AS              shift and go to state 120


state 161

    (31) print -> PRINTLN NOT PIZQ lista_expresiones PDER .

    PTCOMA          reduce using rule 31 (print -> PRINTLN NOT PIZQ lista_expresiones PDER .)


state 162

    (34) declaracion -> LET MUT ID DOBLEPT tipo_dato . IGUAL expresion

    IGUAL           shift and go to state 174


state 163

    (36) declaracion -> LET MUT ID IGUAL expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    PTCOMA          reduce using rule 36 (declaracion -> LET MUT ID IGUAL expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120


state 164

    (35) declaracion -> LET ID DOBLEPT tipo_dato IGUAL . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 175
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 165

    (14) lista_expresiones -> lista_expresiones COMA expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    PDER            reduce using rule 14 (lista_expresiones -> lista_expresiones COMA expresion .)
    COMA            reduce using rule 14 (lista_expresiones -> lista_expresiones COMA expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120


state 166

    (78) if_e -> IF expresion LLAVEIZQ expresion . LLAVEDER
    (79) if_e -> IF expresion LLAVEIZQ expresion . LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> IF expresion LLAVEIZQ expresion . LLAVEDER listaelse
    (81) if_e -> IF expresion LLAVEIZQ expresion . LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    LLAVEDER        shift and go to state 176
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120


state 167

    (40) else -> ELSE if_i .

    LLAVEDER        reduce using rule 40 (else -> ELSE if_i .)
    PRINTLN         reduce using rule 40 (else -> ELSE if_i .)
    LET             reduce using rule 40 (else -> ELSE if_i .)
    ID              reduce using rule 40 (else -> ELSE if_i .)
    IF              reduce using rule 40 (else -> ELSE if_i .)
    RETURN          reduce using rule 40 (else -> ELSE if_i .)
    LOOP            reduce using rule 40 (else -> ELSE if_i .)
    BREAK           reduce using rule 40 (else -> ELSE if_i .)
    WHILE           reduce using rule 40 (else -> ELSE if_i .)
    CONTINUE        reduce using rule 40 (else -> ELSE if_i .)
    FOR             reduce using rule 40 (else -> ELSE if_i .)


state 168

    (41) else -> ELSE bloque .

    LLAVEDER        reduce using rule 41 (else -> ELSE bloque .)
    PRINTLN         reduce using rule 41 (else -> ELSE bloque .)
    LET             reduce using rule 41 (else -> ELSE bloque .)
    ID              reduce using rule 41 (else -> ELSE bloque .)
    IF              reduce using rule 41 (else -> ELSE bloque .)
    RETURN          reduce using rule 41 (else -> ELSE bloque .)
    LOOP            reduce using rule 41 (else -> ELSE bloque .)
    BREAK           reduce using rule 41 (else -> ELSE bloque .)
    WHILE           reduce using rule 41 (else -> ELSE bloque .)
    CONTINUE        reduce using rule 41 (else -> ELSE bloque .)
    FOR             reduce using rule 41 (else -> ELSE bloque .)


state 169

    (74) tostring -> expresion PUNTO TOSTRING PIZQ . PDER

    PDER            shift and go to state 177


state 170

    (75) tostring -> expresion PUNTO TOOWNED PIZQ . PDER

    PDER            shift and go to state 178


state 171

    (57) expresion -> I64 DOBLEPT DOBLEPT POW . PIZQ expresion COMA expresion PDER

    PIZQ            shift and go to state 179


state 172

    (58) expresion -> F64 DOBLEPT DOBLEPT POWF . PIZQ expresion COMA expresion PDER

    PIZQ            shift and go to state 180


state 173

    (49) for -> FOR ID IN expresion PUNTO . PUNTO expresion bloque
    (50) for -> FOR ID IN expresion PUNTO . CHARS PIZQ PDER bloque
    (74) tostring -> expresion PUNTO . TOSTRING PIZQ PDER
    (75) tostring -> expresion PUNTO . TOOWNED PIZQ PDER

    PUNTO           shift and go to state 181
    CHARS           shift and go to state 182
    TOSTRING        shift and go to state 153
    TOOWNED         shift and go to state 154


state 174

    (34) declaracion -> LET MUT ID DOBLEPT tipo_dato IGUAL . expresion
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 183
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 175

    (35) declaracion -> LET ID DOBLEPT tipo_dato IGUAL expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    PTCOMA          reduce using rule 35 (declaracion -> LET ID DOBLEPT tipo_dato IGUAL expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120


state 176

    (78) if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .
    (79) if_e -> IF expresion LLAVEIZQ expresion LLAVEDER . ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> IF expresion LLAVEIZQ expresion LLAVEDER . listaelse
    (81) if_e -> IF expresion LLAVEIZQ expresion LLAVEDER . listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (82) listaelse -> . listaelse elseif
    (83) listaelse -> . elseif
    (84) elseif -> . ELSE IF expresion LLAVEIZQ expresion LLAVEDER

    MAS             reduce using rule 78 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    MENOS           reduce using rule 78 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    MULTIPLICACION  reduce using rule 78 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    DIVISION        reduce using rule 78 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    MODULO          reduce using rule 78 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    MAYOR           reduce using rule 78 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    MENOR           reduce using rule 78 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    MAYORIGUAL      reduce using rule 78 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    MENORIGUAL      reduce using rule 78 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    IGUALIGUAL      reduce using rule 78 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    DIFERENTE       reduce using rule 78 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    AND             reduce using rule 78 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    OR              reduce using rule 78 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    PUNTO           reduce using rule 78 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    AS              reduce using rule 78 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 78 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    PTCOMA          reduce using rule 78 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    PDER            reduce using rule 78 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    COMA            reduce using rule 78 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    LLAVEDER        reduce using rule 78 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER .)
    ELSE            shift and go to state 184

    listaelse                      shift and go to state 185
    elseif                         shift and go to state 186

state 177

    (74) tostring -> expresion PUNTO TOSTRING PIZQ PDER .

    MAS             reduce using rule 74 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MENOS           reduce using rule 74 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MULTIPLICACION  reduce using rule 74 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    DIVISION        reduce using rule 74 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MODULO          reduce using rule 74 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MAYOR           reduce using rule 74 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MENOR           reduce using rule 74 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MAYORIGUAL      reduce using rule 74 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    MENORIGUAL      reduce using rule 74 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    IGUALIGUAL      reduce using rule 74 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    DIFERENTE       reduce using rule 74 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    AND             reduce using rule 74 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    OR              reduce using rule 74 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    PUNTO           reduce using rule 74 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    AS              reduce using rule 74 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    LLAVEIZQ        reduce using rule 74 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    PTCOMA          reduce using rule 74 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    PDER            reduce using rule 74 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    COMA            reduce using rule 74 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)
    LLAVEDER        reduce using rule 74 (tostring -> expresion PUNTO TOSTRING PIZQ PDER .)


state 178

    (75) tostring -> expresion PUNTO TOOWNED PIZQ PDER .

    MAS             reduce using rule 75 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MENOS           reduce using rule 75 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MULTIPLICACION  reduce using rule 75 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    DIVISION        reduce using rule 75 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MODULO          reduce using rule 75 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MAYOR           reduce using rule 75 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MENOR           reduce using rule 75 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MAYORIGUAL      reduce using rule 75 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    MENORIGUAL      reduce using rule 75 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    IGUALIGUAL      reduce using rule 75 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    DIFERENTE       reduce using rule 75 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    AND             reduce using rule 75 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    OR              reduce using rule 75 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    PUNTO           reduce using rule 75 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    AS              reduce using rule 75 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    LLAVEIZQ        reduce using rule 75 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    PTCOMA          reduce using rule 75 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    PDER            reduce using rule 75 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    COMA            reduce using rule 75 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)
    LLAVEDER        reduce using rule 75 (tostring -> expresion PUNTO TOOWNED PIZQ PDER .)


state 179

    (57) expresion -> I64 DOBLEPT DOBLEPT POW PIZQ . expresion COMA expresion PDER
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 187
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 180

    (58) expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ . expresion COMA expresion PDER
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 188
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 181

    (49) for -> FOR ID IN expresion PUNTO PUNTO . expresion bloque
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 189
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 182

    (50) for -> FOR ID IN expresion PUNTO CHARS . PIZQ PDER bloque

    PIZQ            shift and go to state 190


state 183

    (34) declaracion -> LET MUT ID DOBLEPT tipo_dato IGUAL expresion .
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    PTCOMA          reduce using rule 34 (declaracion -> LET MUT ID DOBLEPT tipo_dato IGUAL expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120


state 184

    (79) if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE . LLAVEIZQ expresion LLAVEDER
    (84) elseif -> ELSE . IF expresion LLAVEIZQ expresion LLAVEDER

    LLAVEIZQ        shift and go to state 192
    IF              shift and go to state 191


state 185

    (80) if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .
    (81) if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse . ELSE LLAVEIZQ expresion LLAVEDER
    (82) listaelse -> listaelse . elseif
    (84) elseif -> . ELSE IF expresion LLAVEIZQ expresion LLAVEDER

    MAS             reduce using rule 80 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    MENOS           reduce using rule 80 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    MULTIPLICACION  reduce using rule 80 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    DIVISION        reduce using rule 80 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    MODULO          reduce using rule 80 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    MAYOR           reduce using rule 80 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    MENOR           reduce using rule 80 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    MAYORIGUAL      reduce using rule 80 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    MENORIGUAL      reduce using rule 80 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    IGUALIGUAL      reduce using rule 80 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    DIFERENTE       reduce using rule 80 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    AND             reduce using rule 80 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    OR              reduce using rule 80 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    PUNTO           reduce using rule 80 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    AS              reduce using rule 80 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    LLAVEIZQ        reduce using rule 80 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    PTCOMA          reduce using rule 80 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    PDER            reduce using rule 80 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    COMA            reduce using rule 80 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    LLAVEDER        reduce using rule 80 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse .)
    ELSE            shift and go to state 193

    elseif                         shift and go to state 194

state 186

    (83) listaelse -> elseif .

    ELSE            reduce using rule 83 (listaelse -> elseif .)
    MAS             reduce using rule 83 (listaelse -> elseif .)
    MENOS           reduce using rule 83 (listaelse -> elseif .)
    MULTIPLICACION  reduce using rule 83 (listaelse -> elseif .)
    DIVISION        reduce using rule 83 (listaelse -> elseif .)
    MODULO          reduce using rule 83 (listaelse -> elseif .)
    MAYOR           reduce using rule 83 (listaelse -> elseif .)
    MENOR           reduce using rule 83 (listaelse -> elseif .)
    MAYORIGUAL      reduce using rule 83 (listaelse -> elseif .)
    MENORIGUAL      reduce using rule 83 (listaelse -> elseif .)
    IGUALIGUAL      reduce using rule 83 (listaelse -> elseif .)
    DIFERENTE       reduce using rule 83 (listaelse -> elseif .)
    AND             reduce using rule 83 (listaelse -> elseif .)
    OR              reduce using rule 83 (listaelse -> elseif .)
    PUNTO           reduce using rule 83 (listaelse -> elseif .)
    AS              reduce using rule 83 (listaelse -> elseif .)
    LLAVEIZQ        reduce using rule 83 (listaelse -> elseif .)
    PTCOMA          reduce using rule 83 (listaelse -> elseif .)
    PDER            reduce using rule 83 (listaelse -> elseif .)
    COMA            reduce using rule 83 (listaelse -> elseif .)
    LLAVEDER        reduce using rule 83 (listaelse -> elseif .)


state 187

    (57) expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion . COMA expresion PDER
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    COMA            shift and go to state 195
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120


state 188

    (58) expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion . COMA expresion PDER
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    COMA            shift and go to state 196
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120


state 189

    (49) for -> FOR ID IN expresion PUNTO PUNTO expresion . bloque
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64
    (16) bloque -> . LLAVEIZQ LLAVEDER
    (17) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120
    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 197

state 190

    (50) for -> FOR ID IN expresion PUNTO CHARS PIZQ . PDER bloque

    PDER            shift and go to state 198


state 191

    (84) elseif -> ELSE IF . expresion LLAVEIZQ expresion LLAVEDER
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 199
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 192

    (79) if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ . expresion LLAVEDER
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 200
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 193

    (81) if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE . LLAVEIZQ expresion LLAVEDER
    (84) elseif -> ELSE . IF expresion LLAVEIZQ expresion LLAVEDER

    LLAVEIZQ        shift and go to state 201
    IF              shift and go to state 191


state 194

    (82) listaelse -> listaelse elseif .

    ELSE            reduce using rule 82 (listaelse -> listaelse elseif .)
    MAS             reduce using rule 82 (listaelse -> listaelse elseif .)
    MENOS           reduce using rule 82 (listaelse -> listaelse elseif .)
    MULTIPLICACION  reduce using rule 82 (listaelse -> listaelse elseif .)
    DIVISION        reduce using rule 82 (listaelse -> listaelse elseif .)
    MODULO          reduce using rule 82 (listaelse -> listaelse elseif .)
    MAYOR           reduce using rule 82 (listaelse -> listaelse elseif .)
    MENOR           reduce using rule 82 (listaelse -> listaelse elseif .)
    MAYORIGUAL      reduce using rule 82 (listaelse -> listaelse elseif .)
    MENORIGUAL      reduce using rule 82 (listaelse -> listaelse elseif .)
    IGUALIGUAL      reduce using rule 82 (listaelse -> listaelse elseif .)
    DIFERENTE       reduce using rule 82 (listaelse -> listaelse elseif .)
    AND             reduce using rule 82 (listaelse -> listaelse elseif .)
    OR              reduce using rule 82 (listaelse -> listaelse elseif .)
    PUNTO           reduce using rule 82 (listaelse -> listaelse elseif .)
    AS              reduce using rule 82 (listaelse -> listaelse elseif .)
    LLAVEIZQ        reduce using rule 82 (listaelse -> listaelse elseif .)
    PTCOMA          reduce using rule 82 (listaelse -> listaelse elseif .)
    PDER            reduce using rule 82 (listaelse -> listaelse elseif .)
    COMA            reduce using rule 82 (listaelse -> listaelse elseif .)
    LLAVEDER        reduce using rule 82 (listaelse -> listaelse elseif .)


state 195

    (57) expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA . expresion PDER
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 202
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 196

    (58) expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA . expresion PDER
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 203
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 197

    (49) for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .

    LLAVEDER        reduce using rule 49 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    PRINTLN         reduce using rule 49 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    LET             reduce using rule 49 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    ID              reduce using rule 49 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    IF              reduce using rule 49 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    RETURN          reduce using rule 49 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    LOOP            reduce using rule 49 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    BREAK           reduce using rule 49 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    WHILE           reduce using rule 49 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    CONTINUE        reduce using rule 49 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)
    FOR             reduce using rule 49 (for -> FOR ID IN expresion PUNTO PUNTO expresion bloque .)


state 198

    (50) for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER . bloque
    (16) bloque -> . LLAVEIZQ LLAVEDER
    (17) bloque -> . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 16

    bloque                         shift and go to state 204

state 199

    (84) elseif -> ELSE IF expresion . LLAVEIZQ expresion LLAVEDER
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    LLAVEIZQ        shift and go to state 205
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120


state 200

    (79) if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion . LLAVEDER
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    LLAVEDER        shift and go to state 206
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120


state 201

    (81) if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ . expresion LLAVEDER
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 207
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 202

    (57) expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion . PDER
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    PDER            shift and go to state 208
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120


state 203

    (58) expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion . PDER
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    PDER            shift and go to state 209
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120


state 204

    (50) for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .

    LLAVEDER        reduce using rule 50 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    PRINTLN         reduce using rule 50 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    LET             reduce using rule 50 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    ID              reduce using rule 50 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    IF              reduce using rule 50 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    RETURN          reduce using rule 50 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    LOOP            reduce using rule 50 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    BREAK           reduce using rule 50 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    WHILE           reduce using rule 50 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    CONTINUE        reduce using rule 50 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)
    FOR             reduce using rule 50 (for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque .)


state 205

    (84) elseif -> ELSE IF expresion LLAVEIZQ . expresion LLAVEDER
    (51) expresion -> . MENOS expresion
    (52) expresion -> . expresion MAS expresion
    (53) expresion -> . expresion MENOS expresion
    (54) expresion -> . expresion MULTIPLICACION expresion
    (55) expresion -> . expresion DIVISION expresion
    (56) expresion -> . expresion MODULO expresion
    (57) expresion -> . I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER
    (58) expresion -> . F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER
    (59) expresion -> . PIZQ expresion PDER
    (60) expresion -> . expresion MAYOR expresion
    (61) expresion -> . expresion MENOR expresion
    (62) expresion -> . expresion MAYORIGUAL expresion
    (63) expresion -> . expresion MENORIGUAL expresion
    (64) expresion -> . expresion IGUALIGUAL expresion
    (65) expresion -> . expresion DIFERENTE expresion
    (66) expresion -> . expresion AND expresion
    (67) expresion -> . expresion OR expresion
    (68) expresion -> . NOT expresion
    (69) expresion -> . tostring
    (70) expresion -> . as
    (71) expresion -> . if_e
    (72) expresion -> . llamadaF
    (73) expresion -> . loop
    (85) expresion -> . ENTERO
    (86) expresion -> . DECIMAL
    (87) expresion -> . ID
    (88) expresion -> . CARACTER
    (89) expresion -> . CADENA
    (90) expresion -> . TRUE
    (91) expresion -> . FALSE
    (74) tostring -> . expresion PUNTO TOSTRING PIZQ PDER
    (75) tostring -> . expresion PUNTO TOOWNED PIZQ PDER
    (76) as -> . expresion AS I64
    (77) as -> . expresion AS F64
    (78) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER
    (79) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER
    (80) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse
    (81) if_e -> . IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER
    (12) llamadaF -> . ID PIZQ PDER
    (13) llamadaF -> . ID PIZQ lista_expresiones PDER
    (44) loop -> . LOOP bloque

    MENOS           shift and go to state 73
    I64             shift and go to state 74
    F64             shift and go to state 76
    PIZQ            shift and go to state 75
    NOT             shift and go to state 77
    ENTERO          shift and go to state 83
    DECIMAL         shift and go to state 84
    ID              shift and go to state 85
    CARACTER        shift and go to state 86
    CADENA          shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    IF              shift and go to state 71
    LOOP            shift and go to state 47

    expresion                      shift and go to state 210
    tostring                       shift and go to state 78
    as                             shift and go to state 79
    if_e                           shift and go to state 80
    llamadaF                       shift and go to state 81
    loop                           shift and go to state 82

state 206

    (79) if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .

    MAS             reduce using rule 79 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    MENOS           reduce using rule 79 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    MULTIPLICACION  reduce using rule 79 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    DIVISION        reduce using rule 79 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    MODULO          reduce using rule 79 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    MAYOR           reduce using rule 79 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    MENOR           reduce using rule 79 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    MAYORIGUAL      reduce using rule 79 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    MENORIGUAL      reduce using rule 79 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    IGUALIGUAL      reduce using rule 79 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    DIFERENTE       reduce using rule 79 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    AND             reduce using rule 79 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    OR              reduce using rule 79 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    PUNTO           reduce using rule 79 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    AS              reduce using rule 79 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 79 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    PTCOMA          reduce using rule 79 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    PDER            reduce using rule 79 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    COMA            reduce using rule 79 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)
    LLAVEDER        reduce using rule 79 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER .)


state 207

    (81) if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion . LLAVEDER
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    LLAVEDER        shift and go to state 211
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120


state 208

    (57) expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .

    MAS             reduce using rule 57 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MENOS           reduce using rule 57 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MULTIPLICACION  reduce using rule 57 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    DIVISION        reduce using rule 57 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MODULO          reduce using rule 57 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MAYOR           reduce using rule 57 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MENOR           reduce using rule 57 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MAYORIGUAL      reduce using rule 57 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    MENORIGUAL      reduce using rule 57 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    IGUALIGUAL      reduce using rule 57 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    DIFERENTE       reduce using rule 57 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    AND             reduce using rule 57 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    OR              reduce using rule 57 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    PUNTO           reduce using rule 57 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    AS              reduce using rule 57 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    LLAVEIZQ        reduce using rule 57 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    PTCOMA          reduce using rule 57 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    PDER            reduce using rule 57 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    COMA            reduce using rule 57 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)
    LLAVEDER        reduce using rule 57 (expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER .)


state 209

    (58) expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .

    MAS             reduce using rule 58 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MENOS           reduce using rule 58 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MULTIPLICACION  reduce using rule 58 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    DIVISION        reduce using rule 58 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MODULO          reduce using rule 58 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MAYOR           reduce using rule 58 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MENOR           reduce using rule 58 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MAYORIGUAL      reduce using rule 58 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    MENORIGUAL      reduce using rule 58 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    IGUALIGUAL      reduce using rule 58 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    DIFERENTE       reduce using rule 58 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    AND             reduce using rule 58 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    OR              reduce using rule 58 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    PUNTO           reduce using rule 58 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    AS              reduce using rule 58 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    LLAVEIZQ        reduce using rule 58 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    PTCOMA          reduce using rule 58 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    PDER            reduce using rule 58 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    COMA            reduce using rule 58 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)
    LLAVEDER        reduce using rule 58 (expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER .)


state 210

    (84) elseif -> ELSE IF expresion LLAVEIZQ expresion . LLAVEDER
    (52) expresion -> expresion . MAS expresion
    (53) expresion -> expresion . MENOS expresion
    (54) expresion -> expresion . MULTIPLICACION expresion
    (55) expresion -> expresion . DIVISION expresion
    (56) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . MAYOR expresion
    (61) expresion -> expresion . MENOR expresion
    (62) expresion -> expresion . MAYORIGUAL expresion
    (63) expresion -> expresion . MENORIGUAL expresion
    (64) expresion -> expresion . IGUALIGUAL expresion
    (65) expresion -> expresion . DIFERENTE expresion
    (66) expresion -> expresion . AND expresion
    (67) expresion -> expresion . OR expresion
    (74) tostring -> expresion . PUNTO TOSTRING PIZQ PDER
    (75) tostring -> expresion . PUNTO TOOWNED PIZQ PDER
    (76) as -> expresion . AS I64
    (77) as -> expresion . AS F64

    LLAVEDER        shift and go to state 212
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    MULTIPLICACION  shift and go to state 108
    DIVISION        shift and go to state 109
    MODULO          shift and go to state 110
    MAYOR           shift and go to state 111
    MENOR           shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    MENORIGUAL      shift and go to state 114
    IGUALIGUAL      shift and go to state 115
    DIFERENTE       shift and go to state 116
    AND             shift and go to state 117
    OR              shift and go to state 118
    PUNTO           shift and go to state 119
    AS              shift and go to state 120


state 211

    (81) if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER .

    MAS             reduce using rule 81 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER .)
    MENOS           reduce using rule 81 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER .)
    MULTIPLICACION  reduce using rule 81 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER .)
    DIVISION        reduce using rule 81 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER .)
    MODULO          reduce using rule 81 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER .)
    MAYOR           reduce using rule 81 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER .)
    MENOR           reduce using rule 81 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER .)
    MAYORIGUAL      reduce using rule 81 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER .)
    MENORIGUAL      reduce using rule 81 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER .)
    IGUALIGUAL      reduce using rule 81 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER .)
    DIFERENTE       reduce using rule 81 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER .)
    AND             reduce using rule 81 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER .)
    OR              reduce using rule 81 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER .)
    PUNTO           reduce using rule 81 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER .)
    AS              reduce using rule 81 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 81 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER .)
    PTCOMA          reduce using rule 81 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER .)
    PDER            reduce using rule 81 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER .)
    COMA            reduce using rule 81 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER .)
    LLAVEDER        reduce using rule 81 (if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER .)


state 212

    (84) elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER .

    ELSE            reduce using rule 84 (elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER .)
    MAS             reduce using rule 84 (elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER .)
    MENOS           reduce using rule 84 (elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER .)
    MULTIPLICACION  reduce using rule 84 (elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER .)
    DIVISION        reduce using rule 84 (elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER .)
    MODULO          reduce using rule 84 (elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER .)
    MAYOR           reduce using rule 84 (elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER .)
    MENOR           reduce using rule 84 (elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER .)
    MAYORIGUAL      reduce using rule 84 (elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER .)
    MENORIGUAL      reduce using rule 84 (elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER .)
    IGUALIGUAL      reduce using rule 84 (elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER .)
    DIFERENTE       reduce using rule 84 (elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER .)
    AND             reduce using rule 84 (elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER .)
    OR              reduce using rule 84 (elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER .)
    PUNTO           reduce using rule 84 (elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER .)
    AS              reduce using rule 84 (elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER .)
    LLAVEIZQ        reduce using rule 84 (elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER .)
    PTCOMA          reduce using rule 84 (elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER .)
    PDER            reduce using rule 84 (elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER .)
    COMA            reduce using rule 84 (elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER .)
    LLAVEDER        reduce using rule 84 (elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER .)

