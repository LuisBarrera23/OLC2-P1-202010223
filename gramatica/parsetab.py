
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocMAYORMENORIGUALMENORMAYORIGUALIGUALIGUALDIFERENTEleftMASMENOSleftMULTIPLICACIONDIVISIONMODULOrightNOTUMENOSAND AS BOOL CADENA CHAR COMA CORDER CORIZQ DECIMAL DIFERENTE DIVISION DOBLEPT ELSE ENTERO F64 FALSE I64 ID IF IGUAL IGUALIGUAL LET LLAVEDER LLAVEIZQ MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MODULO MULTIPLICACION MUT NOT OR PDER PIZQ POW POWF PRINTLN PTCOMA PUNTO STR STRING TOOWNED TOSTRING TRUEinit : instruccionesbloque  : LLAVEIZQ  LLAVEDER\n            | LLAVEIZQ  instrucciones LLAVEDER instrucciones : instrucciones instruccioninstrucciones : instruccioninstruccion : print PTCOMA\n                | declaracion PTCOMA\n                | asignacion PTCOMA\n                | if_iprint : PRINTLN NOT PIZQ expresion PDER declaracion : LET MUT ID DOBLEPT tipo_dato IGUAL expresion\n                | LET ID DOBLEPT tipo_dato IGUAL expresion declaracion : LET MUT ID IGUAL expresion\n                | LET ID IGUAL expresion asignacion : ID IGUAL expresionif_i : IF expresion bloque elseelse : ELSE if_i\n            | ELSE  bloque\n            | emptyempty : expresion : MENOS expresion %prec UMENOS\n                | expresion MAS expresion\n                | expresion MENOS expresion\n                | expresion MULTIPLICACION expresion\n                | expresion DIVISION expresion\n                | expresion MODULO expresion\n                | I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER \n                | F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER \n                | PIZQ expresion PDERexpresion : expresion MAYOR expresion\n                | expresion MENOR expresion\n                | expresion MAYORIGUAL expresion\n                | expresion MENORIGUAL expresion\n                | expresion IGUALIGUAL expresion\n                | expresion DIFERENTE expresion\n                | expresion AND expresion\n                | expresion OR expresion\n                | NOT expresionexpresion : tostring\n                | astostring : expresion PUNTO TOSTRING PIZQ PDER\n                | expresion PUNTO TOOWNED PIZQ PDERas : expresion AS I64 \n        | expresion AS F64 expresion : ENTERO\n                    | DECIMAL\n                    | ID\n                    | CADENA\n                    | TRUE\n                    | FALSE tipo_dato : I64\n                     | F64\n                     | BOOL\n                     | CHAR\n                     | STR\n                     | STRING\n                     '
    
_lr_action_items = {'PRINTLN':([0,2,3,7,12,13,14,15,39,55,72,74,92,93,101,102,105,],[8,8,-5,-9,-4,-6,-7,-8,-20,8,-16,-19,-2,8,-17,-18,-3,]),'LET':([0,2,3,7,12,13,14,15,39,55,72,74,92,93,101,102,105,],[9,9,-5,-9,-4,-6,-7,-8,-20,9,-16,-19,-2,9,-17,-18,-3,]),'ID':([0,2,3,7,9,11,12,13,14,15,17,19,21,23,25,34,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,55,63,72,74,92,93,100,101,102,105,108,112,113,117,118,],[10,10,-5,-9,18,30,-4,-6,-7,-8,35,30,30,30,30,30,30,-20,30,30,30,30,30,30,30,30,30,30,30,30,30,10,30,-16,-19,-2,10,30,-17,-18,-3,30,30,30,30,30,]),'IF':([0,2,3,7,12,13,14,15,39,55,72,73,74,92,93,101,102,105,],[11,11,-5,-9,-4,-6,-7,-8,-20,11,-16,11,-19,-2,11,-17,-18,-3,]),'$end':([1,2,3,7,12,13,14,15,39,72,74,92,101,102,105,],[0,-1,-5,-9,-4,-6,-7,-8,-20,-16,-19,-2,-17,-18,-3,]),'LLAVEDER':([3,7,12,13,14,15,39,55,72,74,92,93,101,102,105,],[-5,-9,-4,-6,-7,-8,-20,92,-16,-19,-2,105,-17,-18,-3,]),'PTCOMA':([4,5,6,26,27,28,29,30,31,32,33,38,56,60,71,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,95,97,99,109,110,111,114,121,122,],[13,14,15,-39,-40,-45,-46,-47,-48,-49,-50,-15,-21,-38,-14,-22,-23,-24,-25,-26,-30,-31,-32,-33,-34,-35,-36,-37,-43,-44,-29,-10,-13,-12,-41,-42,-11,-27,-28,]),'NOT':([8,11,19,21,23,25,34,37,40,41,42,43,44,45,46,47,48,49,50,51,52,63,100,108,112,113,117,118,],[16,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'MUT':([9,],[17,]),'IGUAL':([10,18,35,64,65,66,67,68,69,70,98,],[19,37,63,100,-51,-52,-53,-54,-55,-56,108,]),'MENOS':([11,19,20,21,23,25,26,27,28,29,30,31,32,33,34,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,56,58,60,61,63,71,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,95,99,100,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,],[21,21,41,21,21,21,-39,-40,-45,-46,-47,-48,-49,-50,21,21,41,21,21,21,21,21,21,21,21,21,21,21,21,21,-21,41,-38,41,21,41,-22,-23,-24,-25,-26,41,41,41,41,41,41,41,41,-43,-44,-29,41,21,21,41,-41,-42,21,21,41,41,41,21,21,41,41,-27,-28,]),'I64':([11,19,21,23,25,34,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,62,63,100,108,112,113,117,118,],[22,22,22,22,22,22,65,22,22,22,22,22,22,22,22,22,22,22,22,22,22,90,65,22,22,22,22,22,22,22,]),'F64':([11,19,21,23,25,34,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,62,63,100,108,112,113,117,118,],[24,24,24,24,24,24,66,24,24,24,24,24,24,24,24,24,24,24,24,24,24,91,66,24,24,24,24,24,24,24,]),'PIZQ':([11,16,19,21,23,25,34,37,40,41,42,43,44,45,46,47,48,49,50,51,52,63,88,89,100,106,107,108,112,113,117,118,],[23,34,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,103,104,23,112,113,23,23,23,23,23,]),'ENTERO':([11,19,21,23,25,34,37,40,41,42,43,44,45,46,47,48,49,50,51,52,63,100,108,112,113,117,118,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'DECIMAL':([11,19,21,23,25,34,37,40,41,42,43,44,45,46,47,48,49,50,51,52,63,100,108,112,113,117,118,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'CADENA':([11,19,21,23,25,34,37,40,41,42,43,44,45,46,47,48,49,50,51,52,63,100,108,112,113,117,118,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'TRUE':([11,19,21,23,25,34,37,40,41,42,43,44,45,46,47,48,49,50,51,52,63,100,108,112,113,117,118,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'FALSE':([11,19,21,23,25,34,37,40,41,42,43,44,45,46,47,48,49,50,51,52,63,100,108,112,113,117,118,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'DOBLEPT':([18,22,24,35,57,59,],[36,57,59,62,94,96,]),'MAS':([20,26,27,28,29,30,31,32,33,38,56,58,60,61,71,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,95,99,109,110,111,114,115,116,119,120,121,122,],[40,-39,-40,-45,-46,-47,-48,-49,-50,40,-21,40,-38,40,40,-22,-23,-24,-25,-26,40,40,40,40,40,40,40,40,-43,-44,-29,40,40,-41,-42,40,40,40,40,40,-27,-28,]),'MULTIPLICACION':([20,26,27,28,29,30,31,32,33,38,56,58,60,61,71,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,95,99,109,110,111,114,115,116,119,120,121,122,],[42,-39,-40,-45,-46,-47,-48,-49,-50,42,-21,42,-38,42,42,42,42,-24,-25,-26,42,42,42,42,42,42,42,42,-43,-44,-29,42,42,-41,-42,42,42,42,42,42,-27,-28,]),'DIVISION':([20,26,27,28,29,30,31,32,33,38,56,58,60,61,71,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,95,99,109,110,111,114,115,116,119,120,121,122,],[43,-39,-40,-45,-46,-47,-48,-49,-50,43,-21,43,-38,43,43,43,43,-24,-25,-26,43,43,43,43,43,43,43,43,-43,-44,-29,43,43,-41,-42,43,43,43,43,43,-27,-28,]),'MODULO':([20,26,27,28,29,30,31,32,33,38,56,58,60,61,71,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,95,99,109,110,111,114,115,116,119,120,121,122,],[44,-39,-40,-45,-46,-47,-48,-49,-50,44,-21,44,-38,44,44,44,44,-24,-25,-26,44,44,44,44,44,44,44,44,-43,-44,-29,44,44,-41,-42,44,44,44,44,44,-27,-28,]),'MAYOR':([20,26,27,28,29,30,31,32,33,38,56,58,60,61,71,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,95,99,109,110,111,114,115,116,119,120,121,122,],[45,-39,-40,-45,-46,-47,-48,-49,-50,45,-21,45,-38,45,45,-22,-23,-24,-25,-26,None,None,None,None,None,None,45,45,-43,-44,-29,45,45,-41,-42,45,45,45,45,45,-27,-28,]),'MENOR':([20,26,27,28,29,30,31,32,33,38,56,58,60,61,71,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,95,99,109,110,111,114,115,116,119,120,121,122,],[46,-39,-40,-45,-46,-47,-48,-49,-50,46,-21,46,-38,46,46,-22,-23,-24,-25,-26,None,None,None,None,None,None,46,46,-43,-44,-29,46,46,-41,-42,46,46,46,46,46,-27,-28,]),'MAYORIGUAL':([20,26,27,28,29,30,31,32,33,38,56,58,60,61,71,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,95,99,109,110,111,114,115,116,119,120,121,122,],[47,-39,-40,-45,-46,-47,-48,-49,-50,47,-21,47,-38,47,47,-22,-23,-24,-25,-26,None,None,None,None,None,None,47,47,-43,-44,-29,47,47,-41,-42,47,47,47,47,47,-27,-28,]),'MENORIGUAL':([20,26,27,28,29,30,31,32,33,38,56,58,60,61,71,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,95,99,109,110,111,114,115,116,119,120,121,122,],[48,-39,-40,-45,-46,-47,-48,-49,-50,48,-21,48,-38,48,48,-22,-23,-24,-25,-26,None,None,None,None,None,None,48,48,-43,-44,-29,48,48,-41,-42,48,48,48,48,48,-27,-28,]),'IGUALIGUAL':([20,26,27,28,29,30,31,32,33,38,56,58,60,61,71,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,95,99,109,110,111,114,115,116,119,120,121,122,],[49,-39,-40,-45,-46,-47,-48,-49,-50,49,-21,49,-38,49,49,-22,-23,-24,-25,-26,None,None,None,None,None,None,49,49,-43,-44,-29,49,49,-41,-42,49,49,49,49,49,-27,-28,]),'DIFERENTE':([20,26,27,28,29,30,31,32,33,38,56,58,60,61,71,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,95,99,109,110,111,114,115,116,119,120,121,122,],[50,-39,-40,-45,-46,-47,-48,-49,-50,50,-21,50,-38,50,50,-22,-23,-24,-25,-26,None,None,None,None,None,None,50,50,-43,-44,-29,50,50,-41,-42,50,50,50,50,50,-27,-28,]),'AND':([20,26,27,28,29,30,31,32,33,38,56,58,60,61,71,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,95,99,109,110,111,114,115,116,119,120,121,122,],[51,-39,-40,-45,-46,-47,-48,-49,-50,51,-21,51,-38,51,51,-22,-23,-24,-25,-26,-30,-31,-32,-33,-34,-35,-36,51,-43,-44,-29,51,51,-41,-42,51,51,51,51,51,-27,-28,]),'OR':([20,26,27,28,29,30,31,32,33,38,56,58,60,61,71,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,95,99,109,110,111,114,115,116,119,120,121,122,],[52,-39,-40,-45,-46,-47,-48,-49,-50,52,-21,52,-38,52,52,-22,-23,-24,-25,-26,-30,-31,-32,-33,-34,-35,-36,-37,-43,-44,-29,52,52,-41,-42,52,52,52,52,52,-27,-28,]),'PUNTO':([20,26,27,28,29,30,31,32,33,38,56,58,60,61,71,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,95,99,109,110,111,114,115,116,119,120,121,122,],[53,-39,-40,-45,-46,-47,-48,-49,-50,53,-21,53,-38,53,53,-22,-23,-24,-25,-26,-30,-31,-32,-33,-34,-35,-36,-37,-43,-44,-29,53,53,-41,-42,53,53,53,53,53,-27,-28,]),'AS':([20,26,27,28,29,30,31,32,33,38,56,58,60,61,71,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,95,99,109,110,111,114,115,116,119,120,121,122,],[54,-39,-40,-45,-46,-47,-48,-49,-50,54,-21,54,-38,54,54,-22,-23,-24,-25,-26,-30,-31,-32,-33,-34,-35,-36,-37,-43,-44,-29,54,54,-41,-42,54,54,54,54,54,-27,-28,]),'LLAVEIZQ':([20,26,27,28,29,30,31,32,33,56,60,73,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,95,110,111,121,122,],[55,-39,-40,-45,-46,-47,-48,-49,-50,-21,-38,55,-22,-23,-24,-25,-26,-30,-31,-32,-33,-34,-35,-36,-37,-43,-44,-29,-41,-42,-27,-28,]),'PDER':([26,27,28,29,30,31,32,33,56,58,60,61,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,95,103,104,110,111,119,120,121,122,],[-39,-40,-45,-46,-47,-48,-49,-50,-21,95,-38,97,-22,-23,-24,-25,-26,-30,-31,-32,-33,-34,-35,-36,-37,-43,-44,-29,110,111,-41,-42,121,122,-27,-28,]),'COMA':([26,27,28,29,30,31,32,33,56,60,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,95,110,111,115,116,121,122,],[-39,-40,-45,-46,-47,-48,-49,-50,-21,-38,-22,-23,-24,-25,-26,-30,-31,-32,-33,-34,-35,-36,-37,-43,-44,-29,-41,-42,117,118,-27,-28,]),'BOOL':([36,62,],[67,67,]),'CHAR':([36,62,],[68,68,]),'STR':([36,62,],[69,69,]),'STRING':([36,62,],[70,70,]),'ELSE':([39,92,105,],[73,-2,-3,]),'TOSTRING':([53,],[88,]),'TOOWNED':([53,],[89,]),'POW':([94,],[106,]),'POWF':([96,],[107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,55,],[2,93,]),'instruccion':([0,2,55,93,],[3,12,3,12,]),'print':([0,2,55,93,],[4,4,4,4,]),'declaracion':([0,2,55,93,],[5,5,5,5,]),'asignacion':([0,2,55,93,],[6,6,6,6,]),'if_i':([0,2,55,73,93,],[7,7,7,101,7,]),'expresion':([11,19,21,23,25,34,37,40,41,42,43,44,45,46,47,48,49,50,51,52,63,100,108,112,113,117,118,],[20,38,56,58,60,61,71,75,76,77,78,79,80,81,82,83,84,85,86,87,99,109,114,115,116,119,120,]),'tostring':([11,19,21,23,25,34,37,40,41,42,43,44,45,46,47,48,49,50,51,52,63,100,108,112,113,117,118,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'as':([11,19,21,23,25,34,37,40,41,42,43,44,45,46,47,48,49,50,51,52,63,100,108,112,113,117,118,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'bloque':([20,73,],[39,102,]),'tipo_dato':([36,62,],[64,98,]),'else':([39,],[72,]),'empty':([39,],[74,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','gramatica.py',174),
  ('bloque -> LLAVEIZQ LLAVEDER','bloque',2,'p_bloque','gramatica.py',178),
  ('bloque -> LLAVEIZQ instrucciones LLAVEDER','bloque',3,'p_bloque','gramatica.py',179),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','gramatica.py',187),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',192),
  ('instruccion -> print PTCOMA','instruccion',2,'p_instruccion','gramatica.py',196),
  ('instruccion -> declaracion PTCOMA','instruccion',2,'p_instruccion','gramatica.py',197),
  ('instruccion -> asignacion PTCOMA','instruccion',2,'p_instruccion','gramatica.py',198),
  ('instruccion -> if_i','instruccion',1,'p_instruccion','gramatica.py',199),
  ('print -> PRINTLN NOT PIZQ expresion PDER','print',5,'p_print','gramatica.py',203),
  ('declaracion -> LET MUT ID DOBLEPT tipo_dato IGUAL expresion','declaracion',7,'p_declaracion1','gramatica.py',207),
  ('declaracion -> LET ID DOBLEPT tipo_dato IGUAL expresion','declaracion',6,'p_declaracion1','gramatica.py',208),
  ('declaracion -> LET MUT ID IGUAL expresion','declaracion',5,'p_declaracion2','gramatica.py',216),
  ('declaracion -> LET ID IGUAL expresion','declaracion',4,'p_declaracion2','gramatica.py',217),
  ('asignacion -> ID IGUAL expresion','asignacion',3,'p_asignacion','gramatica.py',225),
  ('if_i -> IF expresion bloque else','if_i',4,'p_if_instruccion','gramatica.py',229),
  ('else -> ELSE if_i','else',2,'p_else_instruccion','gramatica.py',233),
  ('else -> ELSE bloque','else',2,'p_else_instruccion','gramatica.py',234),
  ('else -> empty','else',1,'p_else_instruccion','gramatica.py',235),
  ('empty -> <empty>','empty',0,'p_vacio','gramatica.py',241),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_aritmetica','gramatica.py',246),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',247),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',248),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',249),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',250),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',251),
  ('expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER','expresion',9,'p_expresion_aritmetica','gramatica.py',252),
  ('expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER','expresion',9,'p_expresion_aritmetica','gramatica.py',253),
  ('expresion -> PIZQ expresion PDER','expresion',3,'p_expresion_aritmetica','gramatica.py',254),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion_relacionalesLogicas','gramatica.py',279),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresion_relacionalesLogicas','gramatica.py',280),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_relacionalesLogicas','gramatica.py',281),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_relacionalesLogicas','gramatica.py',282),
  ('expresion -> expresion IGUALIGUAL expresion','expresion',3,'p_expresion_relacionalesLogicas','gramatica.py',283),
  ('expresion -> expresion DIFERENTE expresion','expresion',3,'p_expresion_relacionalesLogicas','gramatica.py',284),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_relacionalesLogicas','gramatica.py',285),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_relacionalesLogicas','gramatica.py',286),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_relacionalesLogicas','gramatica.py',287),
  ('expresion -> tostring','expresion',1,'p_expresiones_variadas','gramatica.py',310),
  ('expresion -> as','expresion',1,'p_expresiones_variadas','gramatica.py',311),
  ('tostring -> expresion PUNTO TOSTRING PIZQ PDER','tostring',5,'p_tostring','gramatica.py',315),
  ('tostring -> expresion PUNTO TOOWNED PIZQ PDER','tostring',5,'p_tostring','gramatica.py',316),
  ('as -> expresion AS I64','as',3,'p_as','gramatica.py',321),
  ('as -> expresion AS F64','as',3,'p_as','gramatica.py',322),
  ('expresion -> ENTERO','expresion',1,'p_expresion_primitiva','gramatica.py',331),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_primitiva','gramatica.py',332),
  ('expresion -> ID','expresion',1,'p_expresion_primitiva','gramatica.py',333),
  ('expresion -> CADENA','expresion',1,'p_expresion_primitiva','gramatica.py',334),
  ('expresion -> TRUE','expresion',1,'p_expresion_primitiva','gramatica.py',335),
  ('expresion -> FALSE','expresion',1,'p_expresion_primitiva','gramatica.py',336),
  ('tipo_dato -> I64','tipo_dato',1,'p_tipo_dato','gramatica.py',352),
  ('tipo_dato -> F64','tipo_dato',1,'p_tipo_dato','gramatica.py',353),
  ('tipo_dato -> BOOL','tipo_dato',1,'p_tipo_dato','gramatica.py',354),
  ('tipo_dato -> CHAR','tipo_dato',1,'p_tipo_dato','gramatica.py',355),
  ('tipo_dato -> STR','tipo_dato',1,'p_tipo_dato','gramatica.py',356),
  ('tipo_dato -> STRING','tipo_dato',1,'p_tipo_dato','gramatica.py',357),
]
