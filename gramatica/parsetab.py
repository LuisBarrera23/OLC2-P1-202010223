
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocMAYORMENORIGUALMENORMAYORIGUALIGUALIGUALDIFERENTEleftMASMENOSleftMULTIPLICACIONDIVISIONMODULOrightNOTUMENOSAND AS BOOL BREAK CADENA CARACTER CHAR CHARS COMA CONTINUE CORDER CORIZQ DECIMAL DIFERENTE DIVISION DOBLEPT ELSE ENTERO F64 FALSE FLECHA FN FOR I64 ID IF IGUAL IGUALIGUAL IN LET LLAVEDER LLAVEIZQ LOOP MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MODULO MULTIPLICACION MUT NOT OR PDER PIZQ POW POWF PRINTLN PTCOMA PUNTO RETURN STR STRING TOOWNED TOSTRING TRUE WHILE Yinit : funciones_structsfunciones_structs : funciones_structs funcion_structfunciones_structs : funcion_struct funcion_struct : funcionfuncion : FN ID PIZQ PDER bloque\n                | FN ID PIZQ PDER FLECHA tipo_dato bloque\n                | FN ID PIZQ parametros PDER bloque\n                | FN ID PIZQ parametros PDER FLECHA tipo_dato bloque  parametros : parametros COMA parametro parametros : parametro parametro : ID DOBLEPT tipo_dato llamadaF : ID PIZQ PDER\n                | ID PIZQ lista_expresiones PDER  lista_expresiones : lista_expresiones COMA  expresion lista_expresiones : expresionbloque  : LLAVEIZQ  LLAVEDER\n            | LLAVEIZQ  instrucciones LLAVEDER instrucciones : instrucciones instruccioninstrucciones : instruccioninstruccion : print PTCOMA\n                | declaracion PTCOMA\n                | asignacion PTCOMA\n                | if_i\n                | llamadaF PTCOMA\n                | return PTCOMA\n                | loop \n                | break PTCOMA\n                | while\n                | continue PTCOMA\n                | for print : PRINTLN NOT PIZQ lista_expresiones PDER return : RETURN \n                | RETURN expresiondeclaracion : LET MUT ID DOBLEPT tipo_dato IGUAL expresion\n                | LET ID DOBLEPT tipo_dato IGUAL expresion declaracion : LET MUT ID IGUAL expresion\n                | LET ID IGUAL expresion asignacion : ID IGUAL expresionif_i : IF expresion bloque elseelse : ELSE if_i\n            | ELSE  bloque\n            | emptyempty : loop : LOOP bloquebreak : BREAK \n                | BREAK expresionwhile : WHILE expresion bloque continue : CONTINUE for : FOR ID IN expresion PUNTO PUNTO expresion bloque  for : FOR ID IN expresion PUNTO CHARS PIZQ PDER bloqueexpresion : MENOS expresion %prec UMENOS\n                | expresion MAS expresion\n                | expresion MENOS expresion\n                | expresion MULTIPLICACION expresion\n                | expresion DIVISION expresion\n                | expresion MODULO expresion\n                | I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER \n                | F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER \n                | PIZQ expresion PDERexpresion : expresion MAYOR expresion\n                | expresion MENOR expresion\n                | expresion MAYORIGUAL expresion\n                | expresion MENORIGUAL expresion\n                | expresion IGUALIGUAL expresion\n                | expresion DIFERENTE expresion\n                | expresion AND expresion\n                | expresion OR expresion\n                | NOT expresionexpresion : tostring\n                | as\n                | if_e\n                | llamadaF\n                | looptostring : expresion PUNTO TOSTRING PIZQ PDER\n                | expresion PUNTO TOOWNED PIZQ PDERas : expresion AS I64 \n        | expresion AS F64  if_e : IF expresion LLAVEIZQ expresion LLAVEDER\n            |  IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER\n            |  IF expresion LLAVEIZQ expresion LLAVEDER listaelse\n            |  IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER listaelse : listaelse elseif listaelse : elseif elseif : ELSE IF expresion LLAVEIZQ expresion LLAVEDERexpresion : ENTERO\n                    | DECIMAL\n                    | ID\n                    | CARACTER\n                    | CADENA\n                    | TRUE\n                    | FALSE tipo_dato : I64\n                     | F64\n                     | BOOL\n                     | CHAR\n                     | str\n                     | STRING\n                     str : Y STR'
    
_lr_action_items = {'FN':([0,2,3,4,6,14,28,52,56,57,128,],[5,5,-3,-4,-2,-5,-16,-7,-6,-17,-8,]),'$end':([1,2,3,4,6,14,28,52,56,57,128,],[0,-1,-3,-4,-2,-5,-16,-7,-6,-17,-8,]),'ID':([5,8,16,18,28,29,30,34,37,39,41,43,45,46,48,49,51,57,58,59,60,61,62,63,64,65,67,69,70,71,73,75,77,91,96,99,105,106,107,108,109,110,111,112,113,114,115,116,117,118,126,127,131,135,136,137,139,164,167,168,174,179,180,181,191,192,195,196,197,201,204,205,],[7,9,44,9,-16,44,-19,-23,-26,-28,-30,68,85,85,85,85,94,-17,-18,-20,-21,-22,-24,-25,-27,-29,97,85,85,85,85,85,85,-44,85,85,-43,85,85,85,85,85,85,85,85,85,85,85,85,85,-47,85,85,85,85,-39,-42,85,-40,-41,85,85,85,85,85,85,85,85,-49,85,-50,85,]),'PIZQ':([7,44,45,46,48,49,66,69,70,71,73,75,77,85,96,99,106,107,108,109,110,111,112,113,114,115,116,117,118,127,131,135,136,153,154,164,171,172,174,179,180,181,182,191,192,195,196,201,205,],[8,70,75,75,75,75,96,75,75,75,75,75,75,70,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,169,170,75,179,180,75,75,75,75,190,75,75,75,75,75,75,]),'PDER':([8,11,12,19,20,21,22,23,24,25,28,54,55,57,70,78,79,80,81,82,83,84,85,86,87,88,89,91,101,102,103,121,123,125,129,134,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,158,165,169,170,176,177,178,185,186,190,194,202,203,206,208,209,211,212,],[10,17,-10,-11,-92,-93,-94,-95,-96,-97,-16,-9,-98,-17,101,-69,-70,-71,-72,-73,-85,-86,-87,-88,-89,-90,-91,-44,-12,134,-15,-51,158,-68,161,-13,-52,-53,-54,-55,-56,-60,-61,-62,-63,-64,-65,-66,-67,-76,-77,-59,-14,177,178,-78,-74,-75,-80,-83,198,-82,208,209,-79,-57,-58,-81,-84,]),'DOBLEPT':([9,68,74,76,97,122,124,],[13,98,122,124,130,157,159,]),'FLECHA':([10,17,],[15,53,]),'LLAVEIZQ':([10,17,20,21,22,23,24,25,27,28,47,55,57,72,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,101,104,121,125,134,138,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,158,176,177,178,184,185,186,189,193,194,198,199,206,208,209,211,212,],[16,16,-92,-93,-94,-95,-96,-97,16,-16,16,-98,-17,16,-69,-70,-71,-72,-73,-85,-86,-87,-88,-89,-90,-91,-44,16,16,-12,136,-51,-68,-13,16,-52,-53,-54,-55,-56,-60,-61,-62,-63,-64,-65,-66,-67,-76,-77,-59,-78,-74,-75,192,-80,-83,16,201,-82,16,205,-79,-57,-58,-81,-84,]),'COMA':([11,12,19,20,21,22,23,24,25,28,54,55,57,78,79,80,81,82,83,84,85,86,87,88,89,91,101,102,103,121,125,129,134,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,158,165,176,177,178,185,186,187,188,194,206,208,209,211,212,],[18,-10,-11,-92,-93,-94,-95,-96,-97,-16,-9,-98,-17,-69,-70,-71,-72,-73,-85,-86,-87,-88,-89,-90,-91,-44,-12,135,-15,-51,-68,135,-13,-52,-53,-54,-55,-56,-60,-61,-62,-63,-64,-65,-66,-67,-76,-77,-59,-14,-78,-74,-75,-80,-83,195,196,-82,-79,-57,-58,-81,-84,]),'I64':([13,15,45,46,48,49,53,69,70,71,73,75,77,96,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,120,127,130,131,135,136,164,174,179,180,181,191,192,195,196,201,205,],[20,20,74,74,74,74,20,74,74,74,74,74,74,74,20,74,74,74,74,74,74,74,74,74,74,74,74,74,74,155,74,20,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'F64':([13,15,45,46,48,49,53,69,70,71,73,75,77,96,98,99,106,107,108,109,110,111,112,113,114,115,116,117,118,120,127,130,131,135,136,164,174,179,180,181,191,192,195,196,201,205,],[21,21,76,76,76,76,21,76,76,76,76,76,76,76,21,76,76,76,76,76,76,76,76,76,76,76,76,76,76,156,76,21,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'BOOL':([13,15,53,98,130,],[22,22,22,22,22,]),'CHAR':([13,15,53,98,130,],[23,23,23,23,23,]),'STRING':([13,15,53,98,130,],[25,25,25,25,25,]),'Y':([13,15,53,98,130,],[26,26,26,26,26,]),'LLAVEDER':([16,28,29,30,34,37,39,41,57,58,59,60,61,62,63,64,65,78,79,80,81,82,83,84,85,86,87,88,89,91,101,105,121,125,126,134,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,158,166,167,168,176,177,178,185,186,194,197,200,204,206,207,208,209,210,211,212,],[28,-16,57,-19,-23,-26,-28,-30,-17,-18,-20,-21,-22,-24,-25,-27,-29,-69,-70,-71,-72,-73,-85,-86,-87,-88,-89,-90,-91,-44,-12,-43,-51,-68,-47,-13,-39,-42,-52,-53,-54,-55,-56,-60,-61,-62,-63,-64,-65,-66,-67,-76,-77,-59,176,-40,-41,-78,-74,-75,-80,-83,-82,-49,206,-50,-79,211,-57,-58,212,-81,-84,]),'PRINTLN':([16,28,29,30,34,37,39,41,57,58,59,60,61,62,63,64,65,91,105,126,137,139,167,168,197,204,],[42,-16,42,-19,-23,-26,-28,-30,-17,-18,-20,-21,-22,-24,-25,-27,-29,-44,-43,-47,-39,-42,-40,-41,-49,-50,]),'LET':([16,28,29,30,34,37,39,41,57,58,59,60,61,62,63,64,65,91,105,126,137,139,167,168,197,204,],[43,-16,43,-19,-23,-26,-28,-30,-17,-18,-20,-21,-22,-24,-25,-27,-29,-44,-43,-47,-39,-42,-40,-41,-49,-50,]),'IF':([16,28,29,30,34,37,39,41,45,46,48,49,57,58,59,60,61,62,63,64,65,69,70,71,73,75,77,91,96,99,105,106,107,108,109,110,111,112,113,114,115,116,117,118,126,127,131,135,136,137,138,139,164,167,168,174,179,180,181,184,191,192,193,195,196,197,201,204,205,],[45,-16,45,-19,-23,-26,-28,-30,71,71,71,71,-17,-18,-20,-21,-22,-24,-25,-27,-29,71,71,71,71,71,71,-44,71,71,-43,71,71,71,71,71,71,71,71,71,71,71,71,71,-47,71,71,71,71,-39,45,-42,71,-40,-41,71,71,71,71,191,71,71,191,71,71,-49,71,-50,71,]),'RETURN':([16,28,29,30,34,37,39,41,57,58,59,60,61,62,63,64,65,91,105,126,137,139,167,168,197,204,],[46,-16,46,-19,-23,-26,-28,-30,-17,-18,-20,-21,-22,-24,-25,-27,-29,-44,-43,-47,-39,-42,-40,-41,-49,-50,]),'LOOP':([16,28,29,30,34,37,39,41,45,46,48,49,57,58,59,60,61,62,63,64,65,69,70,71,73,75,77,91,96,99,105,106,107,108,109,110,111,112,113,114,115,116,117,118,126,127,131,135,136,137,139,164,167,168,174,179,180,181,191,192,195,196,197,201,204,205,],[47,-16,47,-19,-23,-26,-28,-30,47,47,47,47,-17,-18,-20,-21,-22,-24,-25,-27,-29,47,47,47,47,47,47,-44,47,47,-43,47,47,47,47,47,47,47,47,47,47,47,47,47,-47,47,47,47,47,-39,-42,47,-40,-41,47,47,47,47,47,47,47,47,-49,47,-50,47,]),'BREAK':([16,28,29,30,34,37,39,41,57,58,59,60,61,62,63,64,65,91,105,126,137,139,167,168,197,204,],[48,-16,48,-19,-23,-26,-28,-30,-17,-18,-20,-21,-22,-24,-25,-27,-29,-44,-43,-47,-39,-42,-40,-41,-49,-50,]),'WHILE':([16,28,29,30,34,37,39,41,57,58,59,60,61,62,63,64,65,91,105,126,137,139,167,168,197,204,],[49,-16,49,-19,-23,-26,-28,-30,-17,-18,-20,-21,-22,-24,-25,-27,-29,-44,-43,-47,-39,-42,-40,-41,-49,-50,]),'CONTINUE':([16,28,29,30,34,37,39,41,57,58,59,60,61,62,63,64,65,91,105,126,137,139,167,168,197,204,],[50,-16,50,-19,-23,-26,-28,-30,-17,-18,-20,-21,-22,-24,-25,-27,-29,-44,-43,-47,-39,-42,-40,-41,-49,-50,]),'FOR':([16,28,29,30,34,37,39,41,57,58,59,60,61,62,63,64,65,91,105,126,137,139,167,168,197,204,],[51,-16,51,-19,-23,-26,-28,-30,-17,-18,-20,-21,-22,-24,-25,-27,-29,-44,-43,-47,-39,-42,-40,-41,-49,-50,]),'IGUAL':([20,21,22,23,24,25,44,55,68,97,132,162,],[-92,-93,-94,-95,-96,-97,69,-98,99,131,164,174,]),'STR':([26,],[55,]),'MAS':([28,57,72,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,100,101,103,104,121,123,125,133,134,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,158,160,163,165,166,175,176,177,178,183,185,186,187,188,189,194,199,200,202,203,206,207,208,209,210,211,212,],[-16,-17,106,-69,-70,-71,-72,-73,-85,-86,-87,-88,-89,-90,-91,106,-44,106,106,106,-12,106,106,-51,106,-68,106,-13,-52,-53,-54,-55,-56,106,106,106,106,106,106,106,106,-76,-77,-59,106,106,106,106,106,-78,-74,-75,106,-80,-83,106,106,106,-82,106,106,106,106,-79,106,-57,-58,106,-81,-84,]),'MENOS':([28,45,46,48,49,57,69,70,71,72,73,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,99,100,101,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,121,123,125,127,131,133,134,135,136,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,158,160,163,164,165,166,174,175,176,177,178,179,180,181,183,185,186,187,188,189,191,192,194,195,196,199,200,201,202,203,205,206,207,208,209,210,211,212,],[-16,73,73,73,73,-17,73,73,73,107,73,73,73,-69,-70,-71,-72,-73,-85,-86,-87,-88,-89,-90,-91,107,-44,107,107,73,73,107,-12,107,107,73,73,73,73,73,73,73,73,73,73,73,73,73,-51,107,-68,73,73,107,-13,73,73,-52,-53,-54,-55,-56,107,107,107,107,107,107,107,107,-76,-77,-59,107,107,73,107,107,73,107,-78,-74,-75,73,73,73,107,-80,-83,107,107,107,73,73,-82,73,73,107,107,73,107,107,73,-79,107,-57,-58,107,-81,-84,]),'MULTIPLICACION':([28,57,72,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,100,101,103,104,121,123,125,133,134,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,158,160,163,165,166,175,176,177,178,183,185,186,187,188,189,194,199,200,202,203,206,207,208,209,210,211,212,],[-16,-17,108,-69,-70,-71,-72,-73,-85,-86,-87,-88,-89,-90,-91,108,-44,108,108,108,-12,108,108,-51,108,-68,108,-13,108,108,-54,-55,-56,108,108,108,108,108,108,108,108,-76,-77,-59,108,108,108,108,108,-78,-74,-75,108,-80,-83,108,108,108,-82,108,108,108,108,-79,108,-57,-58,108,-81,-84,]),'DIVISION':([28,57,72,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,100,101,103,104,121,123,125,133,134,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,158,160,163,165,166,175,176,177,178,183,185,186,187,188,189,194,199,200,202,203,206,207,208,209,210,211,212,],[-16,-17,109,-69,-70,-71,-72,-73,-85,-86,-87,-88,-89,-90,-91,109,-44,109,109,109,-12,109,109,-51,109,-68,109,-13,109,109,-54,-55,-56,109,109,109,109,109,109,109,109,-76,-77,-59,109,109,109,109,109,-78,-74,-75,109,-80,-83,109,109,109,-82,109,109,109,109,-79,109,-57,-58,109,-81,-84,]),'MODULO':([28,57,72,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,100,101,103,104,121,123,125,133,134,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,158,160,163,165,166,175,176,177,178,183,185,186,187,188,189,194,199,200,202,203,206,207,208,209,210,211,212,],[-16,-17,110,-69,-70,-71,-72,-73,-85,-86,-87,-88,-89,-90,-91,110,-44,110,110,110,-12,110,110,-51,110,-68,110,-13,110,110,-54,-55,-56,110,110,110,110,110,110,110,110,-76,-77,-59,110,110,110,110,110,-78,-74,-75,110,-80,-83,110,110,110,-82,110,110,110,110,-79,110,-57,-58,110,-81,-84,]),'MAYOR':([28,57,72,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,100,101,103,104,121,123,125,133,134,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,158,160,163,165,166,175,176,177,178,183,185,186,187,188,189,194,199,200,202,203,206,207,208,209,210,211,212,],[-16,-17,111,-69,-70,-71,-72,-73,-85,-86,-87,-88,-89,-90,-91,111,-44,111,111,111,-12,111,111,-51,111,-68,111,-13,-52,-53,-54,-55,-56,None,None,None,None,None,None,111,111,-76,-77,-59,111,111,111,111,111,-78,-74,-75,111,-80,-83,111,111,111,-82,111,111,111,111,-79,111,-57,-58,111,-81,-84,]),'MENOR':([28,57,72,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,100,101,103,104,121,123,125,133,134,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,158,160,163,165,166,175,176,177,178,183,185,186,187,188,189,194,199,200,202,203,206,207,208,209,210,211,212,],[-16,-17,112,-69,-70,-71,-72,-73,-85,-86,-87,-88,-89,-90,-91,112,-44,112,112,112,-12,112,112,-51,112,-68,112,-13,-52,-53,-54,-55,-56,None,None,None,None,None,None,112,112,-76,-77,-59,112,112,112,112,112,-78,-74,-75,112,-80,-83,112,112,112,-82,112,112,112,112,-79,112,-57,-58,112,-81,-84,]),'MAYORIGUAL':([28,57,72,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,100,101,103,104,121,123,125,133,134,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,158,160,163,165,166,175,176,177,178,183,185,186,187,188,189,194,199,200,202,203,206,207,208,209,210,211,212,],[-16,-17,113,-69,-70,-71,-72,-73,-85,-86,-87,-88,-89,-90,-91,113,-44,113,113,113,-12,113,113,-51,113,-68,113,-13,-52,-53,-54,-55,-56,None,None,None,None,None,None,113,113,-76,-77,-59,113,113,113,113,113,-78,-74,-75,113,-80,-83,113,113,113,-82,113,113,113,113,-79,113,-57,-58,113,-81,-84,]),'MENORIGUAL':([28,57,72,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,100,101,103,104,121,123,125,133,134,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,158,160,163,165,166,175,176,177,178,183,185,186,187,188,189,194,199,200,202,203,206,207,208,209,210,211,212,],[-16,-17,114,-69,-70,-71,-72,-73,-85,-86,-87,-88,-89,-90,-91,114,-44,114,114,114,-12,114,114,-51,114,-68,114,-13,-52,-53,-54,-55,-56,None,None,None,None,None,None,114,114,-76,-77,-59,114,114,114,114,114,-78,-74,-75,114,-80,-83,114,114,114,-82,114,114,114,114,-79,114,-57,-58,114,-81,-84,]),'IGUALIGUAL':([28,57,72,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,100,101,103,104,121,123,125,133,134,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,158,160,163,165,166,175,176,177,178,183,185,186,187,188,189,194,199,200,202,203,206,207,208,209,210,211,212,],[-16,-17,115,-69,-70,-71,-72,-73,-85,-86,-87,-88,-89,-90,-91,115,-44,115,115,115,-12,115,115,-51,115,-68,115,-13,-52,-53,-54,-55,-56,None,None,None,None,None,None,115,115,-76,-77,-59,115,115,115,115,115,-78,-74,-75,115,-80,-83,115,115,115,-82,115,115,115,115,-79,115,-57,-58,115,-81,-84,]),'DIFERENTE':([28,57,72,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,100,101,103,104,121,123,125,133,134,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,158,160,163,165,166,175,176,177,178,183,185,186,187,188,189,194,199,200,202,203,206,207,208,209,210,211,212,],[-16,-17,116,-69,-70,-71,-72,-73,-85,-86,-87,-88,-89,-90,-91,116,-44,116,116,116,-12,116,116,-51,116,-68,116,-13,-52,-53,-54,-55,-56,None,None,None,None,None,None,116,116,-76,-77,-59,116,116,116,116,116,-78,-74,-75,116,-80,-83,116,116,116,-82,116,116,116,116,-79,116,-57,-58,116,-81,-84,]),'AND':([28,57,72,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,100,101,103,104,121,123,125,133,134,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,158,160,163,165,166,175,176,177,178,183,185,186,187,188,189,194,199,200,202,203,206,207,208,209,210,211,212,],[-16,-17,117,-69,-70,-71,-72,-73,-85,-86,-87,-88,-89,-90,-91,117,-44,117,117,117,-12,117,117,-51,117,-68,117,-13,-52,-53,-54,-55,-56,-60,-61,-62,-63,-64,-65,-66,117,-76,-77,-59,117,117,117,117,117,-78,-74,-75,117,-80,-83,117,117,117,-82,117,117,117,117,-79,117,-57,-58,117,-81,-84,]),'OR':([28,57,72,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,100,101,103,104,121,123,125,133,134,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,158,160,163,165,166,175,176,177,178,183,185,186,187,188,189,194,199,200,202,203,206,207,208,209,210,211,212,],[-16,-17,118,-69,-70,-71,-72,-73,-85,-86,-87,-88,-89,-90,-91,118,-44,118,118,118,-12,118,118,-51,118,-68,118,-13,-52,-53,-54,-55,-56,-60,-61,-62,-63,-64,-65,-66,-67,-76,-77,-59,118,118,118,118,118,-78,-74,-75,118,-80,-83,118,118,118,-82,118,118,118,118,-79,118,-57,-58,118,-81,-84,]),'PUNTO':([28,57,72,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,100,101,103,104,121,123,125,133,134,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,158,160,163,165,166,173,175,176,177,178,183,185,186,187,188,189,194,199,200,202,203,206,207,208,209,210,211,212,],[-16,-17,119,-69,-70,-71,-72,-73,-85,-86,-87,-88,-89,-90,-91,119,-44,119,119,119,-12,119,119,-51,119,-68,119,-13,-52,-53,-54,-55,-56,-60,-61,-62,-63,-64,-65,-66,-67,-76,-77,-59,173,119,119,119,181,119,-78,-74,-75,119,-80,-83,119,119,119,-82,119,119,119,119,-79,119,-57,-58,119,-81,-84,]),'AS':([28,57,72,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,100,101,103,104,121,123,125,133,134,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,158,160,163,165,166,175,176,177,178,183,185,186,187,188,189,194,199,200,202,203,206,207,208,209,210,211,212,],[-16,-17,120,-69,-70,-71,-72,-73,-85,-86,-87,-88,-89,-90,-91,120,-44,120,120,120,-12,120,120,-51,120,-68,120,-13,-52,-53,-54,-55,-56,-60,-61,-62,-63,-64,-65,-66,-67,-76,-77,-59,120,120,120,120,120,-78,-74,-75,120,-80,-83,120,120,120,-82,120,120,120,120,-79,120,-57,-58,120,-81,-84,]),'PTCOMA':([28,31,32,33,35,36,38,40,46,48,50,57,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,100,101,121,125,133,134,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,158,161,163,175,176,177,178,183,185,186,194,206,208,209,211,212,],[-16,59,60,61,62,63,64,65,-32,-45,-48,-17,-69,-70,-71,-72,-73,-85,-86,-87,-88,-89,-90,-91,-33,-44,-46,-38,-12,-51,-68,-37,-13,-52,-53,-54,-55,-56,-60,-61,-62,-63,-64,-65,-66,-67,-76,-77,-59,-31,-36,-35,-78,-74,-75,-34,-80,-83,-82,-79,-57,-58,-81,-84,]),'ELSE':([28,57,105,176,185,186,194,212,],[-16,-17,138,184,193,-83,-82,-84,]),'NOT':([42,45,46,48,49,69,70,71,73,75,77,96,99,106,107,108,109,110,111,112,113,114,115,116,117,118,127,131,135,136,164,174,179,180,181,191,192,195,196,201,205,],[66,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'MUT':([43,],[67,]),'ENTERO':([45,46,48,49,69,70,71,73,75,77,96,99,106,107,108,109,110,111,112,113,114,115,116,117,118,127,131,135,136,164,174,179,180,181,191,192,195,196,201,205,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'DECIMAL':([45,46,48,49,69,70,71,73,75,77,96,99,106,107,108,109,110,111,112,113,114,115,116,117,118,127,131,135,136,164,174,179,180,181,191,192,195,196,201,205,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'CARACTER':([45,46,48,49,69,70,71,73,75,77,96,99,106,107,108,109,110,111,112,113,114,115,116,117,118,127,131,135,136,164,174,179,180,181,191,192,195,196,201,205,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'CADENA':([45,46,48,49,69,70,71,73,75,77,96,99,106,107,108,109,110,111,112,113,114,115,116,117,118,127,131,135,136,164,174,179,180,181,191,192,195,196,201,205,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'TRUE':([45,46,48,49,69,70,71,73,75,77,96,99,106,107,108,109,110,111,112,113,114,115,116,117,118,127,131,135,136,164,174,179,180,181,191,192,195,196,201,205,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'FALSE':([45,46,48,49,69,70,71,73,75,77,96,99,106,107,108,109,110,111,112,113,114,115,116,117,118,127,131,135,136,164,174,179,180,181,191,192,195,196,201,205,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'IN':([94,],[127,]),'TOSTRING':([119,173,],[153,153,]),'TOOWNED':([119,173,],[154,154,]),'POW':([157,],[171,]),'POWF':([159,],[172,]),'CHARS':([173,],[182,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'funciones_structs':([0,],[2,]),'funcion_struct':([0,2,],[3,6,]),'funcion':([0,2,],[4,4,]),'parametros':([8,],[11,]),'parametro':([8,18,],[12,54,]),'bloque':([10,17,27,47,72,93,95,138,189,198,],[14,52,56,91,105,126,128,168,197,204,]),'tipo_dato':([13,15,53,98,130,],[19,27,95,132,162,]),'str':([13,15,53,98,130,],[24,24,24,24,24,]),'instrucciones':([16,],[29,]),'instruccion':([16,29,],[30,58,]),'print':([16,29,],[31,31,]),'declaracion':([16,29,],[32,32,]),'asignacion':([16,29,],[33,33,]),'if_i':([16,29,138,],[34,34,167,]),'llamadaF':([16,29,45,46,48,49,69,70,71,73,75,77,96,99,106,107,108,109,110,111,112,113,114,115,116,117,118,127,131,135,136,164,174,179,180,181,191,192,195,196,201,205,],[35,35,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'return':([16,29,],[36,36,]),'loop':([16,29,45,46,48,49,69,70,71,73,75,77,96,99,106,107,108,109,110,111,112,113,114,115,116,117,118,127,131,135,136,164,174,179,180,181,191,192,195,196,201,205,],[37,37,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'break':([16,29,],[38,38,]),'while':([16,29,],[39,39,]),'continue':([16,29,],[40,40,]),'for':([16,29,],[41,41,]),'expresion':([45,46,48,49,69,70,71,73,75,77,96,99,106,107,108,109,110,111,112,113,114,115,116,117,118,127,131,135,136,164,174,179,180,181,191,192,195,196,201,205,],[72,90,92,93,100,103,104,121,123,125,103,133,140,141,142,143,144,145,146,147,148,149,150,151,152,160,163,165,166,175,183,187,188,189,199,200,202,203,207,210,]),'tostring':([45,46,48,49,69,70,71,73,75,77,96,99,106,107,108,109,110,111,112,113,114,115,116,117,118,127,131,135,136,164,174,179,180,181,191,192,195,196,201,205,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'as':([45,46,48,49,69,70,71,73,75,77,96,99,106,107,108,109,110,111,112,113,114,115,116,117,118,127,131,135,136,164,174,179,180,181,191,192,195,196,201,205,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'if_e':([45,46,48,49,69,70,71,73,75,77,96,99,106,107,108,109,110,111,112,113,114,115,116,117,118,127,131,135,136,164,174,179,180,181,191,192,195,196,201,205,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'lista_expresiones':([70,96,],[102,129,]),'else':([105,],[137,]),'empty':([105,],[139,]),'listaelse':([176,],[185,]),'elseif':([176,185,],[186,194,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> funciones_structs','init',1,'p_init','gramatica.py',206),
  ('funciones_structs -> funciones_structs funcion_struct','funciones_structs',2,'p_funciones_structs','gramatica.py',210),
  ('funciones_structs -> funcion_struct','funciones_structs',1,'p_funciones_structs_corte','gramatica.py',215),
  ('funcion_struct -> funcion','funcion_struct',1,'p_funcion_struct','gramatica.py',219),
  ('funcion -> FN ID PIZQ PDER bloque','funcion',5,'p_funcion','gramatica.py',223),
  ('funcion -> FN ID PIZQ PDER FLECHA tipo_dato bloque','funcion',7,'p_funcion','gramatica.py',224),
  ('funcion -> FN ID PIZQ parametros PDER bloque','funcion',6,'p_funcion','gramatica.py',225),
  ('funcion -> FN ID PIZQ parametros PDER FLECHA tipo_dato bloque','funcion',8,'p_funcion','gramatica.py',226),
  ('parametros -> parametros COMA parametro','parametros',3,'p_lista_parametros','gramatica.py',237),
  ('parametros -> parametro','parametros',1,'p_lista_parametros_corte','gramatica.py',243),
  ('parametro -> ID DOBLEPT tipo_dato','parametro',3,'p_parametro','gramatica.py',248),
  ('llamadaF -> ID PIZQ PDER','llamadaF',3,'p_llamada','gramatica.py',252),
  ('llamadaF -> ID PIZQ lista_expresiones PDER','llamadaF',4,'p_llamada','gramatica.py',253),
  ('lista_expresiones -> lista_expresiones COMA expresion','lista_expresiones',3,'p_lista_expresiones','gramatica.py',260),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_lista_expresiones_corte','gramatica.py',266),
  ('bloque -> LLAVEIZQ LLAVEDER','bloque',2,'p_bloque','gramatica.py',272),
  ('bloque -> LLAVEIZQ instrucciones LLAVEDER','bloque',3,'p_bloque','gramatica.py',273),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','gramatica.py',281),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',286),
  ('instruccion -> print PTCOMA','instruccion',2,'p_instruccion','gramatica.py',290),
  ('instruccion -> declaracion PTCOMA','instruccion',2,'p_instruccion','gramatica.py',291),
  ('instruccion -> asignacion PTCOMA','instruccion',2,'p_instruccion','gramatica.py',292),
  ('instruccion -> if_i','instruccion',1,'p_instruccion','gramatica.py',293),
  ('instruccion -> llamadaF PTCOMA','instruccion',2,'p_instruccion','gramatica.py',294),
  ('instruccion -> return PTCOMA','instruccion',2,'p_instruccion','gramatica.py',295),
  ('instruccion -> loop','instruccion',1,'p_instruccion','gramatica.py',296),
  ('instruccion -> break PTCOMA','instruccion',2,'p_instruccion','gramatica.py',297),
  ('instruccion -> while','instruccion',1,'p_instruccion','gramatica.py',298),
  ('instruccion -> continue PTCOMA','instruccion',2,'p_instruccion','gramatica.py',299),
  ('instruccion -> for','instruccion',1,'p_instruccion','gramatica.py',300),
  ('print -> PRINTLN NOT PIZQ lista_expresiones PDER','print',5,'p_print','gramatica.py',304),
  ('return -> RETURN','return',1,'p_return','gramatica.py',308),
  ('return -> RETURN expresion','return',2,'p_return','gramatica.py',309),
  ('declaracion -> LET MUT ID DOBLEPT tipo_dato IGUAL expresion','declaracion',7,'p_declaracion1','gramatica.py',316),
  ('declaracion -> LET ID DOBLEPT tipo_dato IGUAL expresion','declaracion',6,'p_declaracion1','gramatica.py',317),
  ('declaracion -> LET MUT ID IGUAL expresion','declaracion',5,'p_declaracion2','gramatica.py',325),
  ('declaracion -> LET ID IGUAL expresion','declaracion',4,'p_declaracion2','gramatica.py',326),
  ('asignacion -> ID IGUAL expresion','asignacion',3,'p_asignacion','gramatica.py',334),
  ('if_i -> IF expresion bloque else','if_i',4,'p_if_instruccion','gramatica.py',338),
  ('else -> ELSE if_i','else',2,'p_else_instruccion','gramatica.py',342),
  ('else -> ELSE bloque','else',2,'p_else_instruccion','gramatica.py',343),
  ('else -> empty','else',1,'p_else_instruccion','gramatica.py',344),
  ('empty -> <empty>','empty',0,'p_vacio','gramatica.py',352),
  ('loop -> LOOP bloque','loop',2,'p_loop','gramatica.py',358),
  ('break -> BREAK','break',1,'p_break','gramatica.py',362),
  ('break -> BREAK expresion','break',2,'p_break','gramatica.py',363),
  ('while -> WHILE expresion bloque','while',3,'p_while','gramatica.py',371),
  ('continue -> CONTINUE','continue',1,'p_continue','gramatica.py',375),
  ('for -> FOR ID IN expresion PUNTO PUNTO expresion bloque','for',8,'p_for1','gramatica.py',379),
  ('for -> FOR ID IN expresion PUNTO CHARS PIZQ PDER bloque','for',9,'p_for2','gramatica.py',383),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_aritmetica','gramatica.py',387),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',388),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',389),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',390),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',391),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_aritmetica','gramatica.py',392),
  ('expresion -> I64 DOBLEPT DOBLEPT POW PIZQ expresion COMA expresion PDER','expresion',9,'p_expresion_aritmetica','gramatica.py',393),
  ('expresion -> F64 DOBLEPT DOBLEPT POWF PIZQ expresion COMA expresion PDER','expresion',9,'p_expresion_aritmetica','gramatica.py',394),
  ('expresion -> PIZQ expresion PDER','expresion',3,'p_expresion_aritmetica','gramatica.py',395),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion_relacionalesLogicas','gramatica.py',420),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresion_relacionalesLogicas','gramatica.py',421),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_relacionalesLogicas','gramatica.py',422),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_relacionalesLogicas','gramatica.py',423),
  ('expresion -> expresion IGUALIGUAL expresion','expresion',3,'p_expresion_relacionalesLogicas','gramatica.py',424),
  ('expresion -> expresion DIFERENTE expresion','expresion',3,'p_expresion_relacionalesLogicas','gramatica.py',425),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_relacionalesLogicas','gramatica.py',426),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_relacionalesLogicas','gramatica.py',427),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_relacionalesLogicas','gramatica.py',428),
  ('expresion -> tostring','expresion',1,'p_expresiones_variadas','gramatica.py',451),
  ('expresion -> as','expresion',1,'p_expresiones_variadas','gramatica.py',452),
  ('expresion -> if_e','expresion',1,'p_expresiones_variadas','gramatica.py',453),
  ('expresion -> llamadaF','expresion',1,'p_expresiones_variadas','gramatica.py',454),
  ('expresion -> loop','expresion',1,'p_expresiones_variadas','gramatica.py',455),
  ('tostring -> expresion PUNTO TOSTRING PIZQ PDER','tostring',5,'p_tostring','gramatica.py',459),
  ('tostring -> expresion PUNTO TOOWNED PIZQ PDER','tostring',5,'p_tostring','gramatica.py',460),
  ('as -> expresion AS I64','as',3,'p_as','gramatica.py',465),
  ('as -> expresion AS F64','as',3,'p_as','gramatica.py',466),
  ('if_e -> IF expresion LLAVEIZQ expresion LLAVEDER','if_e',5,'p_if_Expresion','gramatica.py',474),
  ('if_e -> IF expresion LLAVEIZQ expresion LLAVEDER ELSE LLAVEIZQ expresion LLAVEDER','if_e',9,'p_if_Expresion','gramatica.py',475),
  ('if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse','if_e',6,'p_if_Expresion','gramatica.py',476),
  ('if_e -> IF expresion LLAVEIZQ expresion LLAVEDER listaelse ELSE LLAVEIZQ expresion LLAVEDER','if_e',10,'p_if_Expresion','gramatica.py',477),
  ('listaelse -> listaelse elseif','listaelse',2,'p_elseif_lista','gramatica.py',489),
  ('listaelse -> elseif','listaelse',1,'p_elseif_otra','gramatica.py',494),
  ('elseif -> ELSE IF expresion LLAVEIZQ expresion LLAVEDER','elseif',6,'p_elseif_def','gramatica.py',498),
  ('expresion -> ENTERO','expresion',1,'p_expresion_primitiva','gramatica.py',502),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_primitiva','gramatica.py',503),
  ('expresion -> ID','expresion',1,'p_expresion_primitiva','gramatica.py',504),
  ('expresion -> CARACTER','expresion',1,'p_expresion_primitiva','gramatica.py',505),
  ('expresion -> CADENA','expresion',1,'p_expresion_primitiva','gramatica.py',506),
  ('expresion -> TRUE','expresion',1,'p_expresion_primitiva','gramatica.py',507),
  ('expresion -> FALSE','expresion',1,'p_expresion_primitiva','gramatica.py',508),
  ('tipo_dato -> I64','tipo_dato',1,'p_tipo_dato','gramatica.py',526),
  ('tipo_dato -> F64','tipo_dato',1,'p_tipo_dato','gramatica.py',527),
  ('tipo_dato -> BOOL','tipo_dato',1,'p_tipo_dato','gramatica.py',528),
  ('tipo_dato -> CHAR','tipo_dato',1,'p_tipo_dato','gramatica.py',529),
  ('tipo_dato -> str','tipo_dato',1,'p_tipo_dato','gramatica.py',530),
  ('tipo_dato -> STRING','tipo_dato',1,'p_tipo_dato','gramatica.py',531),
  ('str -> Y STR','str',2,'p_str','gramatica.py',549),
]
